0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=8, max_features='sqrt',
                                        min_impurity_decrease=0.00175,
                                        min_samples_leaf=15,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='sqrt',
                                        min_impurity_decrease=0.002,
                                        min_samples_leaf=5, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, loss='hinge', random_state=42, tol=0.01))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(alpha=0.001, hidden_layer_sizes=(10, 5),
                               random_state=42, solver='sgd'))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.8))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='sigmoid', nu=0.3, random_state=42,
                       shrinking=False))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=15,
                                        max_features=0.25,
                                        min_impurity_decrease=0.00025,
                                        random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.0005,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=10,
                                            max_features=0.75,
                                            min_impurity_decrease=0.0005,
                                            min_samples_leaf=20,
                                            min_samples_split=10,
                                            n_estimators=10, random_state=42,
                                            subsample=0.5))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=100, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc', LinearSVC(C=20.0, random_state=42, tol=0.01))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=0.5, l1_ratio=0.0,
                               loss='squared_hinge', max_iter=5, power_t=100.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(alpha=0.1, hidden_layer_sizes=(5, 10),
                               random_state=42, solver='lbfgs'))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(random_state=42, shrinking=False))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features=None, min_samples_leaf=10,
                                        n_estimators=500, random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=5,
                                            max_features=0.75,
                                            min_impurity_decrease=0.003,
                                            min_samples_leaf=15,
                                            n_estimators=1000, random_state=42,
                                            subsample=0.2))])","Pipeline(steps=[('svc',
                 SVC(C=0.01, gamma=100.0, kernel='poly', probability=True,
                     random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='tanh', alpha=0.01,
                               hidden_layer_sizes=(10, 5), random_state=42,
                               solver='lbfgs'))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.7, random_state=42, shrinking=False))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=15,
                                        max_features=0.25,
                                        min_impurity_decrease=0.00025,
                                        random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.0005,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=10,
                                            max_features=0.75,
                                            min_impurity_decrease=0.0005,
                                            min_samples_leaf=20,
                                            min_samples_split=10,
                                            n_estimators=10, random_state=42,
                                            subsample=0.5))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=100, p=1,
                                      weights='distance'))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(eta0=50.0, l1_ratio=1.0,
                               learning_rate='constant', loss='squared_hinge',
                               max_iter=5, penalty='none', power_t=100.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(alpha=0.1, hidden_layer_sizes=(5, 10),
                               random_state=42, solver='lbfgs'))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.7, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=5,
                                            max_features=0.75,
                                            min_impurity_decrease=0.003,
                                            min_samples_leaf=15,
                                            n_estimators=1000, random_state=42,
                                            subsample=0.2))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=50, p=1,
                                      weights='distance'))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='tanh', alpha=0.01,
                               hidden_layer_sizes=(10, 5), random_state=42,
                               solver='lbfgs'))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.7, random_state=42, shrinking=False))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.1, hidden_layer_sizes=(5, 10),
                               random_state=42, solver='lbfgs'))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.1, hidden_layer_sizes=(5, 10),
                               random_state=42, solver='lbfgs'))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.1, hidden_layer_sizes=(5, 10),
                               random_state=42, solver='lbfgs'))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.1, hidden_layer_sizes=(5, 10),
                               random_state=42, solver='lbfgs'))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.1, hidden_layer_sizes=(5, 10),
                               random_state=42, solver='lbfgs'))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.1, hidden_layer_sizes=(5, 10),
                               random_state=42, solver='lbfgs'))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.01, hidden_layer_sizes=(5, 10),
                               random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse='False')),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.01, hidden_layer_sizes=(5, 10),
                               random_state=42))])","Pipeline(steps=[('normalizer', Normalizer(norm='max')),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.01, hidden_layer_sizes=(5, 10),
                               random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('bernoullinb',
                 BernoulliNB(alpha=0.001, binarize=0.9, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=15.0, fit_intercept=False, loss='hinge',
                           random_state=42))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=1.0))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(kernel='linear', nu=0.7, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(colsample_bytree=0.6444444444444444,
                                learning_rate=0.06984175589943697,
                                min_child_samples=310, num_leaves=42,
                                random_state=42, reg_alpha=0.16326530612244897,
                                subsample=0.595959595959596,
                                subsample_for_bin=40000))])","Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=1.0))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.3, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='goss',
                                colsample_bytree=0.9111111111111111,
                                learning_rate=0.10145590090233389,
                                min_child_samples=25, num_leaves=100,
                                random_state=42, reg_alpha=0.24489795918367346,
                                subsample=0.5606060606060606,
                                subsample_for_bin=220000))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse='False')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('polynomialfeatures',
                 PolynomialFeatures(degree=3, interaction_only=True)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='full')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('fastica',
                 FastICA(n_components=10, random_state=42, whiten='False')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=0.25, degree=4, gamma=0.0001,
                           random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest(k=20)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.1)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('nmf', NMF(l1_ratio=0, random_state=42, tol=0.01)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=2.0, method='cd', random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=56, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=1.0, fit_prior=False))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=15,
                                        max_features=0.25,
                                        min_impurity_decrease=0.00025,
                                        random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.0005,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=10,
                                            max_features=0.75,
                                            min_impurity_decrease=0.0005,
                                            min_samples_leaf=20,
                                            min_samples_split=10,
                                            n_estimators=10, random_state=42,
                                            subsample=0.5))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=70, p=1))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(alpha=0.01, hidden_layer_sizes=(50, 50, 50),
                               random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=100.0, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.2))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(random_state=42, shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.32268577008233507,
                                min_child_samples=185, num_leaves=55,
                                random_state=42, reg_alpha=0.36734693877551017,
                                subsample=0.7070707070707071,
                                subsample_for_bin=60000))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features=None, min_samples_leaf=10,
                                        n_estimators=500, random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=5,
                                            max_features=0.75,
                                            min_impurity_decrease=0.003,
                                            min_samples_leaf=15,
                                            n_estimators=1000, random_state=42,
                                            subsample=0.2))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=70, p=1))])","Pipeline(steps=[('svc',
                 SVC(C=0.01, coef0=100.0, gamma=0.5, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.2))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.7, random_state=42, shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(colsample_bytree=0.7333333333333333,
                                learning_rate=0.22626931390850843,
                                min_child_samples=235, num_leaves=104,
                                random_state=42, reg_alpha=0.8571428571428571,
                                subsample=0.9444444444444444,
                                subsample_for_bin=180000))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.7333333333333333,
                                learning_rate=0.22626931390850843,
                                min_child_samples=235, num_leaves=104,
                                random_state=42, reg_alpha=0.8571428571428571,
                                subsample=0.9444444444444444,
                                subsample_for_bin=180000))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.7333333333333333,
                                learning_rate=0.22626931390850843,
                                min_child_samples=235, num_leaves=104,
                                random_state=42, reg_alpha=0.8571428571428571,
                                subsample=0.9444444444444444,
                                subsample_for_bin=180000))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.7333333333333333,
                                learning_rate=0.22626931390850843,
                                min_child_samples=235, num_leaves=104,
                                random_state=42, reg_alpha=0.8571428571428571,
                                subsample=0.9444444444444444,
                                subsample_for_bin=180000))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.7333333333333333,
                                learning_rate=0.22626931390850843,
                                min_child_samples=235, num_leaves=104,
                                random_state=42, reg_alpha=0.8571428571428571,
                                subsample=0.9444444444444444,
                                subsample_for_bin=180000))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.7333333333333333,
                                learning_rate=0.22626931390850843,
                                min_child_samples=235, num_leaves=104,
                                random_state=42, reg_alpha=0.8571428571428571,
                                subsample=0.9444444444444444,
                                subsample_for_bin=180000))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.7333333333333333,
                                learning_rate=0.22626931390850843,
                                min_child_samples=235, num_leaves=104,
                                random_state=42, reg_alpha=0.8571428571428571,
                                subsample=0.9444444444444444,
                                subsample_for_bin=180000))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.6444444444444444,
                                learning_rate=0.09823433230902226,
                                min_child_samples=250, num_leaves=89,
                                random_state=42, reg_alpha=0.6122448979591836,
                                subsample=0.5, subsample_for_bin=260000))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.6444444444444444,
                                learning_rate=0.09823433230902226,
                                min_child_samples=250, num_leaves=89,
                                random_state=42, reg_alpha=0.6122448979591836,
                                subsample=0.5, subsample_for_bin=260000))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.6444444444444444,
                                learning_rate=0.09823433230902226,
                                min_child_samples=250, num_leaves=89,
                                random_state=42, reg_alpha=0.6122448979591836,
                                subsample=0.5, subsample_for_bin=260000))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse='False')),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.6444444444444444,
                                learning_rate=0.09823433230902226,
                                min_child_samples=250, num_leaves=89,
                                random_state=42, reg_alpha=0.6122448979591836,
                                subsample=0.5, subsample_for_bin=260000))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.7333333333333333,
                                learning_rate=0.22626931390850843,
                                min_child_samples=235, num_leaves=104,
                                random_state=42, reg_alpha=0.8571428571428571,
                                subsample=0.9444444444444444,
                                subsample_for_bin=180000))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.7333333333333333,
                                learning_rate=0.22626931390850843,
                                min_child_samples=235, num_leaves=104,
                                random_state=42, reg_alpha=0.8571428571428571,
                                subsample=0.9444444444444444,
                                subsample_for_bin=180000))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.7333333333333333,
                                learning_rate=0.22626931390850843,
                                min_child_samples=235, num_leaves=104,
                                random_state=42, reg_alpha=0.8571428571428571,
                                subsample=0.9444444444444444,
                                subsample_for_bin=180000))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.7333333333333333,
                                learning_rate=0.22626931390850843,
                                min_child_samples=235, num_leaves=104,
                                random_state=42, reg_alpha=0.8571428571428571,
                                subsample=0.9444444444444444,
                                subsample_for_bin=180000))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.7333333333333333,
                                learning_rate=0.22626931390850843,
                                min_child_samples=235, num_leaves=104,
                                random_state=42, reg_alpha=0.8571428571428571,
                                subsample=0.9444444444444444,
                                subsample_for_bin=180000))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.7333333333333333,
                                learning_rate=0.22626931390850843,
                                min_child_samples=235, num_leaves=104,
                                random_state=42, reg_alpha=0.8571428571428571,
                                subsample=0.9444444444444444,
                                subsample_for_bin=180000))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.7333333333333333,
                                learning_rate=0.22626931390850843,
                                min_child_samples=235, num_leaves=104,
                                random_state=42, reg_alpha=0.8571428571428571,
                                subsample=0.9444444444444444,
                                subsample_for_bin=180000))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.8222222222222222,
                                learning_rate=0.3522231138649518,
                                min_child_samples=175, num_leaves=149,
                                random_state=42, reg_alpha=0.3061224489795918,
                                subsample=0.9595959595959596,
                                subsample_for_bin=180000))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='False')),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.8222222222222222,
                                learning_rate=0.3522231138649518,
                                min_child_samples=175, num_leaves=149,
                                random_state=42, reg_alpha=0.3061224489795918,
                                subsample=0.9595959595959596,
                                subsample_for_bin=180000))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.8222222222222222,
                                learning_rate=0.3522231138649518,
                                min_child_samples=175, num_leaves=149,
                                random_state=42, reg_alpha=0.3061224489795918,
                                subsample=0.9595959595959596,
                                subsample_for_bin=180000))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.8222222222222222,
                                learning_rate=0.3522231138649518,
                                min_child_samples=175, num_leaves=149,
                                random_state=42, reg_alpha=0.3061224489795918,
                                subsample=0.9595959595959596,
                                subsample_for_bin=180000))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.8222222222222222,
                                learning_rate=0.3522231138649518,
                                min_child_samples=175, num_leaves=149,
                                random_state=42, reg_alpha=0.3061224489795918,
                                subsample=0.9595959595959596,
                                subsample_for_bin=180000))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.8222222222222222,
                                learning_rate=0.3522231138649518,
                                min_child_samples=175, num_leaves=149,
                                random_state=42, reg_alpha=0.3061224489795918,
                                subsample=0.9595959595959596,
                                subsample_for_bin=180000))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.8222222222222222,
                                learning_rate=0.3522231138649518,
                                min_child_samples=175, num_leaves=149,
                                random_state=42, reg_alpha=0.3061224489795918,
                                subsample=0.9595959595959596,
                                subsample_for_bin=180000))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.7333333333333333,
                                learning_rate=0.22626931390850843,
                                min_child_samples=235, num_leaves=104,
                                random_state=42, reg_alpha=0.8571428571428571,
                                subsample=0.9444444444444444,
                                subsample_for_bin=180000))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.7333333333333333,
                                learning_rate=0.22626931390850843,
                                min_child_samples=235, num_leaves=104,
                                random_state=42, reg_alpha=0.8571428571428571,
                                subsample=0.9444444444444444,
                                subsample_for_bin=180000))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.7333333333333333,
                                learning_rate=0.22626931390850843,
                                min_child_samples=235, num_leaves=104,
                                random_state=42, reg_alpha=0.8571428571428571,
                                subsample=0.9444444444444444,
                                subsample_for_bin=180000))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.7333333333333333,
                                learning_rate=0.22626931390850843,
                                min_child_samples=235, num_leaves=104,
                                random_state=42, reg_alpha=0.8571428571428571,
                                subsample=0.9444444444444444,
                                subsample_for_bin=180000))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.7333333333333333,
                                learning_rate=0.22626931390850843,
                                min_child_samples=235, num_leaves=104,
                                random_state=42, reg_alpha=0.8571428571428571,
                                subsample=0.9444444444444444,
                                subsample_for_bin=180000))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.7333333333333333,
                                learning_rate=0.22626931390850843,
                                min_child_samples=235, num_leaves=104,
                                random_state=42, reg_alpha=0.8571428571428571,
                                subsample=0.9444444444444444,
                                subsample_for_bin=180000))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.7333333333333333,
                                learning_rate=0.22626931390850843,
                                min_child_samples=235, num_leaves=104,
                                random_state=42, reg_alpha=0.8571428571428571,
                                subsample=0.9444444444444444,
                                subsample_for_bin=180000))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.7333333333333333,
                                learning_rate=0.22626931390850843,
                                min_child_samples=235, num_leaves=104,
                                random_state=42, reg_alpha=0.8571428571428571,
                                subsample=0.9444444444444444,
                                subsample_for_bin=180000))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.7333333333333333,
                                learning_rate=0.22626931390850843,
                                min_child_samples=235, num_leaves=104,
                                random_state=42, reg_alpha=0.8571428571428571,
                                subsample=0.9444444444444444,
                                subsample_for_bin=180000))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.7333333333333333,
                                learning_rate=0.22626931390850843,
                                min_child_samples=235, num_leaves=104,
                                random_state=42, reg_alpha=0.8571428571428571,
                                subsample=0.9444444444444444,
                                subsample_for_bin=180000))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.7333333333333333,
                                learning_rate=0.22626931390850843,
                                min_child_samples=235, num_leaves=104,
                                random_state=42, reg_alpha=0.8571428571428571,
                                subsample=0.9444444444444444,
                                subsample_for_bin=180000))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.7333333333333333,
                                learning_rate=0.22626931390850843,
                                min_child_samples=235, num_leaves=104,
                                random_state=42, reg_alpha=0.8571428571428571,
                                subsample=0.9444444444444444,
                                subsample_for_bin=180000))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.7333333333333333,
                                learning_rate=0.22626931390850843,
                                min_child_samples=235, num_leaves=104,
                                random_state=42, reg_alpha=0.8571428571428571,
                                subsample=0.9444444444444444,
                                subsample_for_bin=180000))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.7333333333333333,
                                learning_rate=0.22626931390850843,
                                min_child_samples=235, num_leaves=104,
                                random_state=42, reg_alpha=0.8571428571428571,
                                subsample=0.9444444444444444,
                                subsample_for_bin=180000))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.7333333333333333,
                                learning_rate=0.22626931390850843,
                                min_child_samples=235, num_leaves=104,
                                random_state=42, reg_alpha=0.8571428571428571,
                                subsample=0.9444444444444444,
                                subsample_for_bin=180000))])","Pipeline(steps=[('isomap', Isomap()),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.7333333333333333,
                                learning_rate=0.22626931390850843,
                                min_child_samples=235, num_leaves=104,
                                random_state=42, reg_alpha=0.8571428571428571,
                                subsample=0.9444444444444444,
                                subsample_for_bin=180000))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.7333333333333333,
                                learning_rate=0.22626931390850843,
                                min_child_samples=235, num_leaves=104,
                                random_state=42, reg_alpha=0.8571428571428571,
                                subsample=0.9444444444444444,
                                subsample_for_bin=180000))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('lightGBM',
                 LGBMClassifier(colsample_bytree=0.7333333333333333,
                                learning_rate=0.22626931390850843,
                                min_child_samples=235, num_leaves=104,
                                random_state=42, reg_alpha=0.8571428571428571,
                                subsample=0.9444444444444444,
                                subsample_for_bin=180000))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.9111111111111111,
                                learning_rate=0.08476161707770602,
                                min_child_samples=30, num_leaves=135,
                                random_state=42, reg_alpha=0.2040816326530612,
                                subsample=0.9292929292929293))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='full')),
                ('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.9111111111111111,
                                learning_rate=0.08476161707770602,
                                min_child_samples=30, num_leaves=135,
                                random_state=42, reg_alpha=0.2040816326530612,
                                subsample=0.9292929292929293))])","Pipeline(steps=[('fastica', FastICA(random_state=42, whiten='True')),
                ('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.9111111111111111,
                                learning_rate=0.08476161707770602,
                                min_child_samples=30, num_leaves=135,
                                random_state=42, reg_alpha=0.2040816326530612,
                                subsample=0.9292929292929293))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=0.75, degree=2, gamma=0.01, random_state=42)),
                ('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.9111111111111111,
                                learning_rate=0.08476161707770602,
                                min_child_samples=30, num_leaves=135,
                                random_state=42, reg_alpha=0.2040816326530612,
                                subsample=0.9292929292929293))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.01)),
                ('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.9111111111111111,
                                learning_rate=0.08476161707770602,
                                min_child_samples=30, num_leaves=135,
                                random_state=42, reg_alpha=0.2040816326530612,
                                subsample=0.9292929292929293))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.01)),
                ('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.9111111111111111,
                                learning_rate=0.08476161707770602,
                                min_child_samples=30, num_leaves=135,
                                random_state=42, reg_alpha=0.2040816326530612,
                                subsample=0.9292929292929293))])","Pipeline(steps=[('nmf',
                 NMF(l1_ratio=0, n_components=10, random_state=42, tol=0.01)),
                ('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.9111111111111111,
                                learning_rate=0.08476161707770602,
                                min_child_samples=30, num_leaves=135,
                                random_state=42, reg_alpha=0.2040816326530612,
                                subsample=0.9292929292929293))])","Pipeline(steps=[('nystroem',
                 Nystroem(degree=4, gamma=1.0, kernel='poly', n_components=5,
                          random_state=42)),
                ('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.9111111111111111,
                                learning_rate=0.08476161707770602,
                                min_child_samples=30, num_leaves=135,
                                random_state=42, reg_alpha=0.2040816326530612,
                                subsample=0.9292929292929293))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=1.0, method='cd', random_state=42,
                           ridge_alpha=1.0)),
                ('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.9111111111111111,
                                learning_rate=0.08476161707770602,
                                min_child_samples=30, num_leaves=135,
                                random_state=42, reg_alpha=0.2040816326530612,
                                subsample=0.9292929292929293))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=15,
                                        max_features=0.25,
                                        min_impurity_decrease=0.00025,
                                        random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.0005,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=10,
                                            max_features=0.75,
                                            min_impurity_decrease=0.0005,
                                            min_samples_leaf=20,
                                            min_samples_split=10,
                                            n_estimators=10, random_state=42,
                                            subsample=0.5))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=50, p=1))])","Pipeline(steps=[('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron',
                 Perceptron(penalty='elasticnet', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(alpha=0.1, hidden_layer_sizes=(5, 10),
                               random_state=42, solver='lbfgs'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=50.0, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(random_state=42, shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.32268577008233507,
                                min_child_samples=185, num_leaves=55,
                                random_state=42, reg_alpha=0.36734693877551017,
                                subsample=0.7070707070707071,
                                subsample_for_bin=60000))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features=None, min_samples_leaf=10,
                                        n_estimators=500, random_state=42))])","Pipeline(steps=[('svc',
                 SVC(C=10.0, coef0=50.0, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='tanh', alpha=0.01,
                               hidden_layer_sizes=(10, 5), random_state=42,
                               solver='lbfgs'))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_samples=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.7, random_state=42, shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(colsample_bytree=0.9111111111111111,
                                learning_rate=0.11228489977698869,
                                min_child_samples=100, num_leaves=125,
                                random_state=42, reg_alpha=0.18367346938775508,
                                subsample=0.9646464646464648))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=100.0))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=1e-05, eta0=0.01, l1_ratio=1.0,
                               learning_rate='constant', loss='log', max_iter=5,
                               penalty='none', random_state=42, tol=None))])","Pipeline(steps=[('perceptron', Perceptron(penalty='none', random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=1e-05, random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.8666666666666667,
                                learning_rate=0.4082083802460733,
                                min_child_samples=445, num_leaves=92,
                                random_state=42, reg_alpha=0.7755102040816326,
                                subsample=0.6111111111111112,
                                subsample_for_bin=260000))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=0.001))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=5.0, dual=False, fit_intercept=False, penalty='l1',
                           random_state=42, tol=1e-05))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=10.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=1e-05, random_state=42))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='linear', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=10.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('logisticregression',
                 LogisticRegression(C=10.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('logisticregression',
                 LogisticRegression(C=10.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('logisticregression',
                 LogisticRegression(C=10.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('logisticregression',
                 LogisticRegression(C=10.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=20.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('logisticregression',
                 LogisticRegression(C=20.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('logisticregression',
                 LogisticRegression(C=20.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=10.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('logisticregression',
                 LogisticRegression(C=10.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('logisticregression',
                 LogisticRegression(C=10.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('logisticregression',
                 LogisticRegression(C=10.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('logisticregression',
                 LogisticRegression(C=10.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=10.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=10.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=15.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('logisticregression',
                 LogisticRegression(C=15.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('logisticregression',
                 LogisticRegression(C=15.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=15.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=10.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=10.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=10.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=10.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('logisticregression',
                 LogisticRegression(C=10.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('logisticregression',
                 LogisticRegression(C=10.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('logisticregression',
                 LogisticRegression(C=10.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('logisticregression',
                 LogisticRegression(C=10.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=10.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('logisticregression',
                 LogisticRegression(C=10.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=10.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=10.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=10.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=10.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=10.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('logisticregression',
                 LogisticRegression(C=10.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=10.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('logisticregression',
                 LogisticRegression(C=10.0, fit_intercept=False,
                                    random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=0.001, fit_prior=False))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=1e-05, eta0=1.0, l1_ratio=0.25,
                               learning_rate='constant', loss='squared_hinge',
                               max_iter=5, power_t=0.0, random_state=42,
                               tol=None))])","Pipeline(steps=[('perceptron', Perceptron(penalty='none', random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.01, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.4))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.01, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.32268577008233507,
                                min_child_samples=185, num_leaves=55,
                                random_state=42, reg_alpha=0.36734693877551017,
                                subsample=0.7070707070707071,
                                subsample_for_bin=60000))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=0.001, fit_prior=False))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, loss='hinge',
                           random_state=42, tol=0.001))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='none', random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=100.0, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.01, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=15.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('logisticregression',
                 LogisticRegression(C=15.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('logisticregression',
                 LogisticRegression(C=15.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=15.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=100.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=15,
                                        max_features=0.25,
                                        min_impurity_decrease=0.00025,
                                        random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.0005,
                                        min_samples_leaf=15,
                                        min_samples_split=20,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=70, weights='distance'))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(eta0=0.1, fit_intercept=False, l1_ratio=0.5,
                               learning_rate='constant', loss='perceptron',
                               max_iter=5, penalty='none', power_t=0.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.32268577008233507,
                                min_child_samples=185, num_leaves=55,
                                random_state=42, reg_alpha=0.36734693877551017,
                                subsample=0.7070707070707071,
                                subsample_for_bin=60000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                learning_rate=0.3317354060546173,
                                min_child_samples=380, num_leaves=44,
                                random_state=42, reg_alpha=0.5510204081632653,
                                subsample=0.9292929292929293,
                                subsample_for_bin=160000))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.0005,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=1.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.00175,
                                            min_samples_leaf=5,
                                            min_samples_split=20,
                                            random_state=42, subsample=0.7))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(eta0=50.0, l1_ratio=1.0,
                               learning_rate='constant', loss='squared_hinge',
                               max_iter=5, penalty='none', power_t=100.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier', AdaBoostClassifier(random_state=42))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.4,
                                   random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(random_state=42, shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.32268577008233507,
                                min_child_samples=185, num_leaves=55,
                                random_state=42, reg_alpha=0.36734693877551017,
                                subsample=0.7070707070707071,
                                subsample_for_bin=60000))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('svc',
                 SVC(C=0.01, coef0=100.0, gamma=0.5, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(colsample_bytree=0.9111111111111111,
                                learning_rate=0.11228489977698869,
                                min_child_samples=100, num_leaves=125,
                                random_state=42, reg_alpha=0.18367346938775508,
                                subsample=0.9646464646464648))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        max_features=0.75,
                                        min_impurity_decrease=0.004,
                                        min_samples_leaf=15,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.0005,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, p=1))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l1', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(alpha=0.01, hidden_layer_sizes=(50, 50, 50),
                               random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=1e-05, fit_intercept=False,
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.32268577008233507,
                                min_child_samples=185, num_leaves=55,
                                random_state=42, reg_alpha=0.36734693877551017,
                                subsample=0.7070707070707071,
                                subsample_for_bin=60000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features=None, min_samples_leaf=10,
                                        n_estimators=500, random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, p=1,
                                      weights='distance'))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='identity', alpha=0.001,
                               hidden_layer_sizes=(10, 5), random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='goss',
                                colsample_bytree=0.9111111111111111,
                                learning_rate=0.10145590090233389,
                                min_child_samples=25, num_leaves=100,
                                random_state=42, reg_alpha=0.24489795918367346,
                                subsample=0.5606060606060606,
                                subsample_for_bin=220000))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        max_features=0.75,
                                        min_impurity_decrease=0.004,
                                        min_samples_leaf=15,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.0005,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(eta0=50.0, l1_ratio=1.0,
                               learning_rate='constant', loss='squared_hinge',
                               max_iter=5, penalty='none', power_t=100.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('perceptron',
                 Perceptron(penalty='elasticnet', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(alpha=0.01, hidden_layer_sizes=(50, 50, 50),
                               random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=50.0, random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(colsample_bytree=0.6444444444444444,
                                learning_rate=0.06984175589943697,
                                min_child_samples=310, num_leaves=42,
                                random_state=42, reg_alpha=0.16326530612244897,
                                subsample=0.595959595959596,
                                subsample_for_bin=40000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='identity', alpha=0.001,
                               hidden_layer_sizes=(10, 5), random_state=42,
                               solver='lbfgs'))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='goss',
                                colsample_bytree=0.9111111111111111,
                                learning_rate=0.10145590090233389,
                                min_child_samples=25, num_leaves=100,
                                random_state=42, reg_alpha=0.24489795918367346,
                                subsample=0.5606060606060606,
                                subsample_for_bin=220000))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        max_features=0.75,
                                        min_impurity_decrease=0.004,
                                        min_samples_leaf=15,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_split=15, n_estimators=10,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.0005,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=1e-05, eta0=0.5, l1_ratio=1.0,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', power_t=100.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='tanh', alpha=0.1,
                               hidden_layer_sizes=(100, 100, 100),
                               random_state=42, solver='sgd'))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.32268577008233507,
                                min_child_samples=185, num_leaves=55,
                                random_state=42, reg_alpha=0.36734693877551017,
                                subsample=0.7070707070707071,
                                subsample_for_bin=60000))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        max_features=0.75,
                                        min_impurity_decrease=0.004,
                                        min_samples_leaf=15,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_split=15, n_estimators=10,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.0005,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, p=1))])","Pipeline(steps=[('linearsvc', LinearSVC(C=20.0, random_state=42, tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='tanh', alpha=0.1,
                               hidden_layer_sizes=(100, 100, 100),
                               random_state=42, solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=1e-05, fit_intercept=False,
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(colsample_bytree=0.9111111111111111,
                                learning_rate=0.03925228100102254,
                                min_child_samples=185, num_leaves=131,
                                random_state=42, reg_alpha=0.44897959183673464,
                                subsample=0.5909090909090909,
                                subsample_for_bin=240000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=None,
                                      min_samples_leaf=5, min_samples_split=20,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5, random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(colsample_bytree=0.7333333333333333,
                                learning_rate=0.22626931390850843,
                                min_child_samples=235, num_leaves=104,
                                random_state=42, reg_alpha=0.8571428571428571,
                                subsample=0.9444444444444444,
                                subsample_for_bin=180000))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=8,
                                        max_features=0.5,
                                        min_impurity_decrease=0.0015,
                                        min_samples_leaf=15,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=8,
                                        max_features=0.5,
                                        min_impurity_decrease=0.0015,
                                        min_samples_leaf=15,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures(degree=3)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=8,
                                        max_features=0.5,
                                        min_impurity_decrease=0.0015,
                                        min_samples_leaf=15,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        min_impurity_decrease=0.0005,
                                        min_samples_leaf=10,
                                        min_samples_split=20,
                                        random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='False')),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        min_impurity_decrease=0.0005,
                                        min_samples_leaf=10,
                                        min_samples_split=20,
                                        random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        min_impurity_decrease=0.0005,
                                        min_samples_leaf=10,
                                        min_samples_split=20,
                                        random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        min_impurity_decrease=0.0005,
                                        min_samples_leaf=10,
                                        min_samples_split=20,
                                        random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        min_impurity_decrease=0.0005,
                                        min_samples_leaf=10,
                                        min_samples_split=20,
                                        random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        min_impurity_decrease=0.0005,
                                        min_samples_leaf=10,
                                        min_samples_split=20,
                                        random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        min_impurity_decrease=0.0005,
                                        min_samples_leaf=10,
                                        min_samples_split=20,
                                        random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('bernoullinb', BernoulliNB(alpha=10.0, binarize=0.9))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=100.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=3, max_features=0.75,
                                        min_impurity_decrease=0.0022500000000000003,
                                        min_samples_split=20,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=None,
                                        min_samples_split=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=1.0,
                                            loss='exponential', max_depth=10,
                                            max_features='sqrt',
                                            min_impurity_decrease=0.003,
                                            min_samples_leaf=5,
                                            min_samples_split=10,
                                            n_estimators=500, random_state=42,
                                            subsample=0.5))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, loss='hinge', random_state=42, tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(eta0=50.0, l1_ratio=1.0,
                               learning_rate='constant', loss='squared_hinge',
                               max_iter=5, penalty='none', power_t=100.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('svc',
                 SVC(coef0=10.0, gamma=10.0, kernel='sigmoid', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='none', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(alpha=0.01, hidden_layer_sizes=(50, 50, 50),
                               random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=50.0, random_state=42))])","Pipeline(steps=[('adaboostclassifier', AdaBoostClassifier(random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.4))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.3, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(colsample_bytree=0.8666666666666667,
                                learning_rate=0.007570946626521759,
                                min_child_samples=170, num_leaves=40,
                                random_state=42, reg_alpha=0.26530612244897955,
                                subsample=0.7121212121212122))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('bernoullinb',
                 BernoulliNB(alpha=0.1, binarize=0.25, fit_prior=False))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.0005,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=1e-05, eta0=1.0, l1_ratio=0.25,
                               learning_rate='constant', loss='squared_hinge',
                               max_iter=5, power_t=0.0, random_state=42,
                               tol=None))])","Pipeline(steps=[('perceptron', Perceptron(penalty='none', random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=1.0))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('bernoullinb',
                 BernoulliNB(alpha=0.1, binarize=0.25, fit_prior=False))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(loss='exponential', max_depth=10,
                                            max_features=0.25,
                                            min_impurity_decrease=0.002,
                                            random_state=42, subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.001, eta0=10.0, fit_intercept=False,
                               l1_ratio=1.0, learning_rate='constant',
                               loss='squared_hinge', max_iter=5, power_t=10.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0, max_depth=1,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0022500000000000003,
                                            min_samples_leaf=15,
                                            min_samples_split=10,
                                            n_estimators=1000, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0, max_depth=1,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0022500000000000003,
                                            min_samples_leaf=15,
                                            min_samples_split=10,
                                            n_estimators=1000, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('normalizer', Normalizer(norm='l1')),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0, max_depth=1,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0022500000000000003,
                                            min_samples_leaf=15,
                                            min_samples_split=10,
                                            n_estimators=1000, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(max_depth=10, max_features=0.25,
                                            min_samples_split=5,
                                            n_estimators=1000, random_state=42,
                                            subsample=0.9))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='False')),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(max_depth=10, max_features=0.25,
                                            min_samples_split=5,
                                            n_estimators=1000, random_state=42,
                                            subsample=0.9))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(max_depth=10, max_features=0.25,
                                            min_samples_split=5,
                                            n_estimators=1000, random_state=42,
                                            subsample=0.9))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(max_depth=10, max_features=0.25,
                                            min_samples_split=5,
                                            n_estimators=1000, random_state=42,
                                            subsample=0.9))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(max_depth=10, max_features=0.25,
                                            min_samples_split=5,
                                            n_estimators=1000, random_state=42,
                                            subsample=0.9))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('isomap', Isomap()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            loss='exponential', max_depth=1,
                                            max_features=0.75,
                                            min_impurity_decrease=0.0005,
                                            min_samples_leaf=20,
                                            min_samples_split=5,
                                            n_estimators=50, random_state=42,
                                            subsample=0.7))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            loss='exponential', max_depth=1,
                                            max_features=0.75,
                                            min_impurity_decrease=0.0005,
                                            min_samples_leaf=20,
                                            min_samples_split=5,
                                            n_estimators=50, random_state=42,
                                            subsample=0.7))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.0)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            loss='exponential', max_depth=1,
                                            max_features=0.75,
                                            min_impurity_decrease=0.0005,
                                            min_samples_leaf=20,
                                            min_samples_split=5,
                                            n_estimators=50, random_state=42,
                                            subsample=0.7))])","Pipeline(steps=[('selectpercentile',
                 SelectPercentile(percentile=70,
                                  score_func=<function mutual_info_regression at 0x7f5193b3caf0>)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            loss='exponential', max_depth=1,
                                            max_features=0.75,
                                            min_impurity_decrease=0.0005,
                                            min_samples_leaf=20,
                                            min_samples_split=5,
                                            n_estimators=50, random_state=42,
                                            subsample=0.7))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            loss='exponential', max_depth=1,
                                            max_features=0.75,
                                            min_impurity_decrease=0.0005,
                                            min_samples_leaf=20,
                                            min_samples_split=5,
                                            n_estimators=50, random_state=42,
                                            subsample=0.7))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=0.5, n_components=5, random_state=42,
                           ridge_alpha=0.5)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            loss='exponential', max_depth=1,
                                            max_features=0.75,
                                            min_impurity_decrease=0.0005,
                                            min_samples_leaf=20,
                                            min_samples_split=5,
                                            n_estimators=50, random_state=42,
                                            subsample=0.7))])","Pipeline(steps=[('isomap', Isomap(eigen_solver='arpack', n_neighbors=2)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            loss='exponential', max_depth=1,
                                            max_features=0.75,
                                            min_impurity_decrease=0.0005,
                                            min_samples_leaf=20,
                                            min_samples_split=5,
                                            n_estimators=50, random_state=42,
                                            subsample=0.7))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(eigen_solver='arpack',
                                        random_state=42)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            loss='exponential', max_depth=1,
                                            max_features=0.75,
                                            min_impurity_decrease=0.0005,
                                            min_samples_leaf=20,
                                            min_samples_split=5,
                                            n_estimators=50, random_state=42,
                                            subsample=0.7))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, miss...=56, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            loss='exponential', max_depth=1,
                                            max_features='sqrt',
                                            min_impurity_decrease=0.00025,
                                            min_samples_split=5,
                                            n_estimators=500, random_state=42,
                                            subsample=0.9))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            loss='exponential', max_depth=1,
                                            max_features='sqrt',
                                            min_impurity_decrease=0.00025,
                                            min_samples_split=5,
                                            n_estimators=500, random_state=42,
                                            subsample=0.9))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            loss='exponential', max_depth=1,
                                            max_features='sqrt',
                                            min_impurity_decrease=0.00025,
                                            min_samples_split=5,
                                            n_estimators=500, random_state=42,
                                            subsample=0.9))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            loss='exponential', max_depth=1,
                                            max_features='sqrt',
                                            min_impurity_decrease=0.00025,
                                            min_samples_split=5,
                                            n_estimators=500, random_state=42,
                                            subsample=0.9))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            loss='exponential', max_depth=1,
                                            max_features='sqrt',
                                            min_impurity_decrease=0.00025,
                                            min_samples_split=5,
                                            n_estimators=500, random_state=42,
                                            subsample=0.9))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            loss='exponential', max_depth=1,
                                            max_features='sqrt',
                                            min_impurity_decrease=0.00025,
                                            min_samples_split=5,
                                            n_estimators=500, random_state=42,
                                            subsample=0.9))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            loss='exponential', max_depth=1,
                                            max_features='sqrt',
                                            min_impurity_decrease=0.00025,
                                            min_samples_split=5,
                                            n_estimators=500, random_state=42,
                                            subsample=0.9))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            loss='exponential', max_depth=1,
                                            max_features='sqrt',
                                            min_impurity_decrease=0.00025,
                                            min_samples_split=5,
                                            n_estimators=500, random_state=42,
                                            subsample=0.9))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            loss='exponential', max_depth=1,
                                            max_features='sqrt',
                                            min_impurity_decrease=0.00025,
                                            min_samples_split=5,
                                            n_estimators=500, random_state=42,
                                            subsample=0.9))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            loss='exponential', max_depth=1,
                                            max_features='sqrt',
                                            min_impurity_decrease=0.00025,
                                            min_samples_split=5,
                                            n_estimators=500, random_state=42,
                                            subsample=0.9))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            loss='exponential', max_depth=1,
                                            max_features='sqrt',
                                            min_impurity_decrease=0.00025,
                                            min_samples_split=5,
                                            n_estimators=500, random_state=42,
                                            subsample=0.9))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            loss='exponential', max_depth=1,
                                            max_features='sqrt',
                                            min_impurity_decrease=0.00025,
                                            min_samples_split=5,
                                            n_estimators=500, random_state=42,
                                            subsample=0.9))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            loss='exponential', max_depth=1,
                                            max_features='sqrt',
                                            min_impurity_decrease=0.00025,
                                            min_samples_split=5,
                                            n_estimators=500, random_state=42,
                                            subsample=0.9))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            loss='exponential', max_depth=1,
                                            max_features='sqrt',
                                            min_impurity_decrease=0.00025,
                                            min_samples_split=5,
                                            n_estimators=500, random_state=42,
                                            subsample=0.9))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=3, max_features=0.5,
                                        min_impurity_decrease=0.004,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_split=15, n_estimators=10,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='sqrt',
                                        min_impurity_decrease=0.002,
                                        min_samples_leaf=5, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=1.0,
                                            loss='exponential', max_depth=10,
                                            max_features='sqrt',
                                            min_impurity_decrease=0.003,
                                            min_samples_leaf=5,
                                            min_samples_split=10,
                                            n_estimators=500, random_state=42,
                                            subsample=0.5))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.001, eta0=50.0, l1_ratio=0.75,
                               loss='perceptron', max_iter=5,
                               penalty='elasticnet', power_t=10.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('svc',
                 SVC(coef0=10.0, gamma=10.0, kernel='sigmoid', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='none', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(alpha=0.001, hidden_layer_sizes=(10, 5),
                               random_state=42, solver='lbfgs'))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(colsample_bytree=0.8666666666666667,
                                learning_rate=0.007570946626521759,
                                min_child_samples=170, num_leaves=40,
                                random_state=42, reg_alpha=0.26530612244897955,
                                subsample=0.7121212121212122))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=15, n_estimators=10,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features=0.75,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=1.0,
                                            loss='exponential', max_depth=1,
                                            max_features='log2',
                                            min_impurity_decrease=0.0005,
                                            min_samples_leaf=5,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=0.5))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=3, max_features=0.75,
                                        min_impurity_decrease=0.0022500000000000003,
                                        min_samples_split=20,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=1e-06, eta0=1.0, fit_intercept=False,
                               l1_ratio=0.5, learning_rate='constant',
                               loss='modified_huber', max_iter=5, power_t=0.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(alpha=0.001, hidden_layer_sizes=(10, 5),
                               random_state=42, solver='lbfgs'))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(colsample_bytree=0.8666666666666667,
                                learning_rate=0.007570946626521759,
                                min_child_samples=170, num_leaves=40,
                                random_state=42, reg_alpha=0.26530612244897955,
                                subsample=0.7121212121212122))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.001, eta0=0.01, l1_ratio=0.5,
                               loss='modified_huber', max_iter=5, power_t=50.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=15.0, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('logisticregression',
                 LogisticRegression(C=15.0, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('normalizer', Normalizer(norm='max')),
                ('logisticregression',
                 LogisticRegression(C=15.0, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=15.0, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('logisticregression',
                 LogisticRegression(C=15.0, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('logisticregression',
                 LogisticRegression(C=15.0, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('logisticregression',
                 LogisticRegression(C=15.0, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=0.1))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_leaf=20,
                                      min_samples_split=10, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier', AdaBoostClassifier(random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(colsample_bytree=0.9111111111111111,
                                learning_rate=0.03925228100102254,
                                min_child_samples=185, num_leaves=131,
                                random_state=42, reg_alpha=0.44897959183673464,
                                subsample=0.5909090909090909,
                                subsample_for_bin=240000))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=100.0, fit_prior=False))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('svc',
                 SVC(C=0.01, coef0=100.0, gamma=0.5, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=0.001, fit_prior=False))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_split=15, n_estimators=10,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.0005,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc', LinearSVC(C=20.0, random_state=42, tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l1', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='tanh', alpha=0.1,
                               hidden_layer_sizes=(100, 100, 100),
                               random_state=42, solver='sgd'))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.2))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=15, n_estimators=10,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features=0.75,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='tanh', alpha=0.001,
                               hidden_layer_sizes=(100, 100, 100),
                               random_state=42, solver='sgd'))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.2))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('polynomialfeatures',
                 PolynomialFeatures(degree=3, interaction_only=True)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='True')),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('fastica',
                 FastICA(algorithm='deflation', n_components=3, random_state=42,
                         whiten='False')),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.01)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.01)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('selectpercentile',
                 SelectPercentile(percentile=50,
                                  score_func=<function f_regression at 0x7f5193b31310>)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('nmf',
                 NMF(l1_ratio=0, n_components=10, random_state=42, tol=0.01)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(alpha=1.0, random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('isomap',
                 Isomap(eigen_solver='dense', n_neighbors=2, path_method='D')),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=56, num_parallel_tree=1, objective='multi:softprob', predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=None, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.75,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.75,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.75,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.75,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.75,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.5,
                                        min_impurity_decrease=0.0015,
                                        min_samples_leaf=5, min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.5,
                                        min_impurity_decrease=0.0015,
                                        min_samples_leaf=5, min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.5,
                                        min_impurity_decrease=0.0015,
                                        min_samples_leaf=5, min_samples_split=5,
                                        random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('bernoullinb', BernoulliNB(alpha=0.1))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        min_samples_leaf=20,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('adaboostclassifier', AdaBoostClassifier(random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.01, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.25,
                                        min_impurity_decrease=0.00175,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.0001, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.01, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('normalizer', Normalizer(norm='l1')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='False')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('pca',
                 PCA(n_components=5, random_state=42, svd_solver='randomized')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('fastica',
                 FastICA(algorithm='deflation', fun='cube', n_components=5,
                         random_state=42, whiten='False')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=-0.25, gamma=0.0001, n_components=10,
                           random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.01)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.01)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('rbfsampler',
                 RBFSampler(gamma=1e-05, n_components=50, random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('nystroem',
                 Nystroem(degree=5, gamma=0.0001, kernel='cosine',
                          n_components=10, random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(n_components=5, random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=1.0, method='cd', n_components=5,
                           random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=56, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('bernoullinb', BernoulliNB(alpha=0.1, fit_prior=False))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('bernoullinb', BernoulliNB(alpha=0.1, fit_prior=False))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('bernoullinb', BernoulliNB(alpha=0.1, fit_prior=False))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('bernoullinb', BernoulliNB(alpha=0.01, fit_prior=False))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='True')),
                ('bernoullinb', BernoulliNB(alpha=0.01, fit_prior=False))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('bernoullinb', BernoulliNB(alpha=0.01, fit_prior=False))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('bernoullinb', BernoulliNB(alpha=0.01, fit_prior=False))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('isomap', Isomap()),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('bernoullinb',
                 BernoulliNB(alpha=10.0, binarize=0.25, fit_prior=False))])","Pipeline(steps=[('pca',
                 PCA(n_components=5, random_state=42, svd_solver='full')),
                ('bernoullinb',
                 BernoulliNB(alpha=10.0, binarize=0.25, fit_prior=False))])","Pipeline(steps=[('fastica',
                 FastICA(algorithm='deflation', fun='exp', random_state=42,
                         whiten='True')),
                ('bernoullinb',
                 BernoulliNB(alpha=10.0, binarize=0.25, fit_prior=False))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=0.0, gamma=0.001, random_state=42)),
                ('bernoullinb',
                 BernoulliNB(alpha=10.0, binarize=0.25, fit_prior=False))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.01)),
                ('bernoullinb',
                 BernoulliNB(alpha=10.0, binarize=0.25, fit_prior=False))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.01)),
                ('bernoullinb',
                 BernoulliNB(alpha=10.0, binarize=0.25, fit_prior=False))])","Pipeline(steps=[('selectpercentile',
                 SelectPercentile(percentile=50,
                                  score_func=<function mutual_info_regression at 0x7f5193b3caf0>)),
                ('bernoullinb',
                 BernoulliNB(alpha=10.0, binarize=0.25, fit_prior=False))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=1.0, random_state=42, ridge_alpha=0.5)),
                ('bernoullinb',
                 BernoulliNB(alpha=10.0, binarize=0.25, fit_prior=False))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=56, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('bernoullinb', BernoulliNB(binarize=0.1, fit_prior=False))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l1', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(10, 5), random_state=42,
                               solver='lbfgs'))])","Pipeline(steps=[('adaboostclassifier', AdaBoostClassifier(random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.4))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(colsample_bytree=0.8666666666666667,
                                learning_rate=0.007570946626521759,
                                min_child_samples=170, num_leaves=40,
                                random_state=42, reg_alpha=0.26530612244897955,
                                subsample=0.7121212121212122))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=5,
                                        min_samples_split=20, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.4))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.004,
                                        min_samples_leaf=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.004,
                                        min_samples_leaf=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.004,
                                        min_samples_leaf=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0015,
                                        min_samples_split=20, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='False')),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0015,
                                        min_samples_split=20, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0015,
                                        min_samples_split=20, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0015,
                                        min_samples_split=20, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0015,
                                        min_samples_split=20, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0015,
                                        min_samples_split=20, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0015,
                                        min_samples_split=20, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.25,
                                        min_impurity_decrease=0.00125,
                                        min_samples_split=20, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.05)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.25,
                                        min_impurity_decrease=0.00125,
                                        min_samples_split=20, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.25,
                                        min_impurity_decrease=0.00125,
                                        min_samples_split=20, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.25,
                                        min_impurity_decrease=0.00125,
                                        min_samples_split=20, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.25,
                                        min_impurity_decrease=0.00125,
                                        min_samples_split=20, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=1.0, random_state=42, ridge_alpha=0.5)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.25,
                                        min_impurity_decrease=0.00125,
                                        min_samples_split=20, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('isomap',
                 Isomap(eigen_solver='arpack', n_components=5,
                        path_method='FW')),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.25,
                                        min_impurity_decrease=0.00125,
                                        min_samples_split=20, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(eigen_solver='arpack',
                                        random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.25,
                                        min_impurity_decrease=0.00125,
                                        min_samples_split=20, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, miss...ree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        max_features=0.75,
                                        min_impurity_decrease=0.004,
                                        min_samples_leaf=15,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=None,
                                        min_samples_split=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc', LinearSVC(C=20.0, random_state=42, tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, degree=2, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='none', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(10, 5), random_state=42,
                               solver='lbfgs'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.01, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.32268577008233507,
                                min_child_samples=185, num_leaves=55,
                                random_state=42, reg_alpha=0.36734693877551017,
                                subsample=0.7070707070707071,
                                subsample_for_bin=60000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=10, max_features=0.5,
                                        min_impurity_decrease=0.0005,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='tanh', alpha=0.01,
                               hidden_layer_sizes=(10, 5), random_state=42,
                               solver='lbfgs'))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='goss',
                                colsample_bytree=0.9111111111111111,
                                learning_rate=0.10145590090233389,
                                min_child_samples=25, num_leaves=100,
                                random_state=42, reg_alpha=0.24489795918367346,
                                subsample=0.5606060606060606,
                                subsample_for_bin=220000))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('bernoullinb', BernoulliNB(alpha=0.1))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=10, min_samples_split=10,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.0005,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=15.0, fit_intercept=False, loss='hinge',
                           random_state=42))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=1,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.25, min_samples_leaf=20,
                                      min_samples_split=10, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.1, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('polynomialfeatures',
                 PolynomialFeatures(degree=3, interaction_only=True)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='full')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('fastica',
                 FastICA(n_components=10, random_state=42, whiten='False')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=0.25, degree=4, gamma=0.0001,
                           random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.1)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=2.0, method='cd', random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=56, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00175,
                                        min_samples_leaf=15,
                                        min_samples_split=20, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00175,
                                        min_samples_leaf=15,
                                        min_samples_split=20, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00175,
                                        min_samples_leaf=15,
                                        min_samples_split=20, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.5,
                                        min_impurity_decrease=0.00075,
                                        min_samples_leaf=20, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.5,
                                        min_impurity_decrease=0.00075,
                                        min_samples_leaf=20, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.5,
                                        min_impurity_decrease=0.00075,
                                        min_samples_leaf=20, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.5,
                                        min_impurity_decrease=0.00075,
                                        min_samples_leaf=20, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.5,
                                        min_impurity_decrease=0.00075,
                                        min_samples_leaf=20, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=100.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=15,
                                        max_features=0.25,
                                        min_impurity_decrease=0.00025,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, gamma=100.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(alpha=0.1, hidden_layer_sizes=(5, 10),
                               random_state=42, solver='lbfgs'))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.2))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.01, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(colsample_bytree=0.8666666666666667,
                                learning_rate=0.007570946626521759,
                                min_child_samples=170, num_leaves=40,
                                random_state=42, reg_alpha=0.26530612244897955,
                                subsample=0.7121212121212122))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('svc',
                 SVC(C=0.01, coef0=100.0, gamma=0.5, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.2))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.01, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        max_features=0.25,
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=10,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.0005,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=70, p=1))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(eta0=50.0, l1_ratio=1.0,
                               learning_rate='constant', loss='squared_hinge',
                               max_iter=5, penalty='none', power_t=100.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('svc',
                 SVC(coef0=10.0, gamma=10.0, kernel='sigmoid', probability=True,
                     random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(alpha=0.001, hidden_layer_sizes=(10, 5),
                               random_state=42, solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=50.0, random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(colsample_bytree=0.8666666666666667,
                                learning_rate=0.007570946626521759,
                                min_child_samples=170, num_leaves=40,
                                random_state=42, reg_alpha=0.26530612244897955,
                                subsample=0.7121212121212122))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        max_features=0.1,
                                        min_impurity_decrease=0.0035,
                                        min_samples_leaf=20,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features=0.75,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=1,
                                            max_features='sqrt',
                                            min_impurity_decrease=0.0005,
                                            min_samples_leaf=15,
                                            min_samples_split=20,
                                            n_estimators=1000, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, p=1))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.001, eta0=10.0, l1_ratio=0.5,
                               loss='perceptron', max_iter=5, power_t=1.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=50.0, coef0=100.0, gamma=10.0, kernel='sigmoid',
                     probability=True, random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='tanh', alpha=0.001,
                               hidden_layer_sizes=(100, 100, 100),
                               random_state=42, solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=1e-06, fit_intercept=False,
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='goss',
                                colsample_bytree=0.9555555555555555,
                                learning_rate=0.03264260570563923,
                                min_child_samples=55, num_leaves=113,
                                random_state=42, reg_alpha=0.6326530612244897,
                                subsample=0.9191919191919192,
                                subsample_for_bin=40000))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.4,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='False')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.4,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.4,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.4,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.4,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.4,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.4,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.2, random_state=42))])","Pipeline(steps=[('pca',
                 PCA(n_components=5, random_state=42, svd_solver='randomized')),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.2, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest(k=20)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.2, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.05)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.2, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.05)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.2, random_state=42))])","Pipeline(steps=[('selectpercentile',
                 SelectPercentile(percentile=90,
                                  score_func=<function f_regression at 0x7f5193b31310>)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.2, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(gamma=0.5, random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.2, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.2, random_state=42))])","Pipeline(steps=[('nmf',
                 NMF(l1_ratio=1, n_components=5, random_state=42, tol=1e-05)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.2, random_state=42))])","Pipeline(steps=[('nystroem',
                 Nystroem(degree=5, gamma=0.01, kernel='sigmoid',
                          n_components=10, random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.2, random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=2.0, random_state=42, ridge_alpha=1.0)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.2, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=56, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=100.0))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=70, weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, loss='hinge', random_state=42, tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=100.0, l1_ratio=0.75,
                               learning_rate='invscaling', loss='log',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, degree=2, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l1', random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=50.0, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=1.0))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42, shrinking=False))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=15.0, fit_intercept=False, loss='hinge',
                           random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(eta0=0.5, fit_intercept=False, l1_ratio=0.1,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l1', random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=100.0, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='linear', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('svc',
                 SVC(C=10.0, degree=2, gamma=100.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('powertransformer',
                 PowerTransformer(method='box-cox', standardize='False')),
                ('svc',
                 SVC(C=10.0, degree=2, gamma=100.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('svc',
                 SVC(C=10.0, degree=2, gamma=100.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('svc',
                 SVC(C=100.0, coef0=50.0, gamma=1.0, probability=True,
                     random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='False')),
                ('svc',
                 SVC(C=100.0, coef0=50.0, gamma=1.0, probability=True,
                     random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('svc',
                 SVC(C=100.0, coef0=50.0, gamma=1.0, probability=True,
                     random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('svc',
                 SVC(C=100.0, coef0=50.0, gamma=1.0, probability=True,
                     random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=0.001, fit_prior=False))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=3, max_features=0.75,
                                        min_impurity_decrease=0.0022500000000000003,
                                        min_samples_split=20,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.0005,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, weights='distance'))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(eta0=50.0, l1_ratio=1.0,
                               learning_rate='constant', loss='squared_hinge',
                               max_iter=5, penalty='none', power_t=100.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('svc',
                 SVC(coef0=10.0, gamma=10.0, kernel='sigmoid', probability=True,
                     random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(alpha=0.1, hidden_layer_sizes=(5, 10),
                               random_state=42, solver='lbfgs'))])","Pipeline(steps=[('adaboostclassifier', AdaBoostClassifier(random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.2))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(colsample_bytree=0.8666666666666667,
                                learning_rate=0.007570946626521759,
                                min_child_samples=170, num_leaves=40,
                                random_state=42, reg_alpha=0.26530612244897955,
                                subsample=0.7121212121212122))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.2))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, weights='distance'))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, weights='distance'))])","Pipeline(steps=[('normalizer', Normalizer(norm='max')),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, weights='distance'))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='False')),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('isomap', Isomap()),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, p=1))])","Pipeline(steps=[('pca', PCA(n_components=3, random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, p=1))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=-1.0, degree=4, gamma=2.0, kernel='cosine',
                           n_components=3, random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, p=1))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.1)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, p=1))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, p=1))])","Pipeline(steps=[('nmf',
                 NMF(l1_ratio=1, n_components=5, random_state=42, tol=0.01)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, p=1))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, p=1))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=1.0, method='cd', n_components=10,
                           random_state=42, ridge_alpha=0.5)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, p=1))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=56, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=1.0, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=0.1))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=3, max_features=0.75,
                                        min_impurity_decrease=0.0022500000000000003,
                                        min_samples_split=20,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=1.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.00175,
                                            min_samples_leaf=5,
                                            min_samples_split=20,
                                            random_state=42, subsample=0.7))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(alpha=0.01, hidden_layer_sizes=(50, 50, 50),
                               random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.8))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.32268577008233507,
                                min_child_samples=185, num_leaves=55,
                                random_state=42, reg_alpha=0.36734693877551017,
                                subsample=0.7070707070707071,
                                subsample_for_bin=60000))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=15, n_estimators=10,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.9555555555555555,
                                learning_rate=0.13753380039540328,
                                min_child_samples=45, num_leaves=114,
                                random_state=42, reg_alpha=0.061224489795918366,
                                subsample=0.893939393939394,
                                subsample_for_bin=60000))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('polynomialfeatures',
                 PolynomialFeatures(degree=3, interaction_only=True)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('pca',
                 PCA(n_components=5, random_state=42, svd_solver='full')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=-0.25, gamma=0.0001, n_components=10,
                           random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.0)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nmf',
                 NMF(l1_ratio=0.5, n_components=5, random_state=42, tol=0.01)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=0.5, n_components=5, random_state=42,
                           ridge_alpha=1.0)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=56, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=0.001, fit_prior=False))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=10, min_samples_split=10,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.0005,
                                        min_samples_leaf=15,
                                        min_samples_split=20,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=10,
                                            max_features=0.75,
                                            min_impurity_decrease=0.0005,
                                            min_samples_leaf=20,
                                            min_samples_split=10,
                                            n_estimators=10, random_state=42,
                                            subsample=0.5))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(alpha=0.01, hidden_layer_sizes=(50, 50, 50),
                               random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(colsample_bytree=0.8666666666666667,
                                learning_rate=0.007570946626521759,
                                min_child_samples=170, num_leaves=40,
                                random_state=42, reg_alpha=0.26530612244897955,
                                subsample=0.7121212121212122))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=13, max_features='log2',
                                        min_impurity_decrease=0.00175,
                                        min_samples_leaf=10,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=20,
                                      min_samples_split=20, n_estimators=10,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features=None, min_samples_leaf=10,
                                        n_estimators=500, random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=5,
                                            max_features=0.75,
                                            min_impurity_decrease=0.003,
                                            min_samples_leaf=15,
                                            n_estimators=1000, random_state=42,
                                            subsample=0.2))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.0022500000000000003,
                                        min_samples_leaf=5, min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.0022500000000000003,
                                        min_samples_leaf=5, min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('polynomialfeatures',
                 PolynomialFeatures(interaction_only=True)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.0022500000000000003,
                                        min_samples_leaf=5, min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=3,
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00475,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='True')),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=3,
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00475,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=3,
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00475,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=3,
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00475,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=3,
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00475,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=3,
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00475,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=3,
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00475,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=8, max_features='sqrt',
                                        min_impurity_decrease=0.00175,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('pca',
                 PCA(n_components=5, random_state=42, svd_solver='full')),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=8, max_features='sqrt',
                                        min_impurity_decrease=0.00175,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('fastica',
                 FastICA(n_components=10, random_state=42, whiten='True')),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=8, max_features='sqrt',
                                        min_impurity_decrease=0.00175,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=0.5, degree=2, gamma=0.0001, kernel='poly',
                           n_components=5, random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=8, max_features='sqrt',
                                        min_impurity_decrease=0.00175,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.05)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=8, max_features='sqrt',
                                        min_impurity_decrease=0.00175,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.05)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=8, max_features='sqrt',
                                        min_impurity_decrease=0.00175,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('nmf', NMF(l1_ratio=0.7, random_state=42, tol=0.01)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=8, max_features='sqrt',
                                        min_impurity_decrease=0.00175,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=8, max_features='sqrt',
                                        min_impurity_decrease=0.00175,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=1.0, random_state=42, ridge_alpha=0.5)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=8, max_features='sqrt',
                                        min_impurity_decrease=0.00175,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, miss...lel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=5, max_features='log2',
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=5, max_features='log2',
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=5, max_features='log2',
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=5, max_features='log2',
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=5, max_features='log2',
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=5, max_features='log2',
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=5, max_features='log2',
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=5, max_features='log2',
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=5, max_features='log2',
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=5, max_features='log2',
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=5, max_features='log2',
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=5, max_features='log2',
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('polynomialfeatures',
                 PolynomialFeatures(interaction_only=True)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='True')),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.01,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('pca', PCA(n_components=5, random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.01,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('fastica',
                 FastICA(algorithm='deflation', fun='cube', n_components=10,
                         random_state=42, whiten='False')),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.01,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=-0.75, degree=5, gamma=0.001, n_components=10,
                           random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.01,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.05)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.01,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.05)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.01,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('nmf', NMF(l1_ratio=0.2, random_state=42, tol=0.01)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.01,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.01,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=2.0, n_components=5, random_state=42,
                           ridge_alpha=0.5)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.01,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=56, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=100.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        min_samples_leaf=20,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_split=15, n_estimators=10,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.0005,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(eta0=50.0, l1_ratio=1.0,
                               learning_rate='constant', loss='squared_hinge',
                               max_iter=5, penalty='none', power_t=100.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('adaboostclassifier', AdaBoostClassifier(random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=10.0,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=10.0,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('polynomialfeatures',
                 PolynomialFeatures(degree=3, interaction_only=True)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=10.0,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='False')),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('pca', PCA(n_components=5, random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=-1.0, degree=4, gamma=0.001, kernel='cosine',
                           n_components=5, random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.0)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('skewedchi2sampler',
                 SkewedChi2Sampler(n_components=200, random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(alpha=1.0, random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.5,
                                      min_samples_leaf=10, min_samples_split=15,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, p=1))])","Pipeline(steps=[('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron',
                 Perceptron(penalty='elasticnet', random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.01, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=1.0))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features=0.1,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, p=1,
                                      weights='distance'))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=1.0))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='full')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=-0.25, gamma=0.0001, n_components=10,
                           random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.1)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nmf', NMF(l1_ratio=0, n_components=10, random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nystroem',
                 Nystroem(degree=4, gamma=1.0, kernel='poly', n_components=20,
                          random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(alpha=0.5, random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=56, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('bernoullinb', BernoulliNB(alpha=10.0, binarize=0.9))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=3, max_features=0.75,
                                        min_impurity_decrease=0.0022500000000000003,
                                        min_samples_split=20,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.00475,
                                        min_samples_leaf=5, min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.6))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=1,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('polynomialfeatures',
                 PolynomialFeatures(degree=3, interaction_only=True)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='full')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('fastica',
                 FastICA(algorithm='deflation', n_components=10,
                         random_state=42, whiten='False')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=0.25, degree=4, gamma=0.0001,
                           random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.1)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=2.0, method='cd', random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=56, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features='log2',
                                        min_impurity_decrease=0.00175,
                                        min_samples_leaf=10,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features='log2',
                                        min_impurity_decrease=0.00175,
                                        min_samples_leaf=10,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures(degree=3)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features='log2',
                                        min_impurity_decrease=0.00175,
                                        min_samples_leaf=10,
                                        min_samples_split=5,
                                        random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=100.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=8, max_features='sqrt',
                                        min_impurity_decrease=0.00175,
                                        min_samples_leaf=15,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.0005,
                                        min_samples_leaf=15,
                                        min_samples_split=20,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=100, p=1,
                                      weights='distance'))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=1e-05, eta0=0.01, l1_ratio=1.0,
                               learning_rate='constant', loss='log', max_iter=5,
                               penalty='none', random_state=42, tol=None))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=1.0))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=0.001))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier', KNeighborsClassifier(n_neighbors=20))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=1.0))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.004,
                                        min_samples_leaf=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.004,
                                        min_samples_leaf=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.004,
                                        min_samples_leaf=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='log2',
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=5,
                                        min_samples_split=20, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='False')),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='log2',
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=5,
                                        min_samples_split=20, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='log2',
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=5,
                                        min_samples_split=20, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='log2',
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=5,
                                        min_samples_split=20, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='log2',
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=5,
                                        min_samples_split=20, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='log2',
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=5,
                                        min_samples_split=20, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_samples_leaf=20,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('pca',
                 PCA(n_components=5, random_state=42, svd_solver='randomized')),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_samples_leaf=20,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('fastica',
                 FastICA(fun='cube', n_components=10, random_state=42,
                         whiten='False')),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_samples_leaf=20,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=1.0, degree=5, gamma=0.0001, kernel='poly',
                           n_components=5, random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_samples_leaf=20,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.1)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_samples_leaf=20,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.05)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_samples_leaf=20,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_samples_leaf=20,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('nmf',
                 NMF(l1_ratio=0.7, n_components=5, random_state=42, tol=1e-05)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_samples_leaf=20,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=1.0, method='cd', n_components=5,
                           random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_samples_leaf=20,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, miss...r='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=15,
                                        max_features=0.25,
                                        min_impurity_decrease=0.00025,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_split=15, n_estimators=10,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.2))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.01, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.3, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features='log2',
                                        min_impurity_decrease=0.0005,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, gamma='auto', kernel='poly', probability=True,
                     random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.2, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features='log2',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=5,
                                        min_samples_split=20, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features='log2',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=5,
                                        min_samples_split=20, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures(degree=3)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features='log2',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=5,
                                        min_samples_split=20, n_estimators=1000,
                                        random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=8, max_features='sqrt',
                                        min_impurity_decrease=0.00175,
                                        min_samples_leaf=15,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.0005,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(alpha=0.01, hidden_layer_sizes=(50, 50, 50),
                               random_state=42))])","Pipeline(steps=[('adaboostclassifier', AdaBoostClassifier(random_state=42))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.32268577008233507,
                                min_child_samples=185, num_leaves=55,
                                random_state=42, reg_alpha=0.36734693877551017,
                                subsample=0.7070707070707071,
                                subsample_for_bin=60000))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('svc',
                 SVC(C=0.01, coef0=100.0, gamma=0.5, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='tanh', alpha=0.01,
                               hidden_layer_sizes=(10, 5), random_state=42,
                               solver='lbfgs'))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        max_features=0.75,
                                        min_impurity_decrease=0.004,
                                        min_samples_leaf=15,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_split=15, n_estimators=10,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.0005,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, loss='hinge', random_state=42, tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('adaboostclassifier', AdaBoostClassifier(random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.2))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5, random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='full')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=0.25, degree=5, gamma=0.0001, n_components=10,
                           random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.0)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('selectpercentile',
                 SelectPercentile(percentile=20,
                                  score_func=<function mutual_info_regression at 0x7f5193b3caf0>)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skewedchi2sampler',
                 SkewedChi2Sampler(n_components=200, random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=2.0, n_components=10, random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, miss...onstraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, objective='multi:softprob', predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=None, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, objective='multi:softprob', predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=None, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_split=15, n_estimators=10,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.0005,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc', LinearSVC(C=20.0, random_state=42, tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.001, eta0=50.0, l1_ratio=0.75,
                               loss='perceptron', max_iter=5,
                               penalty='elasticnet', power_t=10.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('perceptron', Perceptron(penalty='none', random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.01, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42, shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='goss', colsample_bytree=0.6,
                                learning_rate=0.005432578873262691,
                                min_child_samples=470, num_leaves=110,
                                random_state=42, reg_alpha=0.42857142857142855,
                                subsample=0.8838383838383839,
                                subsample_for_bin=280000))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=5.0, dual=False, fit_intercept=False, penalty='l1',
                           random_state=42, tol=1e-05))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.0001, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.8, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.8, random_state=42))])","Pipeline(steps=[('polynomialfeatures',
                 PolynomialFeatures(degree=3, interaction_only=True)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.8, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('fastica',
                 FastICA(n_components=10, random_state=42, whiten='False')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=-1.0, degree=4, gamma=0.001, kernel='cosine',
                           n_components=5, random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest(k=20)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.01)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.01)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nmf',
                 NMF(l1_ratio=0, n_components=10, random_state=42, tol=0.01)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=2.0, method='cd', random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        max_features=0.75,
                                        min_impurity_decrease=0.004,
                                        min_samples_leaf=15,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.0005,
                                        min_samples_leaf=15,
                                        min_samples_split=20,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=10,
                                            max_features=0.75,
                                            min_impurity_decrease=0.0005,
                                            min_samples_leaf=20,
                                            min_samples_split=10,
                                            n_estimators=10, random_state=42,
                                            subsample=0.5))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=1e-05, eta0=0.01, l1_ratio=1.0,
                               learning_rate='constant', loss='log', max_iter=5,
                               penalty='none', random_state=42, tol=None))])","Pipeline(steps=[('svc',
                 SVC(coef0=10.0, gamma=10.0, kernel='sigmoid', probability=True,
                     random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(alpha=0.1, hidden_layer_sizes=(5, 10),
                               random_state=42, solver='lbfgs'))])","Pipeline(steps=[('adaboostclassifier', AdaBoostClassifier(random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.4))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='goss', colsample_bytree=0.6,
                                learning_rate=0.005432578873262691,
                                min_child_samples=470, num_leaves=110,
                                random_state=42, reg_alpha=0.42857142857142855,
                                subsample=0.8838383838383839,
                                subsample_for_bin=280000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=None,
                                      min_samples_leaf=5, min_samples_split=20,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=5,
                                            max_features=0.75,
                                            min_impurity_decrease=0.003,
                                            min_samples_leaf=15,
                                            n_estimators=1000, random_state=42,
                                            subsample=0.2))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.4))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=None,
                                      min_samples_leaf=5, min_samples_split=20,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=None,
                                      min_samples_leaf=5, min_samples_split=20,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=None,
                                      min_samples_leaf=5, min_samples_split=20,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=None,
                                      min_samples_leaf=5, min_samples_split=20,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=None,
                                      min_samples_leaf=5, min_samples_split=20,
                                      n_estimators=50, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=50.0, random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=None,
                                      min_samples_leaf=5, min_samples_split=20,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.25,
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=20,
                                        min_samples_split=20, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=5.0, dual=False, fit_intercept=False, penalty='l1',
                           random_state=42, tol=1e-05))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=10.0,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.2,
                                   random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.01, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.01, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.01, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='False')),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('fastica',
                 FastICA(algorithm='deflation', fun='cube', random_state=42,
                         whiten='True')),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=-1.0, degree=4, gamma=0.01, random_state=42)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest(k=20)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.05)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.01)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('selectpercentile',
                 SelectPercentile(percentile=50,
                                  score_func=<function f_regression at 0x7f5193b31310>)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(n_components=10, random_state=42,
                                        reg=0.1)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0, fit_intercept=False,
                                 random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_split=15, n_estimators=10,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=None,
                                        min_samples_split=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=10,
                                            max_features=0.75,
                                            min_impurity_decrease=0.0005,
                                            min_samples_leaf=20,
                                            min_samples_split=10,
                                            n_estimators=10, random_state=42,
                                            subsample=0.5))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=0.5, l1_ratio=0.0,
                               loss='squared_hinge', max_iter=5, power_t=100.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic',
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=50.0, random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.4))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='goss', colsample_bytree=0.6,
                                learning_rate=0.005432578873262691,
                                min_child_samples=470, num_leaves=110,
                                random_state=42, reg_alpha=0.42857142857142855,
                                subsample=0.8838383838383839,
                                subsample_for_bin=280000))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=5.0, dual=False, fit_intercept=False, penalty='l1',
                           random_state=42, tol=1e-05))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.001, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=1e-06, fit_intercept=False,
                                             random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.4))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('linearsvc',
                 LinearSVC(C=5.0, dual=False, fit_intercept=False, penalty='l1',
                           random_state=42, tol=1e-05))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('linearsvc',
                 LinearSVC(C=5.0, dual=False, fit_intercept=False, penalty='l1',
                           random_state=42, tol=1e-05))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('linearsvc',
                 LinearSVC(C=5.0, dual=False, fit_intercept=False, penalty='l1',
                           random_state=42, tol=1e-05))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('linearsvc',
                 LinearSVC(C=5.0, dual=False, fit_intercept=False, penalty='l1',
                           random_state=42, tol=1e-05))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('linearsvc',
                 LinearSVC(C=5.0, dual=False, fit_intercept=False, penalty='l1',
                           random_state=42, tol=1e-05))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('bernoullinb',
                 BernoulliNB(alpha=100.0, binarize=0.5, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features='log2',
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=10,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=100, p=1,
                                      weights='distance'))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.2))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.1,
                                        min_impurity_decrease=0.00475,
                                        min_samples_leaf=20,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.2))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.75, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.75, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('normalizer', Normalizer(norm='max')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.75, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features='log2',
                                      min_samples_leaf=10, min_samples_split=15,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='True')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features='log2',
                                      min_samples_leaf=10, min_samples_split=15,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features='log2',
                                      min_samples_leaf=10, min_samples_split=15,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features='log2',
                                      min_samples_leaf=10, min_samples_split=15,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features='log2',
                                      min_samples_leaf=10, min_samples_split=15,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features='log2',
                                      min_samples_leaf=10, min_samples_split=15,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features='log2',
                                      min_samples_leaf=10, min_samples_split=15,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_split=5, random_state=42))])","Pipeline(steps=[('fastica',
                 FastICA(algorithm='deflation', n_components=10,
                         random_state=42, whiten='False')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_split=5, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_split=5, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.05)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_split=5, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.05)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_split=5, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_split=5, random_state=42))])","Pipeline(steps=[('nmf',
                 NMF(l1_ratio=0.5, n_components=10, random_state=42,
                     tol=1e-05)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_split=5, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_split=5, random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=2.0, random_state=42, ridge_alpha=0.5)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_split=5, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, miss..._estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.1,
                                      min_samples_leaf=10, min_samples_split=20,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.1,
                                      min_samples_leaf=10, min_samples_split=20,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.1,
                                      min_samples_leaf=10, min_samples_split=20,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.1,
                                      min_samples_leaf=10, min_samples_split=20,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.1,
                                      min_samples_leaf=10, min_samples_split=20,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.1,
                                      min_samples_leaf=10, min_samples_split=20,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.1,
                                      min_samples_leaf=10, min_samples_split=20,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.1,
                                      min_samples_leaf=10, min_samples_split=20,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.1,
                                      min_samples_leaf=10, min_samples_split=20,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.1,
                                      min_samples_leaf=10, min_samples_split=20,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.1,
                                      min_samples_leaf=10, min_samples_split=20,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.1,
                                      min_samples_leaf=10, min_samples_split=20,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('polynomialfeatures',
                 PolynomialFeatures(interaction_only=True)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=0.0, gamma=0.001, random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest(k=5)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.1)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nmf',
                 NMF(l1_ratio=0.5, n_components=10, random_state=42, tol=0.01)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('skewedchi2sampler',
                 SkewedChi2Sampler(n_components=200, random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=2.0, method='cd', random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('normalizer', Normalizer(norm='l1')),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='True')),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('fastica',
                 FastICA(algorithm='deflation', fun='exp', n_components=10,
                         random_state=42, whiten='False')),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest(k=5)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.1)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('nmf', NMF(l1_ratio=0.7, n_components=10, random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('skewedchi2sampler',
                 SkewedChi2Sampler(n_components=50, random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=0.5, method='cd', n_components=10,
                           random_state=42, ridge_alpha=1.0)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer(norm='l1')),
                ('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('skewedchi2sampler',
                 SkewedChi2Sampler(n_components=50, random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_leaf=15, min_samples_split=20,
                                      n_estimators=10, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      random_state=42))])","Pipeline(steps=[('normalizer', Normalizer(norm='l1')),
                ('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      random_state=42))])","Pipeline(steps=[('skewedchi2sampler',
                 SkewedChi2Sampler(n_components=50, random_state=42)),
                ('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skewedchi2sampler',
                 SkewedChi2Sampler(n_components=50, random_state=42)),
                ('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.2,
                                   n_estimators=100, random_state=42))])",,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=0.1))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=3, max_features=0.5,
                                        min_impurity_decrease=0.004,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_split=15, n_estimators=10,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.0005,
                                        min_samples_leaf=15,
                                        min_samples_split=20,
                                        random_state=42))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('svc',
                 SVC(coef0=10.0, gamma=10.0, kernel='sigmoid', probability=True,
                     random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(alpha=0.1, hidden_layer_sizes=(5, 10),
                               random_state=42, solver='lbfgs'))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42, shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(colsample_bytree=0.8666666666666667,
                                learning_rate=0.007570946626521759,
                                min_child_samples=170, num_leaves=40,
                                random_state=42, reg_alpha=0.26530612244897955,
                                subsample=0.7121212121212122))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=15, n_estimators=10,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic',
                               hidden_layer_sizes=(50, 50, 50),
                               random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=5,
                                        min_samples_split=20, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=5,
                                        min_samples_split=20, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=5,
                                        min_samples_split=20, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='sqrt',
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='False')),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='sqrt',
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='sqrt',
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='sqrt',
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='sqrt',
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('pca',
                 PCA(n_components=5, random_state=42, svd_solver='full')),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=0.75, degree=4, gamma=0.0001, kernel='cosine',
                           n_components=10, random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.05)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('nmf',
                 NMF(l1_ratio=0.5, n_components=10, random_state=42,
                     tol=1e-05)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=1.0, n_components=10, random_state=42,
                           ridge_alpha=1.0)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, miss...ree=1, objective='multi:softprob', predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=None, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=20,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=20,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=20,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=20,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=20,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=20,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=20,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=20,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=20,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=20,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=20,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=20,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('mlpclassifier',
                 MLPClassifier(activation='logistic',
                               hidden_layer_sizes=(50, 50, 50),
                               random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('mlpclassifier',
                 MLPClassifier(activation='logistic',
                               hidden_layer_sizes=(50, 50, 50),
                               random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('mlpclassifier',
                 MLPClassifier(activation='logistic',
                               hidden_layer_sizes=(50, 50, 50),
                               random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('mlpclassifier',
                 MLPClassifier(activation='logistic',
                               hidden_layer_sizes=(50, 50, 50),
                               random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('mlpclassifier',
                 MLPClassifier(activation='logistic',
                               hidden_layer_sizes=(50, 50, 50),
                               random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('mlpclassifier',
                 MLPClassifier(activation='identity', alpha=0.1,
                               hidden_layer_sizes=(100, 100, 100),
                               random_state=42, solver='sgd'))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('mlpclassifier',
                 MLPClassifier(activation='identity', alpha=0.1,
                               hidden_layer_sizes=(100, 100, 100),
                               random_state=42, solver='sgd'))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('mlpclassifier',
                 MLPClassifier(activation='identity', alpha=0.1,
                               hidden_layer_sizes=(100, 100, 100),
                               random_state=42, solver='sgd'))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=0.1))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        min_samples_leaf=20,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=70, p=1))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=0.5, gamma=100.0, probability=True,
                     random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='identity', alpha=0.01,
                               hidden_layer_sizes=(100, 100, 100),
                               random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.01, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(colsample_bytree=0.8666666666666667,
                                learning_rate=0.007570946626521759,
                                min_child_samples=170, num_leaves=40,
                                random_state=42, reg_alpha=0.26530612244897955,
                                subsample=0.7121212121212122))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier', KNeighborsClassifier(n_neighbors=70))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='identity', alpha=0.001,
                               hidden_layer_sizes=(10, 5), random_state=42,
                               solver='lbfgs'))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('mlpclassifier',
                 MLPClassifier(activation='identity', alpha=0.001,
                               hidden_layer_sizes=(10, 5), random_state=42,
                               solver='lbfgs'))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('mlpclassifier',
                 MLPClassifier(activation='identity', alpha=0.001,
                               hidden_layer_sizes=(10, 5), random_state=42,
                               solver='lbfgs'))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('mlpclassifier',
                 MLPClassifier(activation='identity', alpha=0.001,
                               hidden_layer_sizes=(10, 5), random_state=42,
                               solver='lbfgs'))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('mlpclassifier',
                 MLPClassifier(activation='identity', alpha=0.001,
                               hidden_layer_sizes=(10, 5), random_state=42,
                               solver='lbfgs'))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('mlpclassifier',
                 MLPClassifier(activation='identity', alpha=0.001,
                               hidden_layer_sizes=(10, 5), random_state=42,
                               solver='lbfgs'))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('mlpclassifier',
                 MLPClassifier(activation='identity', alpha=0.001,
                               hidden_layer_sizes=(10, 5), random_state=42,
                               solver='lbfgs'))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.01, hidden_layer_sizes=(50, 50, 50),
                               random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.01, hidden_layer_sizes=(50, 50, 50),
                               random_state=42))])","Pipeline(steps=[('normalizer', Normalizer(norm='max')),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.01, hidden_layer_sizes=(50, 50, 50),
                               random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('mlpclassifier',
                 MLPClassifier(activation='identity', alpha=0.001,
                               hidden_layer_sizes=(10, 5), random_state=42,
                               solver='lbfgs'))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('mlpclassifier',
                 MLPClassifier(activation='identity', alpha=0.001,
                               hidden_layer_sizes=(10, 5), random_state=42,
                               solver='lbfgs'))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('mlpclassifier',
                 MLPClassifier(activation='identity', alpha=0.001,
                               hidden_layer_sizes=(10, 5), random_state=42,
                               solver='lbfgs'))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('mlpclassifier',
                 MLPClassifier(activation='identity', alpha=0.001,
                               hidden_layer_sizes=(10, 5), random_state=42,
                               solver='lbfgs'))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('mlpclassifier',
                 MLPClassifier(activation='identity', alpha=0.001,
                               hidden_layer_sizes=(10, 5), random_state=42,
                               solver='lbfgs'))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('mlpclassifier',
                 MLPClassifier(activation='identity', alpha=0.001,
                               hidden_layer_sizes=(10, 5), random_state=42,
                               solver='lbfgs'))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('mlpclassifier',
                 MLPClassifier(activation='identity', alpha=0.001,
                               hidden_layer_sizes=(10, 5), random_state=42,
                               solver='lbfgs'))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('mlpclassifier',
                 MLPClassifier(activation='identity', alpha=0.001,
                               hidden_layer_sizes=(10, 5), random_state=42,
                               solver='lbfgs'))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='False')),
                ('mlpclassifier',
                 MLPClassifier(activation='identity', alpha=0.001,
                               hidden_layer_sizes=(10, 5), random_state=42,
                               solver='lbfgs'))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('mlpclassifier',
                 MLPClassifier(activation='identity', alpha=0.001,
                               hidden_layer_sizes=(10, 5), random_state=42,
                               solver='lbfgs'))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('mlpclassifier',
                 MLPClassifier(activation='identity', alpha=0.001,
                               hidden_layer_sizes=(10, 5), random_state=42,
                               solver='lbfgs'))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('mlpclassifier',
                 MLPClassifier(activation='identity', alpha=0.001,
                               hidden_layer_sizes=(10, 5), random_state=42,
                               solver='lbfgs'))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('mlpclassifier',
                 MLPClassifier(activation='identity', alpha=0.001,
                               hidden_layer_sizes=(10, 5), random_state=42,
                               solver='lbfgs'))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('multinomialnb', MultinomialNB(fit_prior=False))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=20, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features='log2',
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=10,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, p=1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.6))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='goss', colsample_bytree=0.6,
                                learning_rate=0.005432578873262691,
                                min_child_samples=470, num_leaves=110,
                                random_state=42, reg_alpha=0.42857142857142855,
                                subsample=0.8838383838383839,
                                subsample_for_bin=280000))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier', KNeighborsClassifier(n_neighbors=50))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.6))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='sqrt',
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='False')),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='sqrt',
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='sqrt',
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='sqrt',
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='sqrt',
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='sqrt',
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='sqrt',
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features='log2',
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('pca',
                 PCA(n_components=5, random_state=42, svd_solver='randomized')),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features='log2',
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('fastica',
                 FastICA(n_components=3, random_state=42, whiten='False')),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features='log2',
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=0.25, degree=4, gamma=0.0001, kernel='rbf',
                           n_components=10, random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features='log2',
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.05)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features='log2',
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features='log2',
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('nmf',
                 NMF(l1_ratio=0.2, n_components=5, random_state=42, tol=0.1)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features='log2',
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('nystroem',
                 Nystroem(degree=5, gamma=0.0001, n_components=10,
                          random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features='log2',
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=1.0, random_state=42, ridge_alpha=0.5)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features='log2',
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=10,
                                        random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        max_features=0.25,
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=10,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features='log2',
                                      min_samples_leaf=10, min_samples_split=10,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('svc',
                 SVC(coef0=10.0, gamma=10.0, kernel='sigmoid', probability=True,
                     random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic',
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='goss', colsample_bytree=0.6,
                                learning_rate=0.005432578873262691,
                                min_child_samples=470, num_leaves=110,
                                random_state=42, reg_alpha=0.42857142857142855,
                                subsample=0.8838383838383839,
                                subsample_for_bin=280000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        max_features=0.1,
                                        min_impurity_decrease=0.0035,
                                        min_samples_leaf=20,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.25,
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=20,
                                        min_samples_split=20, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(max_depth=1, max_features=0.5,
                                            min_impurity_decrease=0.0035,
                                            min_samples_leaf=20,
                                            min_samples_split=15,
                                            n_estimators=10, random_state=42,
                                            subsample=0.2))])","Pipeline(steps=[('svc',
                 SVC(C=50.0, coef0=100.0, gamma=10.0, kernel='sigmoid',
                     probability=True, random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='tanh', alpha=0.01,
                               hidden_layer_sizes=(10, 5), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=10.0,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(colsample_bytree=0.9111111111111111,
                                learning_rate=0.11228489977698869,
                                min_child_samples=100, num_leaves=125,
                                random_state=42, reg_alpha=0.18367346938775508,
                                subsample=0.9646464646464648))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.5,
                                      min_samples_leaf=10, min_samples_split=15,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features='log2',
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=10,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=100, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(kernel='linear', random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_leaf=20, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_leaf=20, random_state=42))])","Pipeline(steps=[('polynomialfeatures',
                 PolynomialFeatures(interaction_only=True)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_leaf=20, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=5, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='True')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=5, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=5, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=5, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=5, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_leaf=10,
                                      min_samples_split=20, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='full')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_leaf=10,
                                      min_samples_split=20, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=-0.75, degree=4, gamma=0.001,
                           random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_leaf=10,
                                      min_samples_split=20, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_leaf=10,
                                      min_samples_split=20, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.05)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_leaf=10,
                                      min_samples_split=20, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.05)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_leaf=10,
                                      min_samples_split=20, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('selectpercentile',
                 SelectPercentile(percentile=70,
                                  score_func=<function f_regression at 0x7f5193b31310>)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_leaf=10,
                                      min_samples_split=20, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_leaf=10,
                                      min_samples_split=20, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(alpha=0.5, random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_leaf=10,
                                      min_samples_split=20, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, miss...obs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, miss...n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=0.001))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=8, max_features='sqrt',
                                        min_impurity_decrease=0.00175,
                                        min_samples_leaf=15,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l1', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic',
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=1e-05, fit_intercept=False,
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier', AdaBoostClassifier(random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=1.0))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=5, min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.25,
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=20,
                                        min_samples_split=20, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=1e-06, fit_intercept=False,
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=1.0))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('multinomialnb', MultinomialNB(fit_prior=False))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=20, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features='log2',
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=10,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, p=1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.6))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='goss', colsample_bytree=0.6,
                                learning_rate=0.005432578873262691,
                                min_child_samples=470, num_leaves=110,
                                random_state=42, reg_alpha=0.42857142857142855,
                                subsample=0.8838383838383839,
                                subsample_for_bin=280000))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier', KNeighborsClassifier(n_neighbors=50))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.6))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='sqrt',
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='False')),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='sqrt',
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='sqrt',
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='sqrt',
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='sqrt',
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='sqrt',
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='sqrt',
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features='log2',
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('pca',
                 PCA(n_components=5, random_state=42, svd_solver='randomized')),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features='log2',
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('fastica',
                 FastICA(n_components=3, random_state=42, whiten='False')),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features='log2',
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=0.25, degree=4, gamma=0.0001, kernel='rbf',
                           n_components=10, random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features='log2',
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.05)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features='log2',
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features='log2',
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('nmf',
                 NMF(l1_ratio=0.2, n_components=5, random_state=42, tol=0.1)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features='log2',
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('nystroem',
                 Nystroem(degree=5, gamma=0.0001, n_components=10,
                          random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features='log2',
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=1.0, random_state=42, ridge_alpha=0.5)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features='log2',
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=10,
                                        random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('bernoullinb',
                 BernoulliNB(alpha=100.0, binarize=0.5, fit_prior=False))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=1.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.00175,
                                            min_samples_leaf=5,
                                            min_samples_split=20,
                                            random_state=42, subsample=0.7))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, weights='distance'))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, degree=2, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='none', random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.01, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42, shrinking=False))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse='False')),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('polynomialfeatures',
                 PolynomialFeatures(degree=3, interaction_only=True)),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer(norm='max')),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.7, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='False')),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.7, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.7, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.7, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.7, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.7, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.7, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('nusvc',
                 NuSVC(kernel='sigmoid', nu=0.7, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='full')),
                ('nusvc',
                 NuSVC(kernel='sigmoid', nu=0.7, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('fastica',
                 FastICA(algorithm='deflation', fun='cube', random_state=42,
                         whiten='False')),
                ('nusvc',
                 NuSVC(kernel='sigmoid', nu=0.7, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=1.0, degree=2, gamma=0.0001, kernel='poly',
                           n_components=10, random_state=42)),
                ('nusvc',
                 NuSVC(kernel='sigmoid', nu=0.7, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.1)),
                ('nusvc',
                 NuSVC(kernel='sigmoid', nu=0.7, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('nusvc',
                 NuSVC(kernel='sigmoid', nu=0.7, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('nmf', NMF(l1_ratio=0.7, random_state=42, tol=0.1)),
                ('nusvc',
                 NuSVC(kernel='sigmoid', nu=0.7, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('nystroem',
                 Nystroem(degree=2, gamma=0.0001, kernel='cosine',
                          n_components=20, random_state=42)),
                ('nusvc',
                 NuSVC(kernel='sigmoid', nu=0.7, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('skewedchi2sampler',
                 SkewedChi2Sampler(n_components=200, random_state=42)),
                ('nusvc',
                 NuSVC(kernel='sigmoid', nu=0.7, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=2.0, method='cd', random_state=42)),
                ('nusvc',
                 NuSVC(kernel='sigmoid', nu=0.7, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('svc',
                 SVC(C=100.0, coef0=50.0, degree=2, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('svc',
                 SVC(C=100.0, coef0=50.0, degree=2, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse='False')),
                ('svc',
                 SVC(C=100.0, coef0=50.0, degree=2, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures(degree=3)),
                ('svc',
                 SVC(C=100.0, coef0=50.0, degree=2, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer(norm='max')),
                ('svc',
                 SVC(C=100.0, coef0=50.0, degree=2, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('svc',
                 SVC(C=0.01, coef0=100.0, gamma=0.1, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='False')),
                ('svc',
                 SVC(C=0.01, coef0=100.0, gamma=0.1, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('svc',
                 SVC(C=0.01, coef0=100.0, gamma=0.1, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('svc',
                 SVC(C=0.01, coef0=100.0, gamma=0.1, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('svc',
                 SVC(C=0.01, coef0=100.0, gamma=0.1, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('svc',
                 SVC(C=0.01, coef0=100.0, gamma=0.1, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('svc',
                 SVC(C=0.01, coef0=100.0, gamma=0.1, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='full')),
                ('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('fastica',
                 FastICA(algorithm='deflation', n_components=3, random_state=42,
                         whiten='True')),
                ('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=0.0, degree=2, gamma=0.01, kernel='rbf',
                           n_components=5, random_state=42)),
                ('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('nmf',
                 NMF(l1_ratio=0.7, n_components=5, random_state=42, tol=0.01)),
                ('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('nystroem',
                 Nystroem(degree=4, gamma=0.0001, kernel='poly',
                          n_components=20, random_state=42)),
                ('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('skewedchi2sampler',
                 SkewedChi2Sampler(n_components=50, random_state=42)),
                ('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=0.5, n_components=10, random_state=42)),
                ('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('svc',
                 SVC(C=50.0, coef0=0.5, degree=2, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('svc',
                 SVC(C=50.0, coef0=0.5, degree=2, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('svc',
                 SVC(C=50.0, coef0=0.5, degree=2, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('svc',
                 SVC(C=50.0, coef0=0.5, degree=2, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('svc',
                 SVC(C=50.0, coef0=0.5, degree=2, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('svc',
                 SVC(C=50.0, coef0=0.5, degree=2, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('svc',
                 SVC(C=50.0, coef0=0.5, degree=2, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('svc',
                 SVC(C=50.0, coef0=0.5, degree=2, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('svc',
                 SVC(C=50.0, coef0=0.5, degree=2, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('svc',
                 SVC(C=50.0, coef0=0.5, degree=2, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('svc',
                 SVC(C=50.0, coef0=0.5, degree=2, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('svc',
                 SVC(C=50.0, coef0=0.5, degree=2, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('svc',
                 SVC(C=50.0, coef0=0.5, degree=2, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('svc',
                 SVC(C=50.0, coef0=0.5, degree=2, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('svc',
                 SVC(C=50.0, coef0=0.5, degree=2, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('svc',
                 SVC(C=50.0, coef0=0.5, degree=2, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features='sqrt',
                                            min_impurity_decrease=0.00425,
                                            min_samples_leaf=10,
                                            min_samples_split=15,
                                            n_estimators=500, random_state=42,
                                            subsample=0.5))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features='sqrt',
                                            min_impurity_decrease=0.00425,
                                            min_samples_leaf=10,
                                            min_samples_split=15,
                                            n_estimators=500, random_state=42,
                                            subsample=0.5))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse='False')),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features='sqrt',
                                            min_impurity_decrease=0.00425,
                                            min_samples_leaf=10,
                                            min_samples_split=15,
                                            n_estimators=500, random_state=42,
                                            subsample=0.5))])","Pipeline(steps=[('polynomialfeatures',
                 PolynomialFeatures(degree=3, interaction_only=True)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features='sqrt',
                                            min_impurity_decrease=0.00425,
                                            min_samples_leaf=10,
                                            min_samples_split=15,
                                            n_estimators=500, random_state=42,
                                            subsample=0.5))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=50.0,
                                            loss='exponential', max_depth=5,
                                            max_features=0.25,
                                            min_impurity_decrease=0.0005,
                                            min_samples_leaf=20,
                                            min_samples_split=10,
                                            random_state=42, subsample=0.7))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='True')),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=50.0,
                                            loss='exponential', max_depth=5,
                                            max_features=0.25,
                                            min_impurity_decrease=0.0005,
                                            min_samples_leaf=20,
                                            min_samples_split=10,
                                            random_state=42, subsample=0.7))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=50.0,
                                            loss='exponential', max_depth=5,
                                            max_features=0.25,
                                            min_impurity_decrease=0.0005,
                                            min_samples_leaf=20,
                                            min_samples_split=10,
                                            random_state=42, subsample=0.7))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=50.0,
                                            loss='exponential', max_depth=5,
                                            max_features=0.25,
                                            min_impurity_decrease=0.0005,
                                            min_samples_leaf=20,
                                            min_samples_split=10,
                                            random_state=42, subsample=0.7))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=50.0,
                                            loss='exponential', max_depth=5,
                                            max_features=0.25,
                                            min_impurity_decrease=0.0005,
                                            min_samples_leaf=20,
                                            min_samples_split=10,
                                            random_state=42, subsample=0.7))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=50.0,
                                            loss='exponential', max_depth=5,
                                            max_features=0.25,
                                            min_impurity_decrease=0.0005,
                                            min_samples_leaf=20,
                                            min_samples_split=10,
                                            random_state=42, subsample=0.7))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=50.0,
                                            loss='exponential', max_depth=5,
                                            max_features=0.25,
                                            min_impurity_decrease=0.0005,
                                            min_samples_leaf=20,
                                            min_samples_split=10,
                                            random_state=42, subsample=0.7))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('isomap', Isomap()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=10.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.75,
                                            min_impurity_decrease=0.0032500000000000003,
                                            min_samples_leaf=10,
                                            min_samples_split=15,
                                            random_state=42, subsample=0.9))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='full')),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=10.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.75,
                                            min_impurity_decrease=0.0032500000000000003,
                                            min_samples_leaf=10,
                                            min_samples_split=15,
                                            random_state=42, subsample=0.9))])","Pipeline(steps=[('fastica',
                 FastICA(fun='exp', n_components=5, random_state=42,
                         whiten='False')),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=10.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.75,
                                            min_impurity_decrease=0.0032500000000000003,
                                            min_samples_leaf=10,
                                            min_samples_split=15,
                                            random_state=42, subsample=0.9))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=-0.75, degree=2, gamma=0.01, kernel='rbf',
                           n_components=10, random_state=42)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=10.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.75,
                                            min_impurity_decrease=0.0032500000000000003,
                                            min_samples_leaf=10,
                                            min_samples_split=15,
                                            random_state=42, subsample=0.9))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.05)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=10.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.75,
                                            min_impurity_decrease=0.0032500000000000003,
                                            min_samples_leaf=10,
                                            min_samples_split=15,
                                            random_state=42, subsample=0.9))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.05)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=10.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.75,
                                            min_impurity_decrease=0.0032500000000000003,
                                            min_samples_leaf=10,
                                            min_samples_split=15,
                                            random_state=42, subsample=0.9))])","Pipeline(steps=[('nmf', NMF(l1_ratio=0, random_state=42)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=10.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.75,
                                            min_impurity_decrease=0.0032500000000000003,
                                            min_samples_leaf=10,
                                            min_samples_split=15,
                                            random_state=42, subsample=0.9))])","Pipeline(steps=[('nystroem',
                 Nystroem(degree=3, gamma=0.1, n_components=20,
                          random_state=42)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=10.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.75,
                                            min_impurity_decrease=0.0032500000000000003,
                                            min_samples_leaf=10,
                                            min_samples_split=15,
                                            random_state=42, subsample=0.9))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=10.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.75,
                                            min_impurity_decrease=0.0032500000000000003,
                                            min_samples_leaf=10,
                                            min_samples_split=15,
                                            random_state=42, subsample=0.9))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=1.0, method='cd', random_state=42,
                           ridge_alpha=0.5)),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=10.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.75,
                                            min_impurity_decrease=0.0032500000000000003,
                                            min_samples_leaf=10,
                                            min_samples_split=15,
                                            random_state=42, subsample=0.9))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, miss...dom_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=10.0,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            min_impurity_decrease=0.0022500000000000003,
                                            min_samples_leaf=10,
                                            min_samples_split=15,
                                            n_estimators=500, random_state=42,
                                            subsample=0.9))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=10.0,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            min_impurity_decrease=0.0022500000000000003,
                                            min_samples_leaf=10,
                                            min_samples_split=15,
                                            n_estimators=500, random_state=42,
                                            subsample=0.9))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=10.0,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            min_impurity_decrease=0.0022500000000000003,
                                            min_samples_leaf=10,
                                            min_samples_split=15,
                                            n_estimators=500, random_state=42,
                                            subsample=0.9))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=10.0,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            min_impurity_decrease=0.0022500000000000003,
                                            min_samples_leaf=10,
                                            min_samples_split=15,
                                            n_estimators=500, random_state=42,
                                            subsample=0.9))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=10.0,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            min_impurity_decrease=0.0022500000000000003,
                                            min_samples_leaf=10,
                                            min_samples_split=15,
                                            n_estimators=500, random_state=42,
                                            subsample=0.9))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=10.0,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            min_impurity_decrease=0.0022500000000000003,
                                            min_samples_leaf=10,
                                            min_samples_split=15,
                                            n_estimators=500, random_state=42,
                                            subsample=0.9))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, miss...e_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=10.0,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            min_impurity_decrease=0.0022500000000000003,
                                            min_samples_leaf=10,
                                            min_samples_split=15,
                                            n_estimators=500, random_state=42,
                                            subsample=0.9))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=10.0,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            min_impurity_decrease=0.0022500000000000003,
                                            min_samples_leaf=10,
                                            min_samples_split=15,
                                            n_estimators=500, random_state=42,
                                            subsample=0.9))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=10.0,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            min_impurity_decrease=0.0022500000000000003,
                                            min_samples_leaf=10,
                                            min_samples_split=15,
                                            n_estimators=500, random_state=42,
                                            subsample=0.9))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=10.0,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            min_impurity_decrease=0.0022500000000000003,
                                            min_samples_leaf=10,
                                            min_samples_split=15,
                                            n_estimators=500, random_state=42,
                                            subsample=0.9))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=10.0,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            min_impurity_decrease=0.0022500000000000003,
                                            min_samples_leaf=10,
                                            min_samples_split=15,
                                            n_estimators=500, random_state=42,
                                            subsample=0.9))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=10.0,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            min_impurity_decrease=0.0022500000000000003,
                                            min_samples_leaf=10,
                                            min_samples_split=15,
                                            n_estimators=500, random_state=42,
                                            subsample=0.9))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=10.0,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            min_impurity_decrease=0.0022500000000000003,
                                            min_samples_leaf=10,
                                            min_samples_split=15,
                                            n_estimators=500, random_state=42,
                                            subsample=0.9))])"
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('bernoullinb', BernoulliNB(alpha=0.1))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_leaf=20,
                                      min_samples_split=10, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=1,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=15, n_estimators=10,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=20, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=10.0,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   random_state=42))])","Pipeline(steps=[('polynomialfeatures',
                 PolynomialFeatures(interaction_only=True)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.4,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='False')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.4,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.4,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.4,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='full')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('fastica',
                 FastICA(algorithm='deflation', fun='cube', n_components=10,
                         random_state=42, whiten='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=0.25, degree=4, gamma=0.0001,
                           random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.01)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.01)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nmf', NMF(l1_ratio=0, n_components=10, random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(alpha=0.5, random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=20, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=20, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=20, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=20, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=20, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.5,
                                        min_impurity_decrease=0.0015,
                                        min_samples_leaf=5, min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.5,
                                        min_impurity_decrease=0.0015,
                                        min_samples_leaf=5, min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('polynomialfeatures',
                 PolynomialFeatures(interaction_only=True)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.5,
                                        min_impurity_decrease=0.0015,
                                        min_samples_leaf=5, min_samples_split=5,
                                        random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.0005,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(eta0=50.0, l1_ratio=1.0,
                               learning_rate='constant', loss='squared_hinge',
                               max_iter=5, penalty='none', power_t=100.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('svc',
                 SVC(coef0=10.0, gamma=10.0, kernel='sigmoid', probability=True,
                     random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(alpha=0.001, hidden_layer_sizes=(10, 5),
                               random_state=42, solver='lbfgs'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=50.0, random_state=42))])","Pipeline(steps=[('adaboostclassifier', AdaBoostClassifier(random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.2))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='goss',
                                colsample_bytree=0.8222222222222222,
                                learning_rate=0.01965914377852885,
                                min_child_samples=400, num_leaves=73,
                                random_state=42, reg_alpha=0.7959183673469387,
                                subsample=0.9595959595959596,
                                subsample_for_bin=100000))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5, random_state=42))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.2))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures(degree=3)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='full')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('fastica',
                 FastICA(n_components=10, random_state=42, whiten='False')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=0.25, degree=5, gamma=0.0001, n_components=10,
                           random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest(k=20)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.1)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=2.0, method='cd', random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('bernoullinb', BernoulliNB(alpha=0.1))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=3, max_features=0.75,
                                        min_impurity_decrease=0.0022500000000000003,
                                        min_samples_split=20,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_split=15, n_estimators=10,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features='log2',
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=10,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.6))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=1,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.1, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer(norm='l1')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='full')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('fastica',
                 FastICA(n_components=10, random_state=42, whiten='False')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=-1.0, degree=5, gamma=0.01, kernel='poly',
                           n_components=5, random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.0)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=2.0, method='cd', random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('bernoullinb', BernoulliNB(alpha=0.1))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=0.1))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.0005,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=100.0, l1_ratio=0.75,
                               learning_rate='invscaling', loss='log',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.01, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('bernoullinb', BernoulliNB(alpha=0.1, binarize=0.9))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=0.1))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, loss='hinge',
                           random_state=42, tol=0.001))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=None,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures(degree=3)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=None,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer(norm='max')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=None,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_split=15, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='True')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_split=15, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_split=15, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_split=15, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_split=15, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features='log2', min_samples_split=5,
                                      random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='full')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features='log2', min_samples_split=5,
                                      random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=-0.25, degree=2, gamma=0.0001, kernel='rbf',
                           n_components=10, random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features='log2', min_samples_split=5,
                                      random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest(k=20)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features='log2', min_samples_split=5,
                                      random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.05)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features='log2', min_samples_split=5,
                                      random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.05)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features='log2', min_samples_split=5,
                                      random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features='log2', min_samples_split=5,
                                      random_state=42))])","Pipeline(steps=[('nystroem',
                 Nystroem(degree=5, gamma=1.0, kernel='cosine', n_components=10,
                          random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features='log2', min_samples_split=5,
                                      random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features='log2', min_samples_split=5,
                                      random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, p=1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(colsample_bytree=0.6444444444444444,
                                learning_rate=0.06984175589943697,
                                min_child_samples=310, num_leaves=42,
                                random_state=42, reg_alpha=0.16326530612244897,
                                subsample=0.595959595959596,
                                subsample_for_bin=40000))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=None,
                                      min_samples_leaf=5, min_samples_split=20,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=15.0, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='True')),
                ('logisticregression',
                 LogisticRegression(C=15.0, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('logisticregression',
                 LogisticRegression(C=15.0, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('logisticregression',
                 LogisticRegression(C=15.0, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('pca',
                 PCA(n_components=5, random_state=42, svd_solver='full')),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=-0.25, gamma=2.0, kernel='poly',
                           n_components=3, random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.05)),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.05)),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('selectpercentile',
                 SelectPercentile(percentile=90,
                                  score_func=<function f_regression at 0x7f5193b31310>)),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('nmf',
                 NMF(l1_ratio=1, n_components=5, random_state=42, tol=0.01)),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=2.0, n_components=10, random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        max_features=0.75,
                                        min_impurity_decrease=0.004,
                                        min_samples_leaf=15,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_split=15, n_estimators=10,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=None,
                                        min_impurity_decrease=0.002,
                                        min_samples_leaf=10, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier', KNeighborsClassifier(n_neighbors=10))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, loss='hinge', random_state=42, tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(eta0=50.0, l1_ratio=1.0,
                               learning_rate='constant', loss='squared_hinge',
                               max_iter=5, penalty='none', power_t=100.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('svc',
                 SVC(coef0=10.0, gamma=10.0, kernel='sigmoid', probability=True,
                     random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(alpha=0.001, hidden_layer_sizes=(10, 5),
                               random_state=42, solver='sgd'))])","Pipeline(steps=[('adaboostclassifier', AdaBoostClassifier(random_state=42))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features=0.75,
                                        min_impurity_decrease=0.0022500000000000003,
                                        min_samples_leaf=10,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.00075,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.00075,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.00075,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=None, min_samples_split=15,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='False')),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=None, min_samples_split=15,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=None, min_samples_split=15,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=None, min_samples_split=15,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=None, min_samples_split=15,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=None, min_samples_split=15,
                                        n_estimators=1000, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=8, max_features='sqrt',
                                        min_impurity_decrease=0.00175,
                                        min_samples_leaf=15,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.00475,
                                        min_samples_leaf=5, min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier', KNeighborsClassifier(n_neighbors=10))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=1e-05, eta0=0.01, l1_ratio=1.0,
                               learning_rate='constant', loss='log', max_iter=5,
                               penalty='none', random_state=42, tol=None))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.4,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.3, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5, random_state=42))])","Pipeline(steps=[('linearsvc', LinearSVC(C=0.01, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=1e-06, eta0=0.01, l1_ratio=0.5,
                               learning_rate='constant', max_iter=5,
                               power_t=10.0, random_state=42, tol=None))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=-0.25, gamma=0.0001, n_components=10,
                           random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest(k=20)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('nmf',
                 NMF(l1_ratio=1, n_components=5, random_state=42, tol=1e-05)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('nystroem',
                 Nystroem(degree=5, gamma=1.0, kernel='cosine', n_components=20,
                          random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skewedchi2sampler',
                 SkewedChi2Sampler(n_components=200, random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=2.0, method='cd', random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, miss...onstraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, objective='multi:softprob', predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=None, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        max_features=0.75,
                                        min_impurity_decrease=0.004,
                                        min_samples_leaf=15,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.0005,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('svc',
                 SVC(coef0=10.0, gamma=10.0, kernel='sigmoid', probability=True,
                     random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(alpha=0.001, hidden_layer_sizes=(10, 5),
                               random_state=42, solver='lbfgs'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=50.0, random_state=42))])","Pipeline(steps=[('adaboostclassifier', AdaBoostClassifier(random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.4))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='goss',
                                colsample_bytree=0.8222222222222222,
                                learning_rate=0.01965914377852885,
                                min_child_samples=400, num_leaves=73,
                                random_state=42, reg_alpha=0.7959183673469387,
                                subsample=0.9595959595959596,
                                subsample_for_bin=100000))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=15, n_estimators=10,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.4))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='full')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('fastica',
                 FastICA(n_components=10, random_state=42, whiten='False')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest(k=20)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.1)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('selectpercentile',
                 SelectPercentile(percentile=90,
                                  score_func=<function f_regression at 0x7f5193b31310>)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=3, max_features=0.5,
                                        min_impurity_decrease=0.004,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, weights='distance'))])","Pipeline(steps=[('linearsvc', LinearSVC(C=20.0, random_state=42, tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.1, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.4,
                                   random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42, shrinking=False))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=5, max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, p=1,
                                      weights='distance'))])","Pipeline(steps=[('svc',
                 SVC(C=0.01, coef0=10.0, degree=2, gamma='auto', kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=5,
                                        min_samples_split=20, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('polynomialfeatures',
                 PolynomialFeatures(degree=3, interaction_only=True)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=5,
                                        min_samples_split=20, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=5,
                                        min_samples_split=20, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00425,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='False')),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00425,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00425,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00425,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00425,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00425,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00425,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.1,
                                        min_impurity_decrease=0.00475,
                                        min_samples_leaf=20,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='randomized')),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.1,
                                        min_impurity_decrease=0.00475,
                                        min_samples_leaf=20,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=-0.75, degree=5, gamma=1.0, kernel='rbf',
                           n_components=10, random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.1,
                                        min_impurity_decrease=0.00475,
                                        min_samples_leaf=20,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.1,
                                        min_impurity_decrease=0.00475,
                                        min_samples_leaf=20,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.0)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.1,
                                        min_impurity_decrease=0.00475,
                                        min_samples_leaf=20,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('rbfsampler',
                 RBFSampler(gamma=0.01, n_components=200, random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.1,
                                        min_impurity_decrease=0.00475,
                                        min_samples_leaf=20,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.1,
                                        min_impurity_decrease=0.00475,
                                        min_samples_leaf=20,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=1.0, n_components=10, random_state=42,
                           ridge_alpha=1.0)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.1,
                                        min_impurity_decrease=0.00475,
                                        min_samples_leaf=20,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('isomap', Isomap(n_components=5, n_neighbors=2)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.1,
                                        min_impurity_decrease=0.00475,
                                        min_samples_leaf=20,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=3, max_features=0.5,
                                        min_impurity_decrease=0.004,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, weights='distance'))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.2))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features=0.75,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='full')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=0.75, degree=2, gamma=2.0, kernel='rbf',
                           n_components=10, random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('rbfsampler',
                 RBFSampler(gamma=0.001, n_components=200, random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nystroem',
                 Nystroem(degree=5, gamma=1.0, kernel='cosine', n_components=20,
                          random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skewedchi2sampler',
                 SkewedChi2Sampler(n_components=200, random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=2.0, method='cd', random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=None,
                                        min_samples_split=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, weights='distance'))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=0.5, l1_ratio=0.0,
                               loss='squared_hinge', max_iter=5, power_t=100.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('perceptron',
                 Perceptron(penalty='elasticnet', random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.2))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42, shrinking=False))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('svc',
                 SVC(C=0.01, coef0=100.0, gamma=0.5, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('svc',
                 SVC(C=0.1, degree=2, gamma=100.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse='False')),
                ('svc',
                 SVC(C=0.1, degree=2, gamma=100.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures(degree=3)),
                ('svc',
                 SVC(C=0.1, degree=2, gamma=100.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('svc',
                 SVC(C=50.0, degree=2, gamma=0.01, probability=True,
                     random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='False')),
                ('svc',
                 SVC(C=50.0, degree=2, gamma=0.01, probability=True,
                     random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('svc',
                 SVC(C=50.0, degree=2, gamma=0.01, probability=True,
                     random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('svc',
                 SVC(C=50.0, degree=2, gamma=0.01, probability=True,
                     random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('svc',
                 SVC(coef0=100.0, gamma=0.5, kernel='poly', probability=True,
                     random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='full')),
                ('svc',
                 SVC(coef0=100.0, gamma=0.5, kernel='poly', probability=True,
                     random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=0.5, degree=2, gamma=0.01, kernel='rbf',
                           random_state=42)),
                ('svc',
                 SVC(coef0=100.0, gamma=0.5, kernel='poly', probability=True,
                     random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.1)),
                ('svc',
                 SVC(coef0=100.0, gamma=0.5, kernel='poly', probability=True,
                     random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.01)),
                ('svc',
                 SVC(coef0=100.0, gamma=0.5, kernel='poly', probability=True,
                     random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('svc',
                 SVC(coef0=100.0, gamma=0.5, kernel='poly', probability=True,
                     random_state=42))])","Pipeline(steps=[('nystroem',
                 Nystroem(degree=5, gamma=0.1, kernel='sigmoid',
                          n_components=20, random_state=42)),
                ('svc',
                 SVC(coef0=100.0, gamma=0.5, kernel='poly', probability=True,
                     random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('svc',
                 SVC(coef0=100.0, gamma=0.5, kernel='poly', probability=True,
                     random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=0.5, method='cd', random_state=42,
                           ridge_alpha=1.0)),
                ('svc',
                 SVC(coef0=100.0, gamma=0.5, kernel='poly', probability=True,
                     random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('bernoullinb',
                 BernoulliNB(alpha=100.0, binarize=0.5, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=0.1))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=15.0, fit_intercept=False, loss='hinge',
                           random_state=42))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.2))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('bernoullinb',
                 BernoulliNB(alpha=100.0, binarize=0.25, fit_prior=False))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer(norm='l1')),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='True')),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('pca', PCA(n_components=5, random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=-1.0, degree=4, gamma=0.001, kernel='cosine',
                           n_components=5, random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.05)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.05)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('nmf', NMF(l1_ratio=0, n_components=10, random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=1.0, random_state=42, ridge_alpha=1.0)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features='log2',
                                        min_impurity_decrease=0.00075,
                                        min_samples_leaf=15,
                                        min_samples_split=20, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features='log2',
                                        min_impurity_decrease=0.00075,
                                        min_samples_leaf=15,
                                        min_samples_split=20, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features='log2',
                                        min_impurity_decrease=0.00075,
                                        min_samples_leaf=15,
                                        min_samples_split=20, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.5,
                                        min_impurity_decrease=0.00075,
                                        min_samples_leaf=20, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='True')),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.5,
                                        min_impurity_decrease=0.00075,
                                        min_samples_leaf=20, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.5,
                                        min_impurity_decrease=0.00075,
                                        min_samples_leaf=20, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.5,
                                        min_impurity_decrease=0.00075,
                                        min_samples_leaf=20, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.5,
                                        min_impurity_decrease=0.00075,
                                        min_samples_leaf=20, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.5,
                                        min_impurity_decrease=0.00075,
                                        min_samples_leaf=20, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.5,
                                        min_impurity_decrease=0.00075,
                                        min_samples_leaf=20, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.00175,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='full')),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.00175,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=1.0, degree=5, gamma=0.01, kernel='cosine',
                           n_components=10, random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.00175,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.00175,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.05)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.00175,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.00175,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.00175,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('nmf',
                 NMF(l1_ratio=0.7, n_components=5, random_state=42, tol=1e-05)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.00175,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('skewedchi2sampler',
                 SkewedChi2Sampler(n_components=200, random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.00175,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=2.0, n_components=10, random_state=42,
                           ridge_alpha=0.5)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.00175,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, miss...tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.5,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.5,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.5,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.5,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, miss...arallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.5,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.5,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.5,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.5,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.5,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.5,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.5,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.5,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=50,
                                        random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('bernoullinb', BernoulliNB(alpha=10.0, binarize=0.9))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=0.01))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.5,
                                      min_samples_leaf=10, min_samples_split=15,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.0005,
                                        min_samples_leaf=15,
                                        min_samples_split=20,
                                        random_state=42))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.2))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.4,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('bernoullinb',
                 BernoulliNB(alpha=10.0, binarize=1.0, fit_prior=False))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features=None, min_samples_leaf=10,
                                        n_estimators=500, random_state=42))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.1, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_leaf=5, n_estimators=10,
                                      random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_leaf=5, n_estimators=10,
                                      random_state=42))])","Pipeline(steps=[('normalizer', Normalizer(norm='max')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_leaf=5, n_estimators=10,
                                      random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features='sqrt', min_samples_leaf=5,
                                      min_samples_split=15, n_estimators=10,
                                      random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='True')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features='sqrt', min_samples_leaf=5,
                                      min_samples_split=15, n_estimators=10,
                                      random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features='sqrt', min_samples_leaf=5,
                                      min_samples_split=15, n_estimators=10,
                                      random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features='sqrt', min_samples_leaf=5,
                                      min_samples_split=15, n_estimators=10,
                                      random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features='sqrt', min_samples_leaf=5,
                                      min_samples_split=15, n_estimators=10,
                                      random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features='sqrt', min_samples_leaf=5,
                                      min_samples_split=15, n_estimators=10,
                                      random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_leaf=10,
                                      min_samples_split=20, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_leaf=10,
                                      min_samples_split=20, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_leaf=10,
                                      min_samples_split=20, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.0)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_leaf=10,
                                      min_samples_split=20, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('selectpercentile',
                 SelectPercentile(percentile=50,
                                  score_func=<function mutual_info_regression at 0x7f5193b3caf0>)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_leaf=10,
                                      min_samples_split=20, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_leaf=10,
                                      min_samples_split=20, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('nmf',
                 NMF(l1_ratio=0.5, n_components=10, random_state=42,
                     tol=1e-05)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_leaf=10,
                                      min_samples_split=20, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_leaf=10,
                                      min_samples_split=20, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(alpha=0.5, random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_leaf=10,
                                      min_samples_split=20, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, miss...s=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_leaf=5,
                                      min_samples_split=10, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_leaf=5,
                                      min_samples_split=10, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_leaf=5,
                                      min_samples_split=10, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_leaf=5,
                                      min_samples_split=10, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_leaf=5,
                                      min_samples_split=10, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_leaf=5,
                                      min_samples_split=10, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_leaf=5,
                                      min_samples_split=10, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_leaf=5,
                                      min_samples_split=10, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_leaf=5,
                                      min_samples_split=10, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_leaf=5,
                                      min_samples_split=10, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_leaf=5,
                                      min_samples_split=10, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_leaf=5,
                                      min_samples_split=10, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('polynomialfeatures',
                 PolynomialFeatures(interaction_only=True)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.001, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='full')),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.001, random_state=42))])","Pipeline(steps=[('fastica',
                 FastICA(algorithm='deflation', fun='cube', n_components=10,
                         random_state=42, whiten='False')),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.001, random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=-0.25, degree=2, gamma=1.0, random_state=42)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.001, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.001, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.1)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.001, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.01)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.001, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.001, random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=0.5, random_state=42, ridge_alpha=0.5)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.001, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('bernoullinb',
                 BernoulliNB(alpha=0.1, binarize=0.25, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=0.001, fit_prior=False))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, loss='hinge', random_state=42, tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.2))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.2))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.01, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.01, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.01, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='False')),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.1, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.1, random_state=42))])","Pipeline(steps=[('fastica',
                 FastICA(fun='cube', n_components=10, random_state=42,
                         whiten='True')),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.1, random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=-1.0, degree=4, gamma=0.01, random_state=42)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.1, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.1, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.01)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.1, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.05)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.1, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.1, random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=2.0, n_components=10, random_state=42,
                           ridge_alpha=0.5)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.1, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('normalizer', Normalizer(norm='l1')),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='True')),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='full')),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=0.0, gamma=0.001, random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.05)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.05)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('nmf', NMF(l1_ratio=0.2, random_state=42, tol=0.01)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('skewedchi2sampler',
                 SkewedChi2Sampler(n_components=200, random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=1.0, random_state=42, ridge_alpha=0.5)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=25.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('logisticregression',
                 LogisticRegression(C=25.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('logisticregression',
                 LogisticRegression(C=25.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('polynomialfeatures',
                 PolynomialFeatures(interaction_only=True)),
                ('logisticregression',
                 LogisticRegression(C=25.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=0.1, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('logisticregression',
                 LogisticRegression(C=0.1, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('logisticregression',
                 LogisticRegression(C=0.1, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.1, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False,
                                    random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('bernoullinb', BernoulliNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('kneighborsclassifier', KNeighborsClassifier(n_neighbors=10))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=100.0, l1_ratio=0.75,
                               learning_rate='invscaling', loss='log',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier', AdaBoostClassifier(random_state=42))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=15, n_estimators=10,
                                      random_state=42))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=1e-06, eta0=0.01, l1_ratio=1.0,
                               learning_rate='constant', loss='squared_hinge',
                               max_iter=5, penalty='l1', power_t=50.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.1, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures(degree=3)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('fastica',
                 FastICA(algorithm='deflation', n_components=10,
                         random_state=42, whiten='False')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=0.25, degree=5, gamma=0.0001, n_components=10,
                           random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.1)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nmf',
                 NMF(l1_ratio=0, n_components=10, random_state=42, tol=0.01)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(alpha=0.5, random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=1e-05, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=1e-05, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=1e-05, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=1e-05, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='True')),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=1e-05, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=1e-05, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=1e-05, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, random_state=42))])","Pipeline(steps=[('pca', PCA(n_components=5, random_state=42)),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=0.75, gamma=0.0001, n_components=5,
                           random_state=42)),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.01)),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.05)),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, random_state=42))])","Pipeline(steps=[('selectpercentile',
                 SelectPercentile(percentile=70,
                                  score_func=<function f_regression at 0x7f5193b31310>)),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, random_state=42))])","Pipeline(steps=[('nmf', NMF(l1_ratio=0.7, random_state=42, tol=0.01)),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(alpha=2.0, random_state=42)),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures(degree=3)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('fastica',
                 FastICA(algorithm='deflation', fun='exp', n_components=10,
                         random_state=42, whiten='False')),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest(k=5)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.01)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.01)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('nmf', NMF(l1_ratio=0.7, n_components=10, random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('nystroem',
                 Nystroem(degree=2, gamma=0.0001, kernel='poly',
                          n_components=20, random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=0.5, method='cd', n_components=10,
                           random_state=42, ridge_alpha=1.0)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('bernoullinb', BernoulliNB(alpha=10.0, binarize=0.9))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        max_features=0.75,
                                        min_impurity_decrease=0.004,
                                        min_samples_leaf=15,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.5,
                                      min_samples_leaf=10, min_samples_split=15,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.0005,
                                        min_samples_leaf=15,
                                        min_samples_split=20,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=100, p=1,
                                      weights='distance'))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=None,
                                      min_samples_leaf=5, min_samples_split=20,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=13, max_features=0.5,
                                        min_impurity_decrease=0.004,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=13, max_features=0.5,
                                        min_impurity_decrease=0.004,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('polynomialfeatures',
                 PolynomialFeatures(interaction_only=True)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=13, max_features=0.5,
                                        min_impurity_decrease=0.004,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=10, max_features=0.5,
                                        min_samples_leaf=15,
                                        min_samples_split=20,
                                        random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='False')),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=10, max_features=0.5,
                                        min_samples_leaf=15,
                                        min_samples_split=20,
                                        random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=10, max_features=0.5,
                                        min_samples_leaf=15,
                                        min_samples_split=20,
                                        random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=10, max_features=0.5,
                                        min_samples_leaf=15,
                                        min_samples_split=20,
                                        random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=10, max_features=0.5,
                                        min_samples_leaf=15,
                                        min_samples_split=20,
                                        random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=10, max_features=0.5,
                                        min_samples_leaf=15,
                                        min_samples_split=20,
                                        random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=10, max_features=0.5,
                                        min_samples_leaf=15,
                                        min_samples_split=20,
                                        random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='full')),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('fastica',
                 FastICA(algorithm='deflation', fun='cube', random_state=42,
                         whiten='True')),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=-0.25, degree=2, gamma=0.001, kernel='cosine',
                           random_state=42)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.05)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.05)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('selectpercentile',
                 SelectPercentile(percentile=70,
                                  score_func=<function f_regression at 0x7f5193b31310>)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=2.0, method='cd', random_state=42,
                           ridge_alpha=1.0)),
                ('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='sqrt',
                                        min_impurity_decrease=0.002,
                                        min_samples_leaf=5, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(eta0=50.0, l1_ratio=1.0,
                               learning_rate='constant', loss='squared_hinge',
                               max_iter=5, penalty='none', power_t=100.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42, shrinking=False))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.1, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse='False')),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='False')),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.01)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.01)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('selectpercentile',
                 SelectPercentile(percentile=50,
                                  score_func=<function f_regression at 0x7f5193b31310>)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('nmf', NMF(l1_ratio=0, n_components=10, random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('nystroem',
                 Nystroem(degree=3, gamma=1.0, kernel='cosine', n_components=10,
                          random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(alpha=1.0, random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='sqrt',
                                        min_impurity_decrease=0.00025,
                                        min_samples_split=10, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='sqrt',
                                        min_impurity_decrease=0.00025,
                                        min_samples_split=10, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse='False')),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='sqrt',
                                        min_impurity_decrease=0.00025,
                                        min_samples_split=10, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.004,
                                        min_samples_leaf=10,
                                        min_samples_split=20, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='False')),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.004,
                                        min_samples_leaf=10,
                                        min_samples_split=20, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.004,
                                        min_samples_leaf=10,
                                        min_samples_split=20, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.004,
                                        min_samples_leaf=10,
                                        min_samples_split=20, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.004,
                                        min_samples_leaf=10,
                                        min_samples_split=20, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.004,
                                        min_samples_leaf=10,
                                        min_samples_split=20, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.004,
                                        min_samples_leaf=10,
                                        min_samples_split=20, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.5,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=20, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='full')),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.5,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=20, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=0.0, degree=2, gamma=2.0, n_components=3,
                           random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.5,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=20, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.5,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=20, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.05)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.5,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=20, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.01)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.5,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=20, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('selectpercentile',
                 SelectPercentile(percentile=1,
                                  score_func=<function mutual_info_regression at 0x7f5193b3caf0>)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.5,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=20, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.5,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=20, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('nmf', NMF(l1_ratio=0.5, random_state=42, tol=0.01)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.5,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=20, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=2.0, method='cd', random_state=42,
                           ridge_alpha=0.5)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.5,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=20, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, miss...00, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0022500000000000003,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0022500000000000003,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0022500000000000003,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0022500000000000003,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0022500000000000003,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0022500000000000003,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0022500000000000003,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0022500000000000003,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0022500000000000003,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0022500000000000003,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0022500000000000003,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_impurity_decrease=0.0022500000000000003,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('bernoullinb',
                 BernoulliNB(alpha=0.001, binarize=0.9, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=100.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=3, max_features=0.75,
                                        min_impurity_decrease=0.0022500000000000003,
                                        min_samples_split=20,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=15.0, fit_intercept=False, loss='hinge',
                           random_state=42))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features=0.1,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('bernoullinb', BernoulliNB(alpha=0.01, binarize=0.5))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('bernoullinb', BernoulliNB(alpha=0.01, binarize=0.5))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures(degree=3)),
                ('bernoullinb', BernoulliNB(alpha=0.01, binarize=0.5))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('bernoullinb', BernoulliNB(alpha=0.001, fit_prior=False))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('bernoullinb', BernoulliNB(alpha=0.001, fit_prior=False))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('bernoullinb', BernoulliNB(alpha=0.001, fit_prior=False))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('bernoullinb', BernoulliNB(alpha=0.001, fit_prior=False))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('isomap', Isomap()),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('bernoullinb', BernoulliNB(binarize=0.5))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='full')),
                ('bernoullinb', BernoulliNB(binarize=0.5))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=0.25, degree=5, gamma=0.0001, n_components=10,
                           random_state=42)),
                ('bernoullinb', BernoulliNB(binarize=0.5))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('bernoullinb', BernoulliNB(binarize=0.5))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.05)),
                ('bernoullinb', BernoulliNB(binarize=0.5))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.05)),
                ('bernoullinb', BernoulliNB(binarize=0.5))])","Pipeline(steps=[('selectpercentile',
                 SelectPercentile(percentile=70,
                                  score_func=<function mutual_info_regression at 0x7f5193b3caf0>)),
                ('bernoullinb', BernoulliNB(binarize=0.5))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('bernoullinb', BernoulliNB(binarize=0.5))])","Pipeline(steps=[('nmf',
                 NMF(l1_ratio=1, n_components=5, random_state=42, tol=1e-05)),
                ('bernoullinb', BernoulliNB(binarize=0.5))])","Pipeline(steps=[('sparsepca', SparsePCA(alpha=0.5, random_state=42)),
                ('bernoullinb', BernoulliNB(binarize=0.5))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=0.1, fit_prior=False))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('bernoullinb',
                 BernoulliNB(alpha=0.001, binarize=0.5, fit_prior=False))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('bernoullinb',
                 BernoulliNB(alpha=0.001, binarize=0.5, fit_prior=False))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('bernoullinb',
                 BernoulliNB(alpha=0.001, binarize=0.5, fit_prior=False))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('bernoullinb',
                 BernoulliNB(alpha=0.001, binarize=0.5, fit_prior=False))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('bernoullinb',
                 BernoulliNB(alpha=0.001, binarize=0.5, fit_prior=False))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('bernoullinb',
                 BernoulliNB(alpha=0.001, binarize=0.5, fit_prior=False))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('bernoullinb',
                 BernoulliNB(alpha=0.001, binarize=0.5, fit_prior=False))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('bernoullinb',
                 BernoulliNB(alpha=0.001, binarize=0.5, fit_prior=False))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('bernoullinb',
                 BernoulliNB(alpha=0.001, binarize=0.5, fit_prior=False))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('bernoullinb',
                 BernoulliNB(alpha=0.001, binarize=0.5, fit_prior=False))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('bernoullinb',
                 BernoulliNB(alpha=0.001, binarize=0.5, fit_prior=False))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('bernoullinb',
                 BernoulliNB(alpha=0.001, binarize=0.5, fit_prior=False))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures(degree=3)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='False')),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('pca',
                 PCA(n_components=5, random_state=42, svd_solver='randomized')),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=-1.0, degree=2, gamma=0.0001, kernel='cosine',
                           n_components=10, random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest(k=5)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.0)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('selectpercentile',
                 SelectPercentile(percentile=20,
                                  score_func=<function mutual_info_regression at 0x7f5193b3caf0>)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('nmf',
                 NMF(l1_ratio=1, n_components=10, random_state=42, tol=0.1)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=1.0, random_state=42, ridge_alpha=0.5)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_leaf=20, min_samples_split=20,
                                      random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_leaf=20, min_samples_split=20,
                                      random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_leaf=20, min_samples_split=20,
                                      random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='True')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=1000, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=15,
                                        max_features=0.25,
                                        min_impurity_decrease=0.00025,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.0005,
                                        min_samples_leaf=15,
                                        min_samples_split=20,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=0.5, l1_ratio=0.0,
                               loss='squared_hinge', max_iter=5, power_t=100.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('svc',
                 SVC(coef0=10.0, gamma=10.0, kernel='sigmoid', probability=True,
                     random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(alpha=0.001, hidden_layer_sizes=(10, 5),
                               random_state=42, solver='sgd'))])","Pipeline(steps=[('adaboostclassifier', AdaBoostClassifier(random_state=42))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.8666666666666667,
                                learning_rate=0.4082083802460733,
                                min_child_samples=445, num_leaves=92,
                                random_state=42, reg_alpha=0.7755102040816326,
                                subsample=0.6111111111111112,
                                subsample_for_bin=260000))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5, random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(colsample_bytree=0.9111111111111111,
                                learning_rate=0.11228489977698869,
                                min_child_samples=100, num_leaves=125,
                                random_state=42, reg_alpha=0.18367346938775508,
                                subsample=0.9646464646464648))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.0005,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l1', random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=50.0, random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42, shrinking=False))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('svc',
                 SVC(degree=2, gamma=0.01, probability=True, random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('nusvc', NuSVC(nu=0.7, random_state=42, shrinking=False))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('nusvc', NuSVC(nu=0.7, random_state=42, shrinking=False))])","Pipeline(steps=[('normalizer', Normalizer(norm='max')),
                ('nusvc', NuSVC(nu=0.7, random_state=42, shrinking=False))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('nusvc',
                 NuSVC(kernel='linear', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='False')),
                ('nusvc',
                 NuSVC(kernel='linear', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('nusvc',
                 NuSVC(kernel='linear', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('nusvc',
                 NuSVC(kernel='linear', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('nusvc',
                 NuSVC(kernel='poly', random_state=42, shrinking=False))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='full')),
                ('nusvc',
                 NuSVC(kernel='poly', random_state=42, shrinking=False))])","Pipeline(steps=[('fastica',
                 FastICA(algorithm='deflation', fun='cube', random_state=42,
                         whiten='False')),
                ('nusvc',
                 NuSVC(kernel='poly', random_state=42, shrinking=False))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=0.25, degree=5, gamma=0.001, kernel='rbf',
                           n_components=5, random_state=42)),
                ('nusvc',
                 NuSVC(kernel='poly', random_state=42, shrinking=False))])","Pipeline(steps=[('selectkbest', SelectKBest(k=20)),
                ('nusvc',
                 NuSVC(kernel='poly', random_state=42, shrinking=False))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.1)),
                ('nusvc',
                 NuSVC(kernel='poly', random_state=42, shrinking=False))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.01)),
                ('nusvc',
                 NuSVC(kernel='poly', random_state=42, shrinking=False))])","Pipeline(steps=[('nystroem',
                 Nystroem(degree=2, gamma=0.0001, kernel='cosine',
                          n_components=20, random_state=42)),
                ('nusvc',
                 NuSVC(kernel='poly', random_state=42, shrinking=False))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=0.5, n_components=5, random_state=42,
                           ridge_alpha=1.0)),
                ('nusvc',
                 NuSVC(kernel='poly', random_state=42, shrinking=False))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures(degree=3)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='False')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=20, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.0005,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=10,
                                            max_features=0.75,
                                            min_impurity_decrease=0.0005,
                                            min_samples_leaf=20,
                                            min_samples_split=10,
                                            n_estimators=10, random_state=42,
                                            subsample=0.5))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.2))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.3, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('svc',
                 SVC(C=0.01, coef0=100.0, gamma=0.5, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures(degree=3)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='full')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=0.25, degree=4, gamma=0.0001,
                           random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.1)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('nmf',
                 NMF(l1_ratio=1, n_components=5, random_state=42, tol=1e-05)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skewedchi2sampler',
                 SkewedChi2Sampler(n_components=200, random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=2.0, method='cd', random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.0005,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=1e-06, eta0=0.01, fit_intercept=False,
                               l1_ratio=0.25, learning_rate='invscaling',
                               max_iter=5, power_t=0.0, random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l1', random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42, shrinking=False))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('svc',
                 SVC(C=0.01, coef0=100.0, gamma=0.5, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, fit_intercept=False,
                                             random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures(degree=3)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=0.01))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.00475,
                                        min_samples_leaf=5, min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=70, weights='distance'))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=1e-05, eta0=0.01, l1_ratio=1.0,
                               learning_rate='constant', loss='log', max_iter=5,
                               penalty='none', random_state=42, tol=None))])","Pipeline(steps=[('perceptron',
                 Perceptron(penalty='elasticnet', random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.4))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=13, max_features='log2',
                                        min_impurity_decrease=0.00175,
                                        min_samples_leaf=10,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.1,
                                    random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.4))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=50, p=1))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures(degree=3)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=50, p=1))])","Pipeline(steps=[('normalizer', Normalizer(norm='max')),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=50, p=1))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=100))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=100))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=100))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=100))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('isomap', Isomap()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, loss='hinge', random_state=42, tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=1e-06, eta0=1.0, fit_intercept=False,
                               l1_ratio=0.5, learning_rate='constant',
                               loss='modified_huber', max_iter=5, power_t=0.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=50.0, random_state=42))])","Pipeline(steps=[('adaboostclassifier', AdaBoostClassifier(random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.3, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB())])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='sqrt',
                                        min_impurity_decrease=0.002,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('linearsvc', LinearSVC(C=0.01, random_state=42))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, fit_intercept=False,
                               l1_ratio=0.1, loss='perceptron', max_iter=5,
                               penalty='none', power_t=1.0, random_state=42,
                               tol=None))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.3, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.05)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.05)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('selectpercentile',
                 SelectPercentile(percentile=50,
                                  score_func=<function f_regression at 0x7f5193b31310>)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nmf',
                 NMF(l1_ratio=0, n_components=10, random_state=42, tol=0.01)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nystroem',
                 Nystroem(degree=5, gamma=1.0, kernel='cosine', n_components=20,
                          random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=2.0, n_components=10, random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('isomap',
                 Isomap(eigen_solver='arpack', n_components=5, n_neighbors=2)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.75,
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.75,
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.75,
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.5,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='False')),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.5,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.5,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.5,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.5,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.5,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.5,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00025,
                                        random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest(k=5)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00025,
                                        random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.05)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00025,
                                        random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00025,
                                        random_state=42))])","Pipeline(steps=[('selectpercentile',
                 SelectPercentile(percentile=20,
                                  score_func=<function f_regression at 0x7f5193b31310>)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00025,
                                        random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00025,
                                        random_state=42))])","Pipeline(steps=[('nmf',
                 NMF(l1_ratio=0.2, n_components=5, random_state=42, tol=0.01)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00025,
                                        random_state=42))])","Pipeline(steps=[('skewedchi2sampler',
                 SkewedChi2Sampler(n_components=50, random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00025,
                                        random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=1.0, n_components=5, random_state=42,
                           ridge_alpha=0.5)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00025,
                                        random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, miss...'()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.001,
                                        min_samples_split=5, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.001,
                                        min_samples_split=5, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.001,
                                        min_samples_split=5, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.001,
                                        min_samples_split=5, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.001,
                                        min_samples_split=5, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.001,
                                        min_samples_split=5, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.001,
                                        min_samples_split=5, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, miss...=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.001,
                                        min_samples_split=5, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.001,
                                        min_samples_split=5, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.001,
                                        min_samples_split=5, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.001,
                                        min_samples_split=5, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.001,
                                        min_samples_split=5, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.001,
                                        min_samples_split=5, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='False')),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('isomap', Isomap()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('pca', PCA(n_components=5, random_state=42)),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=0.25, gamma=1.0, kernel='rbf',
                           random_state=42)),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('selectkbest', SelectKBest(k=5)),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.01)),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.01)),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=1.0, method='cd', n_components=5,
                           random_state=42)),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('bernoullinb',
                 BernoulliNB(alpha=100.0, binarize=0.5, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=100.0))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.1, min_samples_leaf=15,
                                      min_samples_split=15, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('linearsvc', LinearSVC(C=20.0, random_state=42, tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('svc',
                 SVC(C=10.0, coef0=1.0, gamma=0.01, kernel='sigmoid',
                     probability=True, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.4))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='goss', colsample_bytree=0.6,
                                learning_rate=0.005432578873262691,
                                min_child_samples=470, num_leaves=110,
                                random_state=42, reg_alpha=0.42857142857142855,
                                subsample=0.8838383838383839,
                                subsample_for_bin=280000))])","Pipeline(steps=[('bernoullinb', BernoulliNB(alpha=100.0, binarize=0.75))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.1, min_samples_leaf=20,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('linearsvc', LinearSVC(random_state=42, tol=0.1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.4))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0005,
                                        min_samples_leaf=15,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0005,
                                        min_samples_leaf=15,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse='False')),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0005,
                                        min_samples_leaf=15,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=None, min_samples_split=15,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='True')),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=None, min_samples_split=15,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=None, min_samples_split=15,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=None, min_samples_split=15,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=None, min_samples_split=15,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=None, min_samples_split=15,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=None, min_samples_split=15,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.001, eta0=50.0, l1_ratio=0.75,
                               loss='perceptron', max_iter=5,
                               penalty='elasticnet', power_t=10.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l1', random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=1e-05, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.8))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42, shrinking=False))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.001, eta0=0.01, l1_ratio=0.5,
                               loss='modified_huber', max_iter=5, power_t=50.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.8))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer(norm='max')),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('nusvc',
                 NuSVC(kernel='linear', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('nusvc',
                 NuSVC(kernel='linear', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('nusvc',
                 NuSVC(kernel='linear', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('nusvc',
                 NuSVC(kernel='linear', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('bernoullinb', BernoulliNB(alpha=10.0, binarize=0.9))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=0.001, fit_prior=False))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        max_features=0.75,
                                        min_impurity_decrease=0.004,
                                        min_samples_leaf=15,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=15.0, fit_intercept=False, loss='hinge',
                           random_state=42))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(kernel='linear', nu=0.7, random_state=42))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=0.001))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0015,
                                        min_samples_leaf=10,
                                        min_samples_split=20, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0015,
                                        min_samples_leaf=10,
                                        min_samples_split=20, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0015,
                                        min_samples_leaf=10,
                                        min_samples_split=20, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0015,
                                        min_samples_leaf=10,
                                        min_samples_split=20, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0015,
                                        min_samples_leaf=10,
                                        min_samples_split=20, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0015,
                                        min_samples_leaf=10,
                                        min_samples_split=20, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=5,
                                        min_samples_split=20, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=5,
                                        min_samples_split=20, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=5,
                                        min_samples_split=20, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0015,
                                        min_samples_leaf=10,
                                        min_samples_split=20, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0015,
                                        min_samples_leaf=10,
                                        min_samples_split=20, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0015,
                                        min_samples_leaf=10,
                                        min_samples_split=20, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0015,
                                        min_samples_leaf=10,
                                        min_samples_split=20, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0015,
                                        min_samples_leaf=10,
                                        min_samples_split=20, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0015,
                                        min_samples_leaf=10,
                                        min_samples_split=20, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0015,
                                        min_samples_leaf=10,
                                        min_samples_split=20, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0015,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='True')),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0015,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0015,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0015,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0015,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('bernoullinb',
                 BernoulliNB(alpha=0.01, binarize=1.0, fit_prior=False))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.001, eta0=50.0, l1_ratio=0.75,
                               loss='perceptron', max_iter=5,
                               penalty='elasticnet', power_t=10.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l1', random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=1e-05, fit_intercept=False,
                                             random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42, shrinking=False))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(eta0=0.1, l1_ratio=0.9, loss='log', max_iter=5,
                               penalty='l1', power_t=0.1, random_state=42,
                               tol=None))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=1e-05, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.2, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer(norm='max')),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('nusvc',
                 NuSVC(kernel='linear', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='False')),
                ('nusvc',
                 NuSVC(kernel='linear', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('nusvc',
                 NuSVC(kernel='linear', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('nusvc',
                 NuSVC(kernel='linear', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('bernoullinb',
                 BernoulliNB(alpha=0.001, binarize=0.9, fit_prior=False))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(eta0=50.0, l1_ratio=1.0,
                               learning_rate='constant', loss='squared_hinge',
                               max_iter=5, penalty='none', power_t=100.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, degree=2, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='none', random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=50.0, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.3, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.001, eta0=0.01, l1_ratio=0.5,
                               loss='modified_huber', max_iter=5, power_t=50.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='none', random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.01, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse='False')),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer(norm='max')),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('nusvc',
                 NuSVC(kernel='linear', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='False')),
                ('nusvc',
                 NuSVC(kernel='linear', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('nusvc',
                 NuSVC(kernel='linear', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('nusvc',
                 NuSVC(kernel='linear', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('nusvc',
                 NuSVC(kernel='linear', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('nusvc',
                 NuSVC(kernel='linear', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('nusvc',
                 NuSVC(kernel='linear', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('nusvc', NuSVC(kernel='sigmoid', nu=0.1, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('nusvc', NuSVC(kernel='sigmoid', nu=0.1, random_state=42))])","Pipeline(steps=[('fastica',
                 FastICA(algorithm='deflation', fun='cube', random_state=42,
                         whiten='False')),
                ('nusvc', NuSVC(kernel='sigmoid', nu=0.1, random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=1.0, degree=5, gamma=0.001, kernel='sigmoid',
                           n_components=10, random_state=42)),
                ('nusvc', NuSVC(kernel='sigmoid', nu=0.1, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest(k=5)),
                ('nusvc', NuSVC(kernel='sigmoid', nu=0.1, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.1)),
                ('nusvc', NuSVC(kernel='sigmoid', nu=0.1, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.01)),
                ('nusvc', NuSVC(kernel='sigmoid', nu=0.1, random_state=42))])","Pipeline(steps=[('nmf', NMF(l1_ratio=0.7, random_state=42, tol=0.1)),
                ('nusvc', NuSVC(kernel='sigmoid', nu=0.1, random_state=42))])","Pipeline(steps=[('nystroem',
                 Nystroem(degree=2, gamma=0.0001, kernel='cosine',
                          n_components=20, random_state=42)),
                ('nusvc', NuSVC(kernel='sigmoid', nu=0.1, random_state=42))])","Pipeline(steps=[('skewedchi2sampler',
                 SkewedChi2Sampler(n_components=200, random_state=42)),
                ('nusvc', NuSVC(kernel='sigmoid', nu=0.1, random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=1.0, random_state=42, ridge_alpha=1.0)),
                ('nusvc', NuSVC(kernel='sigmoid', nu=0.1, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('bernoullinb',
                 BernoulliNB(alpha=0.001, binarize=0.9, fit_prior=False))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.001, eta0=50.0, l1_ratio=0.75,
                               loss='perceptron', max_iter=5,
                               penalty='elasticnet', power_t=10.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l1', random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42, shrinking=False))])","Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=20, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.5,
                                      min_samples_leaf=10, random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse='False')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.5,
                                      min_samples_leaf=10, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer(norm='max')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.5,
                                      min_samples_leaf=10, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.1,
                                      min_samples_split=5, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='True')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.1,
                                      min_samples_split=5, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.1,
                                      min_samples_split=5, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.1,
                                      min_samples_split=5, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.1,
                                      min_samples_split=5, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.1,
                                      min_samples_split=5, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_split=5, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest(k=20)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_split=5, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_split=5, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.0)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_split=5, random_state=42))])","Pipeline(steps=[('selectpercentile',
                 SelectPercentile(percentile=20,
                                  score_func=<function f_regression at 0x7f5193b31310>)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_split=5, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_split=5, random_state=42))])","Pipeline(steps=[('nmf', NMF(l1_ratio=0.7, random_state=42, tol=0.1)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_split=5, random_state=42))])","Pipeline(steps=[('nystroem',
                 Nystroem(degree=5, gamma=0.1, kernel='poly', n_components=20,
                          random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_split=5, random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=2.0, random_state=42, ridge_alpha=0.5)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_split=5, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, miss...s=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=20,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=20,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=20,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=20,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=20,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=20,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, miss...estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=20,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=20,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=20,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=20,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=20,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=20,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse='False')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='False')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest(k=20)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.1)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('selectpercentile',
                 SelectPercentile(percentile=20,
                                  score_func=<function mutual_info_regression at 0x7f5193b3caf0>)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nmf', NMF(l1_ratio=0.2, random_state=42, tol=0.01)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=0.5, method='cd', random_state=42,
                           ridge_alpha=1.0)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(n_components=10, n_neighbors=2,
                                        random_state=42, reg=0.01)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=3, max_features=0.75,
                                        min_impurity_decrease=0.0022500000000000003,
                                        min_samples_split=20,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=None,
                                        min_samples_split=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=1.0,
                                            loss='exponential', max_depth=10,
                                            max_features='sqrt',
                                            min_impurity_decrease=0.003,
                                            min_samples_leaf=5,
                                            min_samples_split=10,
                                            n_estimators=500, random_state=42,
                                            subsample=0.5))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, weights='distance'))])","Pipeline(steps=[('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(alpha=0.001, hidden_layer_sizes=(10, 5),
                               random_state=42, solver='lbfgs'))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(colsample_bytree=0.6444444444444444,
                                learning_rate=0.06984175589943697,
                                min_child_samples=310, num_leaves=42,
                                random_state=42, reg_alpha=0.16326530612244897,
                                subsample=0.595959595959596,
                                subsample_for_bin=40000))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=1.0, max_depth=10,
                                            max_features=0.5,
                                            min_impurity_decrease=0.00125,
                                            min_samples_leaf=20,
                                            min_samples_split=15,
                                            n_estimators=50, random_state=42,
                                            subsample=0.5))])","Pipeline(steps=[('svc',
                 SVC(C=0.1, coef0=50.0, degree=2, gamma=1.0, probability=True,
                     random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='tanh', alpha=0.001,
                               hidden_layer_sizes=(100, 100, 100),
                               random_state=42, solver='lbfgs'))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse='False')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('pca', PCA(n_components=3, random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('fastica',
                 FastICA(algorithm='deflation', fun='cube', n_components=3,
                         random_state=42, whiten='False')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=0.25, degree=5, gamma=0.0001, n_components=10,
                           random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.1)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('rbfsampler',
                 RBFSampler(gamma=0.001, n_components=200, random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('nmf', NMF(l1_ratio=0, random_state=42, tol=0.01)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=2.0, n_components=10, random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=50, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('bernoullinb', BernoulliNB(alpha=10.0, binarize=0.9))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=100.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=1.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.00175,
                                            min_samples_leaf=5,
                                            min_samples_split=20,
                                            random_state=42, subsample=0.7))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=100, p=1,
                                      weights='distance'))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(alpha=0.1, hidden_layer_sizes=(5, 10),
                               random_state=42, solver='lbfgs'))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(colsample_bytree=0.6444444444444444,
                                learning_rate=0.06984175589943697,
                                min_child_samples=310, num_leaves=42,
                                random_state=42, reg_alpha=0.16326530612244897,
                                subsample=0.595959595959596,
                                subsample_for_bin=40000))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=5,
                                            max_features=0.1,
                                            min_impurity_decrease=0.001,
                                            min_samples_leaf=20,
                                            min_samples_split=20,
                                            n_estimators=500, random_state=42,
                                            subsample=1))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=100, weights='distance'))])","Pipeline(steps=[('svc',
                 SVC(C=50.0, coef0=100.0, degree=2, gamma=100.0,
                     probability=True, random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='tanh', alpha=0.001,
                               hidden_layer_sizes=(100, 100, 100),
                               random_state=42, solver='sgd'))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer',
                 PowerTransformer(method='box-cox', standardize='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('polynomialfeatures',
                 PolynomialFeatures(degree=3, interaction_only=True)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='full')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=-0.25, degree=4, gamma=2.0, kernel='cosine',
                           n_components=10, random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.1)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('nystroem',
                 Nystroem(degree=4, gamma=1.0, kernel='poly', n_components=20,
                          random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(n_components=5, random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=2.0, n_components=10, random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.2,
                                   random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('bernoullinb', BernoulliNB(alpha=10.0, binarize=0.9))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=3,
                                        max_features=0.25,
                                        min_impurity_decrease=0.0015,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.0005,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=100, p=1,
                                      weights='distance'))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.2))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42, shrinking=False))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('nusvc', NuSVC(random_state=42, shrinking=False))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse='False')),
                ('nusvc', NuSVC(random_state=42, shrinking=False))])","Pipeline(steps=[('polynomialfeatures',
                 PolynomialFeatures(degree=3, interaction_only=True)),
                ('nusvc', NuSVC(random_state=42, shrinking=False))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('nusvc', NuSVC(nu=0.9, random_state=42, shrinking=False))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('nusvc', NuSVC(nu=0.9, random_state=42, shrinking=False))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('nusvc', NuSVC(nu=0.9, random_state=42, shrinking=False))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('nusvc', NuSVC(nu=0.9, random_state=42, shrinking=False))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('nusvc', NuSVC(kernel='sigmoid', nu=0.9, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='full')),
                ('nusvc', NuSVC(kernel='sigmoid', nu=0.9, random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=0.25, degree=5, gamma=0.001, kernel='rbf',
                           n_components=5, random_state=42)),
                ('nusvc', NuSVC(kernel='sigmoid', nu=0.9, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.1)),
                ('nusvc', NuSVC(kernel='sigmoid', nu=0.9, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('nusvc', NuSVC(kernel='sigmoid', nu=0.9, random_state=42))])","Pipeline(steps=[('nmf', NMF(l1_ratio=0.7, random_state=42, tol=0.1)),
                ('nusvc', NuSVC(kernel='sigmoid', nu=0.9, random_state=42))])","Pipeline(steps=[('nystroem',
                 Nystroem(degree=2, gamma=0.0001, kernel='cosine',
                          n_components=20, random_state=42)),
                ('nusvc', NuSVC(kernel='sigmoid', nu=0.9, random_state=42))])","Pipeline(steps=[('skewedchi2sampler',
                 SkewedChi2Sampler(n_components=200, random_state=42)),
                ('nusvc', NuSVC(kernel='sigmoid', nu=0.9, random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=2.0, method='cd', random_state=42)),
                ('nusvc', NuSVC(kernel='sigmoid', nu=0.9, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=0.1))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l1', random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.01, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.01, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42, shrinking=False))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5, random_state=42))])","Pipeline(steps=[('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.1, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=15,
                                        max_features=0.25,
                                        min_impurity_decrease=0.00025,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.0005,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, degree=2, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier', AdaBoostClassifier(random_state=42))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.01, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42, shrinking=False))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('svc',
                 SVC(C=10.0, coef0=10.0, degree=2, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse='False')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('bernoullinb', BernoulliNB(alpha=10.0, binarize=0.9))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, weights='distance'))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=0.5, l1_ratio=0.0,
                               loss='squared_hinge', max_iter=5, power_t=100.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.01, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier', AdaBoostClassifier(random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42, shrinking=False))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('svc',
                 SVC(C=50.0, coef0=100.0, degree=2, gamma=100.0,
                     probability=True, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse='False')),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('polynomialfeatures',
                 PolynomialFeatures(degree=3, interaction_only=True)),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer(norm='max')),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('nusvc', NuSVC(nu=0.9, random_state=42, shrinking=False))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='False')),
                ('nusvc', NuSVC(nu=0.9, random_state=42, shrinking=False))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('nusvc', NuSVC(nu=0.9, random_state=42, shrinking=False))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('nusvc', NuSVC(nu=0.9, random_state=42, shrinking=False))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('nusvc', NuSVC(nu=0.9, random_state=42, shrinking=False))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('nusvc', NuSVC(nu=0.9, random_state=42, shrinking=False))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('nusvc', NuSVC(nu=0.9, random_state=42, shrinking=False))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('fastica',
                 FastICA(algorithm='deflation', fun='cube', random_state=42,
                         whiten='False')),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=0.25, degree=5, gamma=0.001, kernel='rbf',
                           n_components=5, random_state=42)),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.1)),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(gamma=0.5, random_state=42)),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('nmf', NMF(l1_ratio=0.7, random_state=42, tol=0.1)),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('nystroem',
                 Nystroem(degree=2, gamma=0.0001, kernel='cosine',
                          n_components=20, random_state=42)),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('skewedchi2sampler',
                 SkewedChi2Sampler(n_components=200, random_state=42)),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=1.0, random_state=42, ridge_alpha=0.5)),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse='False')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures(degree=3)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.8, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='False')),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.8, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.8, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.8, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.8, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.8, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.8, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('fastica',
                 FastICA(algorithm='deflation', fun='exp', random_state=42,
                         whiten='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=0.5, degree=2, gamma=2.0, kernel='rbf',
                           n_components=5, random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.1)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('rbfsampler',
                 RBFSampler(gamma=0.5, n_components=200, random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skewedchi2sampler',
                 SkewedChi2Sampler(n_components=50, random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(alpha=1.0, random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('svc',
                 SVC(C=50.0, coef0=100.0, degree=2, gamma=100.0,
                     probability=True, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('svc',
                 SVC(C=50.0, coef0=100.0, degree=2, gamma=100.0,
                     probability=True, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('svc',
                 SVC(C=50.0, coef0=100.0, degree=2, gamma=100.0,
                     probability=True, random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('svc',
                 SVC(C=50.0, coef0=100.0, degree=2, gamma=100.0,
                     probability=True, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('svc',
                 SVC(C=50.0, coef0=100.0, degree=2, gamma=100.0,
                     probability=True, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('svc',
                 SVC(C=50.0, coef0=100.0, degree=2, gamma=100.0,
                     probability=True, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('svc',
                 SVC(C=10.0, coef0=0.1, gamma=1.0, probability=True,
                     random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('svc',
                 SVC(C=10.0, coef0=0.1, gamma=1.0, probability=True,
                     random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse='False')),
                ('svc',
                 SVC(C=10.0, coef0=0.1, gamma=1.0, probability=True,
                     random_state=42))])","Pipeline(steps=[('polynomialfeatures',
                 PolynomialFeatures(degree=3, interaction_only=True)),
                ('svc',
                 SVC(C=10.0, coef0=0.1, gamma=1.0, probability=True,
                     random_state=42))])","Pipeline(steps=[('normalizer', Normalizer(norm='max')),
                ('svc',
                 SVC(C=10.0, coef0=0.1, gamma=1.0, probability=True,
                     random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=100.0))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=None,
                                        min_samples_split=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=100, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=15.0, fit_intercept=False, loss='hinge',
                           random_state=42))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42, shrinking=False))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=70, p=1,
                                      weights='distance'))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, gamma='auto', kernel='poly', probability=True,
                     random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=100.0))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_split=15, n_estimators=10,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features='log2',
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=10,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, loss='hinge', random_state=42, tol=0.01))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.001, eta0=50.0, l1_ratio=0.75,
                               loss='perceptron', max_iter=5,
                               penalty='elasticnet', power_t=10.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('perceptron', Perceptron(penalty='none', random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=1e-05, fit_intercept=False,
                                             random_state=42))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42, shrinking=False))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=1e-05, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=1))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, weights='distance'))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, weights='distance'))])","Pipeline(steps=[('normalizer', Normalizer(norm='max')),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, weights='distance'))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=0.1))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        max_features=0.75,
                                        min_impurity_decrease=0.004,
                                        min_samples_leaf=15,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_split=15, n_estimators=10,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.0005,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=100.0, l1_ratio=0.75,
                               learning_rate='invscaling', loss='log',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=1e-05, random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.1, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features=0.75,
                                        min_impurity_decrease=0.0022500000000000003,
                                        min_samples_leaf=10,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=None,
                                      min_samples_leaf=5, min_samples_split=20,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.1, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=1e-06, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer',
                 PowerTransformer(method='box-cox', standardize='False')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('polynomialfeatures',
                 PolynomialFeatures(degree=3, interaction_only=True)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        max_features=0.25,
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=10,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=1.0,
                                            loss='exponential', max_depth=10,
                                            max_features='sqrt',
                                            min_impurity_decrease=0.003,
                                            min_samples_leaf=5,
                                            min_samples_split=10,
                                            n_estimators=500, random_state=42,
                                            subsample=0.5))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=1e-05, eta0=0.5, l1_ratio=1.0,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', power_t=100.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(alpha=0.001, hidden_layer_sizes=(10, 5),
                               random_state=42, solver='lbfgs'))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42, shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='goss', colsample_bytree=0.6,
                                learning_rate=0.005432578873262691,
                                min_child_samples=470, num_leaves=110,
                                random_state=42, reg_alpha=0.42857142857142855,
                                subsample=0.8838383838383839,
                                subsample_for_bin=280000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        max_features=0.1,
                                        min_impurity_decrease=0.0035,
                                        min_samples_leaf=20,
                                        random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.25,
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=20,
                                        min_samples_split=20, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=10.0,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            min_impurity_decrease=0.002,
                                            n_estimators=500, random_state=42,
                                            subsample=0.2))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='tanh', alpha=0.01,
                               hidden_layer_sizes=(10, 5), random_state=42,
                               solver='lbfgs'))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.3, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(colsample_bytree=0.9555555555555555,
                                learning_rate=0.021458661892110785,
                                min_child_samples=480, num_leaves=95,
                                random_state=42, reg_alpha=0.5102040816326531,
                                subsample=0.8484848484848485,
                                subsample_for_bin=160000))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.001, hidden_layer_sizes=(10, 5),
                               random_state=42, solver='lbfgs'))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.001, hidden_layer_sizes=(10, 5),
                               random_state=42, solver='lbfgs'))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.001, hidden_layer_sizes=(10, 5),
                               random_state=42, solver='lbfgs'))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.001, hidden_layer_sizes=(10, 5),
                               random_state=42, solver='lbfgs'))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.001, hidden_layer_sizes=(10, 5),
                               random_state=42, solver='lbfgs'))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.001, hidden_layer_sizes=(10, 5),
                               random_state=42, solver='lbfgs'))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.1, hidden_layer_sizes=(5, 10),
                               random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.1, hidden_layer_sizes=(5, 10),
                               random_state=42))])","Pipeline(steps=[('polynomialfeatures',
                 PolynomialFeatures(interaction_only=True)),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.1, hidden_layer_sizes=(5, 10),
                               random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.0005,
                                        min_samples_leaf=15,
                                        min_samples_split=20,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=15.0, fit_intercept=False, loss='hinge',
                           random_state=42))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.001, eta0=50.0, l1_ratio=0.75,
                               loss='perceptron', max_iter=5,
                               penalty='elasticnet', power_t=10.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('perceptron', Perceptron(penalty='none', random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=1e-05, fit_intercept=False,
                                             random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42, shrinking=False))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=0.001, fit_prior=False))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, loss='hinge', random_state=42, tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=None,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures(degree=3)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=None,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer(norm='max')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=None,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_split=15, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='True')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_split=15, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_split=15, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_split=15, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_split=15, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=None,
                                      min_samples_split=10, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='full')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=None,
                                      min_samples_split=10, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('fastica',
                 FastICA(algorithm='deflation', fun='cube', n_components=5,
                         random_state=42, whiten='True')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=None,
                                      min_samples_split=10, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=0.5, degree=5, gamma=0.01, n_components=5,
                           random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=None,
                                      min_samples_split=10, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.05)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=None,
                                      min_samples_split=10, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.05)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=None,
                                      min_samples_split=10, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=None,
                                      min_samples_split=10, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('skewedchi2sampler',
                 SkewedChi2Sampler(n_components=200, random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=None,
                                      min_samples_split=10, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=1.0, n_components=10, random_state=42,
                           ridge_alpha=1.0)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=None,
                                      min_samples_split=10, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, miss...llel_tree=1, objective='multi:softprob', predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=None, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.8, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('polynomialfeatures',
                 PolynomialFeatures(degree=3, interaction_only=True)),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.8, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('normalizer', Normalizer(norm='l1')),
                ('baggingclassifier',
                 BaggingClassifier(max_samples=0.8, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('fastica',
                 FastICA(algorithm='deflation', fun='cube', n_components=10,
                         random_state=42, whiten='False')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=0.75, degree=2, gamma=0.01, n_components=10,
                           random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.0)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=2.0, method='cd', random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('bernoullinb',
                 BernoulliNB(alpha=0.001, binarize=0.9, fit_prior=False))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=15,
                                        max_features=0.25,
                                        min_impurity_decrease=0.00025,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.0005,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=15.0, fit_intercept=False, loss='hinge',
                           random_state=42))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features='log2',
                                        min_impurity_decrease=0.0005,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('svc',
                 SVC(C=0.1, coef0=50.0, degree=2, gamma=1.0, probability=True,
                     random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        max_features=0.75,
                                        min_impurity_decrease=0.004,
                                        min_samples_leaf=15,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.0005,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=10,
                                            max_features=0.75,
                                            min_impurity_decrease=0.0005,
                                            min_samples_leaf=20,
                                            min_samples_split=10,
                                            n_estimators=10, random_state=42,
                                            subsample=0.5))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, p=1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('svc',
                 SVC(coef0=10.0, gamma=10.0, kernel='sigmoid', probability=True,
                     random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(alpha=0.1, hidden_layer_sizes=(5, 10),
                               random_state=42, solver='lbfgs'))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.2))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='goss',
                                colsample_bytree=0.6888888888888889,
                                learning_rate=0.17478877871816373,
                                min_child_samples=220, num_leaves=87,
                                random_state=42, reg_alpha=0.8979591836734693,
                                subsample=0.7828282828282829,
                                subsample_for_bin=40000))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, p=1,
                                      weights='distance'))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.0001, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=None, min_samples_leaf=5,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=None, min_samples_leaf=5,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('polynomialfeatures',
                 PolynomialFeatures(interaction_only=True)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=None, min_samples_leaf=5,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_split=15, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='True')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_split=15, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_split=15, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_split=15, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_split=15, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_split=5, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='full')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_split=5, random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=-0.75, degree=4, gamma=0.001,
                           random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_split=5, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.05)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_split=5, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.05)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_split=5, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_split=5, random_state=42))])","Pipeline(steps=[('nmf',
                 NMF(l1_ratio=0.7, n_components=5, random_state=42, tol=1e-05)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_split=5, random_state=42))])","Pipeline(steps=[('skewedchi2sampler',
                 SkewedChi2Sampler(n_components=200, random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_split=5, random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=2.0, random_state=42, ridge_alpha=0.5)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_split=5, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=100.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        max_features=0.25,
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=10,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features='log2',
                                      min_samples_leaf=10, min_samples_split=10,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=10,
                                            max_features='log2',
                                            n_estimators=50, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('svc',
                 SVC(coef0=10.0, gamma=10.0, kernel='sigmoid', probability=True,
                     random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(alpha=0.001, hidden_layer_sizes=(10, 5),
                               random_state=42, solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=1e-05, fit_intercept=False,
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(colsample_bytree=0.8666666666666667,
                                learning_rate=0.007570946626521759,
                                min_child_samples=170, num_leaves=40,
                                random_state=42, reg_alpha=0.26530612244897955,
                                subsample=0.7121212121212122))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=0.001))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        max_features=0.1,
                                        min_impurity_decrease=0.0035,
                                        min_samples_leaf=20,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.25,
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=20,
                                        min_samples_split=20, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.5,
                                            loss='exponential', max_depth=1,
                                            max_features='sqrt',
                                            min_impurity_decrease=0.0005,
                                            min_samples_leaf=15,
                                            min_samples_split=20,
                                            n_estimators=1000, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('svc',
                 SVC(C=50.0, coef0=100.0, gamma=10.0, kernel='sigmoid',
                     probability=True, random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(alpha=0.1, hidden_layer_sizes=(10, 5),
                               random_state=42, solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=1e-06, fit_intercept=False,
                                             random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='goss',
                                colsample_bytree=0.9555555555555555,
                                learning_rate=0.03264260570563923,
                                min_child_samples=55, num_leaves=113,
                                random_state=42, reg_alpha=0.6326530612244897,
                                subsample=0.9191919191919192,
                                subsample_for_bin=40000))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.1, hidden_layer_sizes=(10, 5),
                               random_state=42, solver='sgd'))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.1, hidden_layer_sizes=(10, 5),
                               random_state=42, solver='sgd'))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.1, hidden_layer_sizes=(10, 5),
                               random_state=42, solver='sgd'))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.1, hidden_layer_sizes=(10, 5),
                               random_state=42, solver='sgd'))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.1, hidden_layer_sizes=(10, 5),
                               random_state=42, solver='sgd'))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.1, hidden_layer_sizes=(10, 5),
                               random_state=42, solver='sgd'))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('mlpclassifier',
                 MLPClassifier(activation='tanh', alpha=0.1,
                               hidden_layer_sizes=(10, 5), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('mlpclassifier',
                 MLPClassifier(activation='tanh', alpha=0.1,
                               hidden_layer_sizes=(10, 5), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('normalizer', Normalizer(norm='max')),
                ('mlpclassifier',
                 MLPClassifier(activation='tanh', alpha=0.1,
                               hidden_layer_sizes=(10, 5), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.1, hidden_layer_sizes=(10, 5),
                               random_state=42, solver='sgd'))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.1, hidden_layer_sizes=(10, 5),
                               random_state=42, solver='sgd'))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.1, hidden_layer_sizes=(10, 5),
                               random_state=42, solver='sgd'))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.1, hidden_layer_sizes=(10, 5),
                               random_state=42, solver='sgd'))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.1, hidden_layer_sizes=(10, 5),
                               random_state=42, solver='sgd'))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.1, hidden_layer_sizes=(10, 5),
                               random_state=42, solver='sgd'))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.1, hidden_layer_sizes=(10, 5),
                               random_state=42, solver='sgd'))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.1,
                               hidden_layer_sizes=(100, 100, 100),
                               random_state=42, solver='sgd'))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.1,
                               hidden_layer_sizes=(100, 100, 100),
                               random_state=42, solver='sgd'))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.1,
                               hidden_layer_sizes=(100, 100, 100),
                               random_state=42, solver='sgd'))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.1,
                               hidden_layer_sizes=(100, 100, 100),
                               random_state=42, solver='sgd'))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.1,
                               hidden_layer_sizes=(100, 100, 100),
                               random_state=42, solver='sgd'))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('bernoullinb', BernoulliNB(alpha=0.01, binarize=0.25))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=0.001))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=3, max_features=0.5,
                                        min_impurity_decrease=0.004,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, p=1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.1, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.4,
                                   random_state=42))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features=0.5,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=20,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, p=1,
                                      weights='distance'))])","Pipeline(steps=[('svc',
                 SVC(C=0.01, coef0=10.0, degree=2, gamma='auto', kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=5,
                                        min_samples_split=20, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('polynomialfeatures',
                 PolynomialFeatures(degree=3, interaction_only=True)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=5,
                                        min_samples_split=20, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=5,
                                        min_samples_split=20, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00425,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='False')),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00425,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00425,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00425,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00425,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00425,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.00425,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.1,
                                        min_impurity_decrease=0.00475,
                                        min_samples_leaf=20,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='randomized')),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.1,
                                        min_impurity_decrease=0.00475,
                                        min_samples_leaf=20,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=-0.75, degree=5, gamma=1.0, kernel='rbf',
                           n_components=10, random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.1,
                                        min_impurity_decrease=0.00475,
                                        min_samples_leaf=20,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.1,
                                        min_impurity_decrease=0.00475,
                                        min_samples_leaf=20,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.0)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.1,
                                        min_impurity_decrease=0.00475,
                                        min_samples_leaf=20,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('rbfsampler',
                 RBFSampler(gamma=0.01, n_components=200, random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.1,
                                        min_impurity_decrease=0.00475,
                                        min_samples_leaf=20,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.1,
                                        min_impurity_decrease=0.00475,
                                        min_samples_leaf=20,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=1.0, n_components=10, random_state=42,
                           ridge_alpha=1.0)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.1,
                                        min_impurity_decrease=0.00475,
                                        min_samples_leaf=20,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('isomap', Isomap(n_components=5, n_neighbors=2)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.1,
                                        min_impurity_decrease=0.00475,
                                        min_samples_leaf=20,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, miss...auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=None, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=5, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=5, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=5, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=5, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=5, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=5, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, miss...objective='multi:softprob', predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=None, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=5, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=5, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=5, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=5, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=5, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=5, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=3, max_features=0.5,
                                        min_impurity_decrease=0.004,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.00475,
                                        min_samples_leaf=5, min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=70, p=1))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=0.5, l1_ratio=0.0,
                               loss='squared_hinge', max_iter=5, power_t=100.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, gamma=100.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.01, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('kneighborsclassifier', KNeighborsClassifier(n_neighbors=20))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(eta0=0.5, l1_ratio=0.9, learning_rate='constant',
                               loss='log', max_iter=5, penalty='l1',
                               power_t=10.0, random_state=42, tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.1, coef0=0.5, gamma=10.0, probability=True,
                     random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.01, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('svc',
                 SVC(C=0.1, coef0=0.5, gamma=10.0, probability=True,
                     random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('svc',
                 SVC(C=0.1, coef0=0.5, gamma=10.0, probability=True,
                     random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('svc',
                 SVC(C=0.1, coef0=0.5, gamma=10.0, probability=True,
                     random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('svc',
                 SVC(C=0.1, coef0=0.5, gamma=10.0, probability=True,
                     random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('svc',
                 SVC(C=0.1, coef0=0.5, gamma=10.0, probability=True,
                     random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('svc',
                 SVC(C=0.1, degree=2, gamma=100.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('svc',
                 SVC(C=0.1, degree=2, gamma=100.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures(degree=3)),
                ('svc',
                 SVC(C=0.1, degree=2, gamma=100.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('svc',
                 SVC(C=0.1, coef0=0.5, gamma=10.0, probability=True,
                     random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('svc',
                 SVC(C=0.1, coef0=0.5, gamma=10.0, probability=True,
                     random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('svc',
                 SVC(C=0.1, coef0=0.5, gamma=10.0, probability=True,
                     random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('svc',
                 SVC(C=0.1, coef0=0.5, gamma=10.0, probability=True,
                     random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('svc',
                 SVC(C=0.1, coef0=0.5, gamma=10.0, probability=True,
                     random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('svc',
                 SVC(C=0.1, coef0=0.5, gamma=10.0, probability=True,
                     random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('svc',
                 SVC(C=0.1, coef0=0.5, gamma=10.0, probability=True,
                     random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('svc',
                 SVC(C=0.1, coef0=50.0, gamma=0.1, probability=True,
                     random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('svc',
                 SVC(C=0.1, coef0=50.0, gamma=0.1, probability=True,
                     random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('svc',
                 SVC(C=0.1, coef0=50.0, gamma=0.1, probability=True,
                     random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('svc',
                 SVC(C=0.1, coef0=50.0, gamma=0.1, probability=True,
                     random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('svc',
                 SVC(C=0.1, coef0=0.5, gamma=10.0, probability=True,
                     random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('svc',
                 SVC(C=0.1, coef0=0.5, gamma=10.0, probability=True,
                     random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('svc',
                 SVC(C=0.1, coef0=0.5, gamma=10.0, probability=True,
                     random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('svc',
                 SVC(C=0.1, coef0=0.5, gamma=10.0, probability=True,
                     random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('svc',
                 SVC(C=0.1, coef0=0.5, gamma=10.0, probability=True,
                     random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('svc',
                 SVC(C=0.1, coef0=0.5, gamma=10.0, probability=True,
                     random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('svc',
                 SVC(C=0.1, coef0=0.5, gamma=10.0, probability=True,
                     random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('svc',
                 SVC(C=0.1, coef0=0.5, gamma=10.0, probability=True,
                     random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('svc',
                 SVC(C=0.1, coef0=0.5, gamma=10.0, probability=True,
                     random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('svc',
                 SVC(C=0.1, coef0=0.5, gamma=10.0, probability=True,
                     random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('svc',
                 SVC(C=0.1, coef0=0.5, gamma=10.0, probability=True,
                     random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('svc',
                 SVC(C=0.1, coef0=0.5, gamma=10.0, probability=True,
                     random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('svc',
                 SVC(C=0.1, coef0=0.5, gamma=10.0, probability=True,
                     random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('svc',
                 SVC(C=50.0, coef0=50.0, degree=2, gamma=1.0, kernel='sigmoid',
                     probability=True, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='full')),
                ('svc',
                 SVC(C=50.0, coef0=50.0, degree=2, gamma=1.0, kernel='sigmoid',
                     probability=True, random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=-1.0, degree=4, gamma=2.0, kernel='rbf',
                           n_components=10, random_state=42)),
                ('svc',
                 SVC(C=50.0, coef0=50.0, degree=2, gamma=1.0, kernel='sigmoid',
                     probability=True, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('svc',
                 SVC(C=50.0, coef0=50.0, degree=2, gamma=1.0, kernel='sigmoid',
                     probability=True, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(gamma=0.5, random_state=42)),
                ('svc',
                 SVC(C=50.0, coef0=50.0, degree=2, gamma=1.0, kernel='sigmoid',
                     probability=True, random_state=42))])","Pipeline(steps=[('nystroem',
                 Nystroem(degree=5, gamma=0.1, kernel='sigmoid',
                          n_components=20, random_state=42)),
                ('svc',
                 SVC(C=50.0, coef0=50.0, degree=2, gamma=1.0, kernel='sigmoid',
                     probability=True, random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=0.5, method='cd', random_state=42,
                           ridge_alpha=1.0)),
                ('svc',
                 SVC(C=50.0, coef0=50.0, degree=2, gamma=1.0, kernel='sigmoid',
                     probability=True, random_state=42))])","Pipeline(steps=[('isomap',
                 Isomap(n_components=10, n_neighbors=10, path_method='FW')),
                ('svc',
                 SVC(C=50.0, coef0=50.0, degree=2, gamma=1.0, kernel='sigmoid',
                     probability=True, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        min_samples_leaf=20,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.5,
                                      min_samples_leaf=10, min_samples_split=15,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=0.001,
                                            loss='exponential', max_depth=10,
                                            max_features='sqrt',
                                            min_impurity_decrease=0.001,
                                            min_samples_split=10,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(alpha=0.001, hidden_layer_sizes=(10, 5),
                               random_state=42, solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=50.0, random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(colsample_bytree=0.6444444444444444,
                                learning_rate=0.06984175589943697,
                                min_child_samples=310, num_leaves=42,
                                random_state=42, reg_alpha=0.16326530612244897,
                                subsample=0.595959595959596,
                                subsample_for_bin=40000))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.001, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('svc',
                 SVC(C=0.01, coef0=10.0, degree=2, gamma='auto', kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.2,
                                   random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.00075,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.00075,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.00075,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.00075,
                                        min_samples_leaf=20,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='False')),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.00075,
                                        min_samples_leaf=20,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.00075,
                                        min_samples_leaf=20,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.00075,
                                        min_samples_leaf=20,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.00075,
                                        min_samples_leaf=20,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.00075,
                                        min_samples_leaf=20,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.00075,
                                        min_samples_leaf=20,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.25,
                                        min_impurity_decrease=0.00125,
                                        min_samples_split=20, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.05)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.25,
                                        min_impurity_decrease=0.00125,
                                        min_samples_split=20, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.05)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.25,
                                        min_impurity_decrease=0.00125,
                                        min_samples_split=20, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('rbfsampler',
                 RBFSampler(gamma=0.01, n_components=200, random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.25,
                                        min_impurity_decrease=0.00125,
                                        min_samples_split=20, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.25,
                                        min_impurity_decrease=0.00125,
                                        min_samples_split=20, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('nmf', NMF(l1_ratio=0, n_components=10, random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.25,
                                        min_impurity_decrease=0.00125,
                                        min_samples_split=20, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('nystroem',
                 Nystroem(degree=4, gamma=0.01, kernel='sigmoid',
                          n_components=20, random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.25,
                                        min_impurity_decrease=0.00125,
                                        min_samples_split=20, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=1.0, method='cd', n_components=5,
                           random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.25,
                                        min_impurity_decrease=0.00125,
                                        min_samples_split=20, n_estimators=10,
                                        random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=3, max_features=0.5,
                                        min_impurity_decrease=0.004,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features='log2',
                                      min_samples_leaf=10, min_samples_split=10,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.00475,
                                        min_samples_leaf=5, min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=70, weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=1e-05, eta0=0.01, l1_ratio=1.0,
                               learning_rate='constant', loss='log', max_iter=5,
                               penalty='none', random_state=42, tol=None))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.2))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=5, max_features=0.5,
                                        min_impurity_decrease=0.0015,
                                        min_samples_leaf=10,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features=0.1,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.0001, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('normalizer', Normalizer(norm='max')),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='False')),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('pca', PCA(n_components=5, random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('fastica',
                 FastICA(fun='exp', random_state=42, whiten='False')),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=1.0, degree=5, gamma=0.01, kernel='poly',
                           n_components=10, random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.05)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.05)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('nmf', NMF(l1_ratio=0, n_components=10, random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(alpha=1.0, random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.001, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='randomized')),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.001, random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=0.75, gamma=1.0, kernel='poly', n_components=5,
                           random_state=42)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.001, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.1)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.001, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.0)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.001, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.001, random_state=42))])","Pipeline(steps=[('nmf', NMF(l1_ratio=0.2, n_components=10, random_state=42)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.001, random_state=42))])","Pipeline(steps=[('skewedchi2sampler',
                 SkewedChi2Sampler(n_components=50, random_state=42)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.001, random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=0.5, random_state=42, ridge_alpha=0.5)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.001, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.001, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.001, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.001, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.001, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.001, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.001, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.001, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.001, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.001, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.001, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.001, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.001, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.001, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_leaf=5,
                                      min_samples_split=15, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_leaf=5,
                                      min_samples_split=15, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_leaf=5,
                                      min_samples_split=15, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.5,
                                      min_samples_leaf=20, min_samples_split=10,
                                      random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='True')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.5,
                                      min_samples_leaf=20, min_samples_split=10,
                                      random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.5,
                                      min_samples_leaf=20, min_samples_split=10,
                                      random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.5,
                                      min_samples_leaf=20, min_samples_split=10,
                                      random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.5,
                                      min_samples_leaf=20, min_samples_split=10,
                                      random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.25, min_samples_split=10,
                                      n_estimators=10, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='full')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.25, min_samples_split=10,
                                      n_estimators=10, random_state=42))])","Pipeline(steps=[('fastica',
                 FastICA(fun='cube', random_state=42, whiten='False')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.25, min_samples_split=10,
                                      n_estimators=10, random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=0.5, degree=5, gamma=0.0001, n_components=10,
                           random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.25, min_samples_split=10,
                                      n_estimators=10, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.05)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.25, min_samples_split=10,
                                      n_estimators=10, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.05)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.25, min_samples_split=10,
                                      n_estimators=10, random_state=42))])","Pipeline(steps=[('nmf', NMF(l1_ratio=0.7, random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.25, min_samples_split=10,
                                      n_estimators=10, random_state=42))])","Pipeline(steps=[('skewedchi2sampler',
                 SkewedChi2Sampler(n_components=50, random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.25, min_samples_split=10,
                                      n_estimators=10, random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=0.5, method='cd', n_components=10,
                           random_state=42, ridge_alpha=0.5)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.25, min_samples_split=10,
                                      n_estimators=10, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        max_features=0.75,
                                        min_impurity_decrease=0.004,
                                        min_samples_leaf=15,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features='log2',
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=10,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.001, eta0=50.0, l1_ratio=0.75,
                               loss='perceptron', max_iter=5,
                               penalty='elasticnet', power_t=10.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.6))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.6))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('bernoullinb', BernoulliNB(alpha=10.0, binarize=0.9))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=70, p=1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('svc',
                 SVC(coef0=10.0, gamma=10.0, kernel='sigmoid', probability=True,
                     random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(alpha=0.001, hidden_layer_sizes=(10, 5),
                               random_state=42, solver='sgd'))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.01, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(colsample_bytree=0.8666666666666667,
                                learning_rate=0.007570946626521759,
                                min_child_samples=170, num_leaves=40,
                                random_state=42, reg_alpha=0.26530612244897955,
                                subsample=0.7121212121212122))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.75,
                                      min_samples_leaf=15, min_samples_split=15,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features=0.1,
                                        min_impurity_decrease=0.0032500000000000003,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, weights='distance'))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(alpha=0.1, hidden_layer_sizes=(10, 5),
                               random_state=42, solver='sgd'))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, weights='distance'))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, weights='distance'))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, weights='distance'))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, weights='distance'))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, weights='distance'))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=20))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=20))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=20))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, weights='distance'))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, weights='distance'))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, weights='distance'))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, weights='distance'))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, weights='distance'))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, weights='distance'))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, weights='distance'))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=100, p=1,
                                      weights='distance'))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='True')),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=100, p=1,
                                      weights='distance'))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=100, p=1,
                                      weights='distance'))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=100, p=1,
                                      weights='distance'))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, weights='distance'))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, weights='distance'))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, weights='distance'))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, weights='distance'))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, weights='distance'))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, weights='distance'))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, weights='distance'))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, weights='distance'))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, weights='distance'))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, weights='distance'))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, weights='distance'))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, weights='distance'))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, weights='distance'))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, weights='distance'))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, weights='distance'))])","Pipeline(steps=[('isomap', Isomap()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, weights='distance'))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, weights='distance'))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, weights='distance'))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=20))])","Pipeline(steps=[('pca',
                 PCA(n_components=5, random_state=42, svd_solver='randomized')),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=20))])","Pipeline(steps=[('fastica',
                 FastICA(fun='exp', n_components=10, random_state=42,
                         whiten='False')),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=20))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=-1.0, degree=4, gamma=2.0, kernel='cosine',
                           n_components=3, random_state=42)),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=20))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=20))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=20))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.0)),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=20))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=20))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=0.5, n_components=5, random_state=42,
                           ridge_alpha=0.5)),
                ('kneighborsclassifier', KNeighborsClassifier(n_neighbors=20))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=15,
                                        max_features=0.25,
                                        min_impurity_decrease=0.00025,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.0005,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.001, eta0=50.0, l1_ratio=0.75,
                               loss='perceptron', max_iter=5,
                               penalty='elasticnet', power_t=10.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=1e-05, fit_intercept=False,
                                             random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.01, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42, shrinking=False))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=10,
                                        min_impurity_decrease=0.00175,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.75, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.75, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('polynomialfeatures',
                 PolynomialFeatures(degree=3, interaction_only=True)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.75, min_samples_split=5,
                                      n_estimators=50, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=15,
                                        max_features=0.25,
                                        min_impurity_decrease=0.00025,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_split=15, n_estimators=10,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=None,
                                        min_samples_split=10, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=0.5, l1_ratio=0.0,
                               loss='squared_hinge', max_iter=5, power_t=100.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l1', random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features='log2',
                                        min_impurity_decrease=0.0005,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, p=1,
                                      weights='distance'))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=100, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.5,
                                        min_impurity_decrease=0.0005,
                                        min_samples_leaf=15,
                                        min_samples_split=20,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, p=1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.001, eta0=50.0, l1_ratio=0.75,
                               loss='perceptron', max_iter=5,
                               penalty='elasticnet', power_t=10.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=10.0, coef0=1.0, gamma=0.01, kernel='sigmoid',
                     probability=True, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.4,
                                   random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.3, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=None,
                                      min_samples_leaf=5, min_samples_split=20,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('svc',
                 SVC(C=0.01, coef0=10.0, degree=2, gamma='auto', kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_samples_leaf=20, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_samples_leaf=20, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('polynomialfeatures',
                 PolynomialFeatures(degree=3, interaction_only=True)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_samples_leaf=20, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='sqrt',
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='False')),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='sqrt',
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='sqrt',
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='sqrt',
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='sqrt',
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='sqrt',
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='sqrt',
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_samples_leaf=20,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('pca',
                 PCA(n_components=5, random_state=42, svd_solver='full')),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_samples_leaf=20,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=-0.5, degree=5, gamma=0.0001, kernel='poly',
                           n_components=10, random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_samples_leaf=20,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_samples_leaf=20,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.1)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_samples_leaf=20,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.05)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_samples_leaf=20,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('selectpercentile',
                 SelectPercentile(percentile=70,
                                  score_func=<function f_regression at 0x7f5193b31310>)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_samples_leaf=20,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('nmf',
                 NMF(l1_ratio=0.7, n_components=5, random_state=42, tol=1e-05)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_samples_leaf=20,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=1.0, method='cd', n_components=5,
                           random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_samples_leaf=20,
                                        min_samples_split=5, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, miss...ive='multi:softprob', predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=None, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=5, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=5, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=5, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=5, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=5, random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=5, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=5, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=5, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=5, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=5, random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=5, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=5, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=5, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('polynomialfeatures',
                 PolynomialFeatures(interaction_only=True)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='True')),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.1, n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=10,
                                    random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=10,
                                    random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=10, min_samples_split=10,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, p=1))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=1e-05, eta0=0.01, l1_ratio=1.0,
                               learning_rate='constant', loss='log', max_iter=5,
                               penalty='none', random_state=42, tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=100.0, degree=2, gamma=1.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42, shrinking=False))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=20,
                                        min_samples_split=20, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, p=1))])","Pipeline(steps=[('linearsvc', LinearSVC(C=5.0, random_state=42, tol=0.1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=15.0, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('logisticregression',
                 LogisticRegression(C=15.0, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('normalizer', Normalizer(norm='max')),
                ('logisticregression',
                 LogisticRegression(C=15.0, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='False')),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('pca',
                 PCA(n_components=3, random_state=42, svd_solver='randomized')),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=-0.75, gamma=0.001, random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest(k=3)),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.01)),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('nystroem',
                 Nystroem(degree=2, gamma=0.1, kernel='cosine', n_components=20,
                          random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('skewedchi2sampler',
                 SkewedChi2Sampler(n_components=50, random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=2.0, n_components=10, random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, objective='multi:softprob', predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=None, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('svc',
                 SVC(gamma='auto', kernel='poly', probability=True,
                     random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('svc',
                 SVC(gamma='auto', kernel='poly', probability=True,
                     random_state=42))])","Pipeline(steps=[('polynomialfeatures',
                 PolynomialFeatures(interaction_only=True)),
                ('svc',
                 SVC(gamma='auto', kernel='poly', probability=True,
                     random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=100.0, l1_ratio=0.75,
                               learning_rate='invscaling', loss='log',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42, shrinking=False))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('linearsvc', LinearSVC(random_state=42, tol=0.1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.1, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('bernoullinb', BernoulliNB(alpha=0.01, binarize=0.25))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=15,
                                        max_features=0.25,
                                        min_impurity_decrease=0.00025,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.01, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier', AdaBoostClassifier(random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.2))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('bernoullinb',
                 BernoulliNB(alpha=0.1, binarize=0.25, fit_prior=False))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00125,
                                        min_samples_leaf=15,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=500, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=100.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        max_features=0.25,
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=10,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=100, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=1e-06, eta0=0.01, fit_intercept=False,
                               l1_ratio=0.25, learning_rate='invscaling',
                               max_iter=5, power_t=0.0, random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=0.5, gamma=100.0, probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='tanh', alpha=0.001,
                               hidden_layer_sizes=(5, 10), random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier', AdaBoostClassifier(random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.8))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(colsample_bytree=0.8666666666666667,
                                learning_rate=0.007570946626521759,
                                min_child_samples=170, num_leaves=40,
                                random_state=42, reg_alpha=0.26530612244897955,
                                subsample=0.7121212121212122))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=None,
                                      min_samples_leaf=5, min_samples_split=20,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, loss='hinge',
                           random_state=42, tol=0.001))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='identity', alpha=0.001,
                               hidden_layer_sizes=(10, 5), random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=1e-06, fit_intercept=False,
                                             random_state=42))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, random_state=42, tol=1e-05))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse='False')),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, random_state=42, tol=1e-05))])","Pipeline(steps=[('normalizer', Normalizer(norm='max')),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, random_state=42, tol=1e-05))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('linearsvc',
                 LinearSVC(C=5.0, dual=False, fit_intercept=False,
                           random_state=42, tol=0.01))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('linearsvc',
                 LinearSVC(C=5.0, dual=False, fit_intercept=False,
                           random_state=42, tol=0.01))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('linearsvc',
                 LinearSVC(C=5.0, dual=False, fit_intercept=False,
                           random_state=42, tol=0.01))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('linearsvc',
                 LinearSVC(C=5.0, dual=False, fit_intercept=False,
                           random_state=42, tol=0.01))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('isomap', Isomap()),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('linearsvc',
                 LinearSVC(C=0.0001, dual=False, fit_intercept=False,
                           penalty='l1', random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest(k=20)),
                ('linearsvc',
                 LinearSVC(C=0.0001, dual=False, fit_intercept=False,
                           penalty='l1', random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.05)),
                ('linearsvc',
                 LinearSVC(C=0.0001, dual=False, fit_intercept=False,
                           penalty='l1', random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.05)),
                ('linearsvc',
                 LinearSVC(C=0.0001, dual=False, fit_intercept=False,
                           penalty='l1', random_state=42))])","Pipeline(steps=[('nmf', NMF(l1_ratio=0, random_state=42, tol=1e-05)),
                ('linearsvc',
                 LinearSVC(C=0.0001, dual=False, fit_intercept=False,
                           penalty='l1', random_state=42))])","Pipeline(steps=[('nystroem',
                 Nystroem(degree=5, gamma=1.0, kernel='cosine', n_components=20,
                          random_state=42)),
                ('linearsvc',
                 LinearSVC(C=0.0001, dual=False, fit_intercept=False,
                           penalty='l1', random_state=42))])","Pipeline(steps=[('truncatedsvd',
                 TruncatedSVD(n_components=10, random_state=42)),
                ('linearsvc',
                 LinearSVC(C=0.0001, dual=False, fit_intercept=False,
                           penalty='l1', random_state=42))])","Pipeline(steps=[('skewedchi2sampler',
                 SkewedChi2Sampler(n_components=200, random_state=42)),
                ('linearsvc',
                 LinearSVC(C=0.0001, dual=False, fit_intercept=False,
                           penalty='l1', random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('linearsvc',
                 LinearSVC(C=5.0, dual=False, penalty='l1', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('linearsvc',
                 LinearSVC(C=5.0, dual=False, penalty='l1', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('linearsvc',
                 LinearSVC(C=5.0, dual=False, penalty='l1', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('linearsvc',
                 LinearSVC(C=5.0, dual=False, penalty='l1', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('linearsvc',
                 LinearSVC(C=5.0, dual=False, penalty='l1', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('linearsvc',
                 LinearSVC(C=5.0, dual=False, penalty='l1', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('linearsvc',
                 LinearSVC(C=5.0, dual=False, penalty='l1', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('linearsvc',
                 LinearSVC(C=5.0, dual=False, penalty='l1', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('linearsvc',
                 LinearSVC(C=5.0, dual=False, penalty='l1', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('linearsvc',
                 LinearSVC(C=5.0, dual=False, penalty='l1', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('linearsvc',
                 LinearSVC(C=5.0, dual=False, penalty='l1', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('linearsvc',
                 LinearSVC(C=5.0, dual=False, penalty='l1', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('linearsvc',
                 LinearSVC(C=5.0, dual=False, penalty='l1', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_leaf=5, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_leaf=5, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse='False')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_leaf=5, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=10,
                                      random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='True')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=10,
                                      random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=10,
                                      random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=10,
                                      random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=10,
                                      random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=10,
                                      random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=10,
                                      random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('bernoullinb', BernoulliNB(alpha=10.0, binarize=0.9))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.0005,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=100.0, l1_ratio=0.75,
                               learning_rate='invscaling', loss='log',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42, shrinking=False))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer(norm='max')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=15,
                                        max_features=0.25,
                                        min_impurity_decrease=0.00025,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=0.5, gamma=100.0, probability=True,
                     random_state=42))])","Pipeline(steps=[('adaboostclassifier', AdaBoostClassifier(random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.4))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features='log2',
                                        min_impurity_decrease=0.0005,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, p=1,
                                      weights='distance'))])","Pipeline(steps=[('svc',
                 SVC(C=50.0, coef0=100.0, degree=2, gamma=100.0,
                     probability=True, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer',
                 PowerTransformer(method='box-cox', standardize='True')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('polynomialfeatures',
                 PolynomialFeatures(degree=3, interaction_only=True)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='full')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=0.25, degree=5, gamma=0.0001, n_components=10,
                           random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.1)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(gamma=0.5, random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skewedchi2sampler',
                 SkewedChi2Sampler(n_components=200, random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=2.0, n_components=10, random_state=42)),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8, n_estimators=100,
                                   random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, objective='multi:softprob', predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=None, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('baggingclassifier', BaggingClassifier(random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='sqrt',
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('powertransformer',
                 PowerTransformer(method='box-cox', standardize='False')),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='sqrt',
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures(degree=3)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='sqrt',
                                        min_samples_leaf=10,
                                        min_samples_split=5, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features='sqrt',
                                        min_impurity_decrease=0.002,
                                        min_samples_split=15, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='True')),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features='sqrt',
                                        min_impurity_decrease=0.002,
                                        min_samples_split=15, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features='sqrt',
                                        min_impurity_decrease=0.002,
                                        min_samples_split=15, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features='sqrt',
                                        min_impurity_decrease=0.002,
                                        min_samples_split=15, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features='sqrt',
                                        min_impurity_decrease=0.002,
                                        min_samples_split=15, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features='sqrt',
                                        min_impurity_decrease=0.002,
                                        min_samples_split=15, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(max_features='sqrt',
                                        min_impurity_decrease=0.002,
                                        min_samples_split=15, n_estimators=1000,
                                        random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00025,
                                        random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='full')),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00025,
                                        random_state=42))])","Pipeline(steps=[('fastica',
                 FastICA(fun='exp', n_components=3, random_state=42,
                         whiten='False')),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00025,
                                        random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=1.0, degree=5, gamma=0.01, kernel='cosine',
                           n_components=10, random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00025,
                                        random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.01)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00025,
                                        random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00025,
                                        random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(gamma=0.1, random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00025,
                                        random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00025,
                                        random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=1.0, n_components=5, random_state=42,
                           ridge_alpha=0.5)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.75,
                                        min_impurity_decrease=0.00025,
                                        random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, miss...2, num_parallel_tree=1, objective='multi:softprob', predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=None, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('bernoullinb', BernoulliNB(alpha=10.0, binarize=0.9))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=10, min_samples_split=10,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.0005,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, gamma=100.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.01, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier', AdaBoostClassifier(random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_samples=0.6, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42, shrinking=False))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('svc',
                 SVC(C=10.0, coef0=50.0, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse='False')),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('polynomialfeatures',
                 PolynomialFeatures(degree=3, interaction_only=True)),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer(norm='max')),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('nusvc', NuSVC(nu=0.9, random_state=42, shrinking=False))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='False')),
                ('nusvc', NuSVC(nu=0.9, random_state=42, shrinking=False))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('nusvc', NuSVC(nu=0.9, random_state=42, shrinking=False))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('nusvc', NuSVC(nu=0.9, random_state=42, shrinking=False))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('nusvc', NuSVC(nu=0.9, random_state=42, shrinking=False))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('nusvc', NuSVC(nu=0.9, random_state=42, shrinking=False))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('fastica',
                 FastICA(algorithm='deflation', fun='cube', random_state=42,
                         whiten='False')),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=-1.0, gamma=0.01, kernel='rbf',
                           random_state=42)),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.1)),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('nmf', NMF(l1_ratio=0.7, random_state=42, tol=0.1)),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('nystroem',
                 Nystroem(degree=2, gamma=0.0001, kernel='cosine',
                          n_components=20, random_state=42)),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=1.0, random_state=42, ridge_alpha=0.5)),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('svc',
                 SVC(C=10.0, coef0=50.0, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('svc',
                 SVC(C=10.0, coef0=50.0, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('svc',
                 SVC(C=10.0, coef0=50.0, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('svc',
                 SVC(C=10.0, coef0=50.0, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('svc',
                 SVC(C=10.0, coef0=50.0, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('svc',
                 SVC(C=10.0, coef0=50.0, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('svc',
                 SVC(C=0.1, coef0=100.0, gamma=0.1, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse='False')),
                ('svc',
                 SVC(C=0.1, coef0=100.0, gamma=0.1, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures(degree=3)),
                ('svc',
                 SVC(C=0.1, coef0=100.0, gamma=0.1, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('svc',
                 SVC(C=10.0, coef0=50.0, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('svc',
                 SVC(C=10.0, coef0=50.0, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('svc',
                 SVC(C=10.0, coef0=50.0, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('svc',
                 SVC(C=10.0, coef0=50.0, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('svc',
                 SVC(C=10.0, coef0=50.0, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('svc',
                 SVC(C=10.0, coef0=50.0, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('svc',
                 SVC(C=10.0, coef0=50.0, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('svc',
                 SVC(C=50.0, coef0=50.0, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('svc',
                 SVC(C=50.0, coef0=50.0, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('svc',
                 SVC(C=50.0, coef0=50.0, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('svc',
                 SVC(C=50.0, coef0=50.0, gamma=10.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('svc',
                 SVC(C=10.0, coef0=50.0, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('svc',
                 SVC(C=10.0, coef0=50.0, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('svc',
                 SVC(C=10.0, coef0=50.0, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('svc',
                 SVC(C=10.0, coef0=50.0, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('svc',
                 SVC(C=10.0, coef0=50.0, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('svc',
                 SVC(C=10.0, coef0=50.0, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('svc',
                 SVC(C=10.0, coef0=50.0, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('svc',
                 SVC(C=10.0, coef0=50.0, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('svc',
                 SVC(C=10.0, coef0=50.0, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('svc',
                 SVC(C=10.0, coef0=50.0, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('svc',
                 SVC(C=10.0, coef0=50.0, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('svc',
                 SVC(C=10.0, coef0=50.0, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('svc',
                 SVC(C=10.0, coef0=50.0, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('svc',
                 SVC(C=10.0, coef0=50.0, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('svc',
                 SVC(C=10.0, coef0=50.0, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('svc',
                 SVC(C=10.0, coef0=50.0, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('svc',
                 SVC(C=10.0, coef0=50.0, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('svc',
                 SVC(C=100.0, gamma=1.0, probability=True, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='full')),
                ('svc',
                 SVC(C=100.0, gamma=1.0, probability=True, random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=-0.25, degree=5, gamma=0.001,
                           random_state=42)),
                ('svc',
                 SVC(C=100.0, gamma=1.0, probability=True, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.05)),
                ('svc',
                 SVC(C=100.0, gamma=1.0, probability=True, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.01)),
                ('svc',
                 SVC(C=100.0, gamma=1.0, probability=True, random_state=42))])","Pipeline(steps=[('nmf',
                 NMF(l1_ratio=0.5, n_components=10, random_state=42, tol=0.01)),
                ('svc',
                 SVC(C=100.0, gamma=1.0, probability=True, random_state=42))])","Pipeline(steps=[('nystroem',
                 Nystroem(degree=4, gamma=0.0001, kernel='poly',
                          n_components=20, random_state=42)),
                ('svc',
                 SVC(C=100.0, gamma=1.0, probability=True, random_state=42))])","Pipeline(steps=[('skewedchi2sampler',
                 SkewedChi2Sampler(n_components=50, random_state=42)),
                ('svc',
                 SVC(C=100.0, gamma=1.0, probability=True, random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=0.5, n_components=10, random_state=42)),
                ('svc',
                 SVC(C=100.0, gamma=1.0, probability=True, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        max_features='log2',
                                        min_impurity_decrease=0.00275,
                                        min_samples_leaf=5,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=0.75,
                                        min_impurity_decrease=0.0005,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('adaboostclassifier', AdaBoostClassifier(random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42, shrinking=False))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('svc',
                 SVC(C=10.0, coef0=50.0, gamma=50.0, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('svc',
                 SVC(C=10.0, coef0=0.5, gamma=0.5, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('svc',
                 SVC(C=10.0, coef0=0.5, gamma=0.5, kernel='poly',
                     probability=True, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures(degree=3)),
                ('svc',
                 SVC(C=10.0, coef0=0.5, gamma=0.5, kernel='poly',
                     probability=True, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('bernoullinb',
                 BernoulliNB(alpha=0.1, binarize=0.25, fit_prior=False))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=3,
                                        max_features=0.25,
                                        min_impurity_decrease=0.0015,
                                        min_samples_leaf=20,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=10, min_samples_split=10,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=20, p=1))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.4))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='goss',
                                colsample_bytree=0.6888888888888889,
                                learning_rate=0.17478877871816373,
                                min_child_samples=220, num_leaves=87,
                                random_state=42, reg_alpha=0.8979591836734693,
                                subsample=0.7828282828282829,
                                subsample_for_bin=40000))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=5, min_samples_split=15,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.0025,
                                        min_samples_leaf=5, random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.4,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.2, max_samples=0.8,
                                   random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_split=15, n_estimators=10,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features='sqrt',
                                        min_impurity_decrease=0.002,
                                        min_samples_leaf=5, n_estimators=10,
                                        random_state=42))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=1e-06, eta0=0.01, fit_intercept=False,
                               l1_ratio=0.25, learning_rate='invscaling',
                               max_iter=5, power_t=0.0, random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=10.0, coef0=1.0, gamma=0.01, kernel='sigmoid',
                     probability=True, random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.01, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.2))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42, shrinking=False))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.0001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.2,
                                   random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse='False')),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('nusvc',
                 NuSVC(kernel='linear', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('nusvc',
                 NuSVC(kernel='linear', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('nusvc',
                 NuSVC(kernel='linear', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('nusvc',
                 NuSVC(kernel='linear', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('isomap', Isomap()),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='full')),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=-1.0, gamma=0.01, kernel='rbf',
                           random_state=42)),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.1)),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('selectpercentile',
                 SelectPercentile(percentile=20,
                                  score_func=<function mutual_info_regression at 0x7f5193b3caf0>)),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('nmf',
                 NMF(l1_ratio=0.5, n_components=10, random_state=42,
                     tol=1e-05)),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=1.0, random_state=42, ridge_alpha=0.5)),
                ('nusvc', NuSVC(kernel='poly', nu=0.1, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('nusvc', NuSVC(nu=0.1, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('linearsvc',
                 LinearSVC(C=5.0, dual=False, fit_intercept=False, penalty='l1',
                           random_state=42, tol=0.1))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse='False')),
                ('linearsvc',
                 LinearSVC(C=5.0, dual=False, fit_intercept=False, penalty='l1',
                           random_state=42, tol=0.1))])","Pipeline(steps=[('normalizer', Normalizer(norm='l1')),
                ('linearsvc',
                 LinearSVC(C=5.0, dual=False, fit_intercept=False, penalty='l1',
                           random_state=42, tol=0.1))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('linearsvc',
                 LinearSVC(C=0.1, dual=False, fit_intercept=False, penalty='l1',
                           random_state=42, tol=0.01))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('linearsvc',
                 LinearSVC(C=0.1, dual=False, fit_intercept=False, penalty='l1',
                           random_state=42, tol=0.01))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('linearsvc',
                 LinearSVC(C=0.1, dual=False, fit_intercept=False, penalty='l1',
                           random_state=42, tol=0.01))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('linearsvc',
                 LinearSVC(C=0.1, dual=False, fit_intercept=False, penalty='l1',
                           random_state=42, tol=0.01))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('isomap', Isomap()),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('linearsvc', LinearSVC(random_state=42))])","Pipeline(steps=[('fastica',
                 FastICA(fun='cube', random_state=42, whiten='True')),
                ('linearsvc', LinearSVC(random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('linearsvc', LinearSVC(random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.01)),
                ('linearsvc', LinearSVC(random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.01)),
                ('linearsvc', LinearSVC(random_state=42))])","Pipeline(steps=[('selectpercentile',
                 SelectPercentile(percentile=50,
                                  score_func=<function f_regression at 0x7f5193b31310>)),
                ('linearsvc', LinearSVC(random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('linearsvc', LinearSVC(random_state=42))])","Pipeline(steps=[('nmf',
                 NMF(l1_ratio=1, n_components=10, random_state=42, tol=0.01)),
                ('linearsvc', LinearSVC(random_state=42))])","Pipeline(steps=[('nystroem',
                 Nystroem(degree=5, gamma=1.0, kernel='poly', n_components=5,
                          random_state=42)),
                ('linearsvc', LinearSVC(random_state=42))])","Pipeline(steps=[('skewedchi2sampler',
                 SkewedChi2Sampler(n_components=200, random_state=42)),
                ('linearsvc', LinearSVC(random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('linearsvc',
                 LinearSVC(fit_intercept=False, loss='hinge', random_state=42,
                           tol=0.01))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('linearsvc',
                 LinearSVC(dual=False, fit_intercept=False, random_state=42,
                           tol=0.001))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('linearsvc',
                 LinearSVC(dual=False, fit_intercept=False, random_state=42,
                           tol=0.001))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('linearsvc',
                 LinearSVC(dual=False, fit_intercept=False, random_state=42,
                           tol=0.001))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('linearsvc',
                 LinearSVC(dual=False, fit_intercept=False, random_state=42,
                           tol=0.001))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('linearsvc',
                 LinearSVC(dual=False, fit_intercept=False, random_state=42,
                           tol=0.001))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('linearsvc',
                 LinearSVC(dual=False, fit_intercept=False, random_state=42,
                           tol=0.001))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('linearsvc',
                 LinearSVC(dual=False, fit_intercept=False, random_state=42,
                           tol=0.001))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('linearsvc',
                 LinearSVC(dual=False, fit_intercept=False, random_state=42,
                           tol=0.001))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('linearsvc',
                 LinearSVC(dual=False, fit_intercept=False, random_state=42,
                           tol=0.001))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('linearsvc',
                 LinearSVC(dual=False, fit_intercept=False, random_state=42,
                           tol=0.001))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('linearsvc',
                 LinearSVC(dual=False, fit_intercept=False, random_state=42,
                           tol=0.001))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('linearsvc',
                 LinearSVC(dual=False, fit_intercept=False, random_state=42,
                           tol=0.001))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('onehotencoder', OneHotEncoder(sparse=False)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=20, min_samples_split=20,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=20, min_samples_split=20,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer(norm='max')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=20, min_samples_split=20,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features='log2', min_samples_split=15,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='True')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features='log2', min_samples_split=15,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features='log2', min_samples_split=15,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features='log2', min_samples_split=15,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features='log2', min_samples_split=15,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features='log2', min_samples_split=15,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.00475,
                                        min_samples_leaf=5, min_samples_split=5,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.001, eta0=50.0, l1_ratio=0.75,
                               loss='perceptron', max_iter=5,
                               penalty='elasticnet', power_t=10.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.2))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(random_state=42, shrinking=False))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.2))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.7, random_state=42, shrinking=False))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=None, min_samples_leaf=5,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=None, min_samples_leaf=5,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('polynomialfeatures',
                 PolynomialFeatures(interaction_only=True)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=None, min_samples_leaf=5,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=70, weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='none', random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=1e-05, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.8))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=1e-05, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.8))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('nusvc', NuSVC(kernel='linear', nu=0.3, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=15.0, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('logisticregression',
                 LogisticRegression(C=15.0, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('logisticregression',
                 LogisticRegression(C=15.0, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='True')),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=100, p=1,
                                      weights='distance'))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=1e-05, eta0=0.01, l1_ratio=1.0,
                               learning_rate='constant', loss='log', max_iter=5,
                               penalty='none', random_state=42, tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=1e-05, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.6))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=0, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.3, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='goss', colsample_bytree=0.6,
                                learning_rate=0.005432578873262691,
                                min_child_samples=470, num_leaves=110,
                                random_state=42, reg_alpha=0.42857142857142855,
                                subsample=0.8838383838383839,
                                subsample_for_bin=280000))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_split=5,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=100, p=1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=1e-05, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.6))])","Pipeline(steps=[('nusvc', NuSVC(nu=0.3, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('nusvc', NuSVC(nu=0.3, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('nusvc', NuSVC(nu=0.3, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('nusvc', NuSVC(nu=0.3, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('nusvc', NuSVC(nu=0.3, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('nusvc', NuSVC(nu=0.3, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(learning_rate=100.0,
                                            loss='exponential', max_depth=10,
                                            max_features=0.1,
                                            min_impurity_decrease=0.0005,
                                            n_estimators=500, random_state=42,
                                            subsample=0.05))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(criterion='entropy', max_depth=13,
                                        max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        min_samples_leaf=20,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_split=15, n_estimators=10,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.5, fit_intercept=False, penalty='none',
                                    random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(eta0=50.0, l1_ratio=1.0,
                               learning_rate='constant', loss='squared_hinge',
                               max_iter=5, penalty='none', power_t=100.0,
                               random_state=42, tol=None))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.01, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.5, min_samples_split=5,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy', max_features=None,
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.01, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=10.0,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=10.0,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('polynomialfeatures',
                 PolynomialFeatures(degree=3, interaction_only=True)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=10.0,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='False')),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=500,
                                    random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=3, max_features=0.75,
                                        min_impurity_decrease=0.0022500000000000003,
                                        min_samples_split=20,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=20, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features='log2',
                                        min_impurity_decrease=0.00025,
                                        min_samples_leaf=10,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('svc',
                 SVC(C=100.0, coef0=100.0, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.01, n_estimators=500,
                                    random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.2))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.8, max_samples=0.6,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='goss', colsample_bytree=0.6,
                                learning_rate=0.005432578873262691,
                                min_child_samples=470, num_leaves=110,
                                random_state=42, reg_alpha=0.42857142857142855,
                                subsample=0.8838383838383839,
                                subsample_for_bin=280000))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=5.0, fit_intercept=False,
                                    random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=100, random_state=42))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.1, fit_intercept=False,
                                 random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_samples=0.4, n_estimators=50,
                                   random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.1, min_samples_leaf=20,
                                      random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='True')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.1, min_samples_leaf=20,
                                      random_state=42))])","Pipeline(steps=[('polynomialfeatures',
                 PolynomialFeatures(degree=3, interaction_only=True)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.1, min_samples_leaf=20,
                                      random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=10, min_samples_split=20,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='True')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=10, min_samples_split=20,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=10, min_samples_split=20,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=10, min_samples_split=20,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.75,
                                      min_samples_leaf=10, min_samples_split=20,
                                      n_estimators=50, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=None, min_samples_leaf=10,
                                      min_samples_split=15, n_estimators=50,
                                      random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=100.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=3, max_features=0.75,
                                        min_impurity_decrease=0.0022500000000000003,
                                        min_samples_split=20,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=20, min_samples_split=5,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=100, p=1,
                                      weights='distance'))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(10, 5), random_state=42,
                               solver='lbfgs'))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.2))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=5, max_features=0.75,
                                        min_impurity_decrease=0.00275,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features=0.25,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5,
                                        min_samples_split=15, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.2))])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.8,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pipeline(steps=[('bernoullinb', BernoulliNB(binarize=0.75, fit_prior=False))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=10.0))])","Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(max_depth=15, max_features=0.1,
                                        min_impurity_decrease=0.003,
                                        min_samples_leaf=15,
                                        min_samples_split=15,
                                        random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=None,
                                      min_samples_leaf=15, min_samples_split=10,
                                      n_estimators=500, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.75,
                                        min_impurity_decrease=0.0045000000000000005,
                                        min_samples_leaf=15, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=25.0, fit_intercept=False, random_state=42,
                           tol=0.01))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(fit_intercept=False, random_state=42))])","Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.01, eta0=10.0, l1_ratio=0.9,
                               learning_rate='invscaling', loss='squared_hinge',
                               max_iter=5, penalty='none', random_state=42,
                               tol=None))])","Pipeline(steps=[('svc',
                 SVC(C=0.5, coef0=1.0, degree=2, gamma='auto', probability=True,
                     random_state=42))])","Pipeline(steps=[('perceptron', Perceptron(penalty='l2', random_state=42))])","Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='logistic', alpha=0.01,
                               hidden_layer_sizes=(5, 10), random_state=42,
                               solver='sgd'))])","Pipeline(steps=[('passiveaggressiveclassifier',
                 PassiveAggressiveClassifier(C=0.001, loss='squared_hinge',
                                             random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(algorithm='SAMME', learning_rate=0.5,
                                    n_estimators=10, random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis())])","Pipeline(steps=[('ridgeclassifier',
                 RidgeClassifier(alpha=0.0001, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.2,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('nusvc',
                 NuSVC(kernel='poly', nu=0.1, random_state=42,
                       shrinking=False))])","Pipeline(steps=[('lightGBM',
                 LGBMClassifier(boosting_type='dart',
                                colsample_bytree=0.7777777777777778,
                                learning_rate=0.01634874872255883,
                                min_child_samples=275, num_leaves=26,
                                random_state=42, reg_alpha=0.5714285714285714,
                                subsample=0.7676767676767677,
                                subsample_for_bin=140000))])","Pipeline(steps=[('multinomialnb', MultinomialNB(alpha=0.1))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=10,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))])","Pipeline(steps=[('linearsvc',
                 LinearSVC(C=0.5, fit_intercept=False, random_state=42,
                           tol=0.1))])","Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=15.0, penalty='none', random_state=42))])","Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.5, n_estimators=100,
                                    random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.2))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.4, max_samples=0.4,
                                   n_estimators=50, random_state=42))])","Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(max_features='sqrt',
                                        min_impurity_decrease=0.00375,
                                        min_samples_leaf=10,
                                        min_samples_split=10, n_estimators=50,
                                        random_state=42))])","Pipeline(steps=[('gaussiannb', GaussianNB())])","Pipeline(steps=[('quadraticdiscriminantanalysis',
                 QuadraticDiscriminantAnalysis(reg_param=0.2))])","Pipeline(steps=[('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(max_features=0.6, max_samples=0.6,
                                   n_estimators=100, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.01, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.01, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer(standardize='False')),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.01, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.001, random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='False')),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.001, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.001, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.001, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.1, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='full')),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.1, random_state=42))])","Pipeline(steps=[('fastica',
                 FastICA(algorithm='deflation', fun='cube', random_state=42,
                         whiten='False')),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.1, random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=-1.0, degree=4, gamma=0.01, random_state=42)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.1, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest(k=5)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.1, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.01)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.1, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.01)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.1, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.1, random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=2.0, n_components=10, random_state=42,
                           ridge_alpha=0.5)),
                ('ridgeclassifier',
                 RidgeClassifier(alpha=0.1, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=32, num_parallel_tree=1, objective='multi:softprob', predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=None, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('ridgeclassifier', RidgeClassifier(alpha=1, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.5,
                                      min_samples_split=10, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('powertransformer',
                 PowerTransformer(method='box-cox', standardize='False')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.5,
                                      min_samples_split=10, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.5,
                                      min_samples_split=10, n_estimators=500,
                                      random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='False', with_std='False')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, n_estimators=50,
                                      random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.5,
                                      min_samples_leaf=5, min_samples_split=10,
                                      random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42, svd_solver='full')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.5,
                                      min_samples_leaf=5, min_samples_split=10,
                                      random_state=42))])","Pipeline(steps=[('fastica',
                 FastICA(algorithm='deflation', n_components=10,
                         random_state=42, whiten='False')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.5,
                                      min_samples_leaf=5, min_samples_split=10,
                                      random_state=42))])","Pipeline(steps=[('kernelpca',
                 KernelPCA(coef0=-0.25, degree=2, gamma=2.0, n_components=10,
                           random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.5,
                                      min_samples_leaf=5, min_samples_split=10,
                                      random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.5,
                                      min_samples_leaf=5, min_samples_split=10,
                                      random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold(threshold=0.05)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.5,
                                      min_samples_leaf=5, min_samples_split=10,
                                      random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination(var_threshold_value=0.05)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.5,
                                      min_samples_leaf=5, min_samples_split=10,
                                      random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.5,
                                      min_samples_leaf=5, min_samples_split=10,
                                      random_state=42))])","Pipeline(steps=[('sparsepca',
                 SparsePCA(alpha=0.5, n_components=10, random_state=42)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.5,
                                      min_samples_leaf=5, min_samples_split=10,
                                      random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('multinomialnbfeature',
                 ModelbasedFeatureGenerator(estimator=MultinomialNB())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('decisiontreeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=DecisionTreeClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('gradientboostingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=GradientBoostingClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('kneighborsclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=KNeighborsClassifier())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('logisticregressionfeature',
                 ModelbasedFeatureGenerator(estimator=LogisticRegression(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('xgbclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1, enable_categorical=False, gamma=0, gpu_id=-1, importance_type=None, interaction_constraints='', learning_rate=0.300000012, max_delta_step=0, max_depth=6, min_child_weight=1, miss..., n_jobs=32, num_parallel_tree=1, objective='multi:softprob', predictor='auto', random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=None, subsample=1, tree_method='exact', validate_parameters=1, verbosity=None))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('sgdclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=SGDClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('mlpclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=MLPClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('adaboostclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=AdaBoostClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('lineardiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=LinearDiscriminantAnalysis())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('quadraticdiscriminantanalysisfeature',
                 ModelbasedFeatureGenerator(estimator=QuadraticDiscriminantAnalysis())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('baggingclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=BaggingClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.25,
                                      min_samples_split=5, n_estimators=1000,
                                      random_state=42))])","Pipeline(steps=[('skipmodelfeaturegeneration', NoOp()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.1, min_samples_split=15,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('bernoullinbfeature',
                 ModelbasedFeatureGenerator(estimator=BernoulliNB())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.1, min_samples_split=15,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('extratreesclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=ExtraTreesClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.1, min_samples_split=15,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('randomforestclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RandomForestClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.1, min_samples_split=15,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('linearsvcfeature',
                 ModelbasedFeatureGenerator(estimator=LinearSVC(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.1, min_samples_split=15,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('svcfeature',
                 ModelbasedFeatureGenerator(estimator=SVC(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.1, min_samples_split=15,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('perceptronfeature',
                 ModelbasedFeatureGenerator(estimator=Perceptron(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.1, min_samples_split=15,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('passiveaggressiveclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=PassiveAggressiveClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.1, min_samples_split=15,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('gaussiannbfeature',
                 ModelbasedFeatureGenerator(estimator=GaussianNB())),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.1, min_samples_split=15,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('ridgeclassifierfeature',
                 ModelbasedFeatureGenerator(estimator=RidgeClassifier(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.1, min_samples_split=15,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('kmeanclusterfeature',
                 ModelbasedFeatureGenerator(estimator=KMeans(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.1, min_samples_split=15,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('nusvcfeature',
                 ModelbasedFeatureGenerator(estimator=NuSVC(random_state=42))),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.1, min_samples_split=15,
                                      n_estimators=1000, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('powertransformer', PowerTransformer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('polynomialfeatures', PolynomialFeatures()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('normalizer', Normalizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('skiptransformation', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.25,
                                        min_impurity_decrease=0.002,
                                        min_samples_split=5, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('discretizer', KBinsDiscretizer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.25,
                                        min_impurity_decrease=0.002,
                                        min_samples_split=5, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('powertransformer',
                 PowerTransformer(method='box-cox', standardize='True')),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.25,
                                        min_impurity_decrease=0.002,
                                        min_samples_split=5, n_estimators=500,
                                        random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('standardscaler', StandardScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('skipscaling', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.25,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('standardscaler',
                 StandardScaler(with_mean='True', with_std='False')),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.25,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('minmaxscaler', MinMaxScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.25,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('maxabsscaler', MaxAbsScaler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.25,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('robustscaler', RobustScaler(quantile_range=(25, 75))),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.25,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('quantilescalinguniform',
                 QuantileTransformer(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.25,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('quantilescalingnormal',
                 QuantileTransformer(output_distribution='normal',
                                     random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.25,
                                        min_impurity_decrease=0.00375,
                                        min_samples_split=10,
                                        random_state=42))])","Pipeline(steps=[('skipfeaturepreprocessing', NoOp()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('pca', PCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('fastica', FastICA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('kernelpca', KernelPCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('selectkbest', SelectKBest()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('variancethreshold', VarianceThreshold()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('lowvariancefeatureelimination',
                 LowVarianceFeatureElimination()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('selectpercentile', SelectPercentile()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('rbfsampler', RBFSampler(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('additivechi2sampler', AdditiveChi2Sampler()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('nmf', NMF(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('nystroem', Nystroem(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('truncatedsvd', TruncatedSVD(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('skewedchi2sampler', SkewedChi2Sampler(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('sparsepca', SparsePCA(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('isomap', Isomap()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('locallylinearembedding',
                 LocallyLinearEmbedding(random_state=42)),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])","Pipeline(steps=[('featureagglomeration', FeatureAgglomeration()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, max_features=0.1,
                                        min_impurity_decrease=0.00175,
                                        n_estimators=1000, random_state=42))])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
